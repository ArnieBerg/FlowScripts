{
  "GlobalFlowScripts": [
    {
      "FlowScriptName": "ONT-Flu",
      "TestConfig": {},
      "SubmissionTimeStamp": "1014075250",
      "LockUsername": null,
      "Comment": "The Salmonella FlowScript functions to predict Salmonella serotypes from raw Nanopore sequencing data. The pipeline uses flye to assemble the long reads, medaka for genome polishing, and SISTR for in-silico serotyping. When complete, the pipeline produces a single \u0027sistr_res_aggregate\u0027 file that aggregates the results from all the included samples.",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "PDS2100454-1": "1[S]/mnt/e/data/Dreamer/FluA/2021/InfASeq_Flongle_5samples_8Jan21_DP/PDS2100454_InfAseq_5samples_flongle/20210108_1415_X3_AFC781_40df58e7/fastq_pass/PDS2100454-1/",
        "PDS2100454-1_rep": "1[S]/mnt/e/data/Dreamer/FluA/2021/InfASeq_Flongle_5samples_8Jan21_DP/PDS2100454_InfAseq_5samples_flongle/20210108_1415_X3_AFC781_40df58e7/fastq_pass/PDS2100454-1_rep/",
        "PDS2100454-2": "1[S]/mnt/e/data/Dreamer/FluA/2021/InfASeq_Flongle_5samples_8Jan21_DP/PDS2100454_InfAseq_5samples_flongle/20210108_1415_X3_AFC781_40df58e7/fastq_pass/PDS2100454-2/",
        "PDS2100454-3": "1[S]/mnt/e/data/Dreamer/FluA/2021/InfASeq_Flongle_5samples_8Jan21_DP/PDS2100454_InfAseq_5samples_flongle/20210108_1415_X3_AFC781_40df58e7/fastq_pass/PDS2100454-3/",
        "PDS2100454-4": "1[S]/mnt/e/data/Dreamer/FluA/2021/InfASeq_Flongle_5samples_8Jan21_DP/PDS2100454_InfAseq_5samples_flongle/20210108_1415_X3_AFC781_40df58e7/fastq_pass/PDS2100454-4/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "hpsuis",
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "/mnt/e/data/database/hpsuis",
      "SequenceDBPath": "/mnt/e/data/database/hpsuis/hpsuis.fasta",
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": null,
      "IsLinux": false,
      "CanRunInLinux": false,
      "DockerBaseImage": null,
      "Parameters": "ONT-Flu_Tree@[Bootstraps=1000]\r\nONT-Flu_Tree@[Threads=16]\r\nONT-Flu_Tree@[Phylo=--phylo]\r\n",
      "OutputPath": "[S]E:\\data\\Jimmy\\wf-flu_val\\wf-flu_test\\",
      "StartWithScript": null,
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "ONT-Flu",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "",
              "FlowScriptToken": null,
              "Command": "# create a symlink of data dir organized by barcodes\r\nmkdir $[O.]/data\r\n\r\nwhile read lines; do \r\nid=$(echo $lines | cut -f1 -d\u0027,\u0027)\r\npath=$(echo $lines | cut -f2 -d\u0027,\u0027)\r\n#barcode=$(ls $path | head -n1 | cut -f3 -d\u0027_\u0027)\r\nln -s $path $[O.]data/$id\r\necho ${id} \u003E\u003E $[O.]samples.csv\r\ndone \u003C $[O.]SampleList.csv\r\n\r\n# add column headers to samples.csv\r\nsed -i \u00271isample_id\u0027 $[O.]samples.csv\r\n\r\n# call wf-flu\r\nnextflow run epi2me-labs/wf-flu -r v0.0.3 \\\r\n--fastq $[O.]data \\\r\n--out_dir $[O.] \\\r\n--sample_sheet $[O.]samples.csv \\\r\n--downsample @[Downsample=1000] \\\r\n--min_coverage @[Min_coverage=30] \\\r\n@[Resume=-resume] \\\r\n-with-tower\r\n\r\n# filter highly incomplete sequences in draft consensus\r\nwhile read lines; do\r\nid=$(echo $lines | cut -f2 -d\u0027,\u0027)\r\nconda run -n seqkit-2.2.0 seqkit fx2tab -C N $[O.]$id.draft.consensus.fasta | awk \u0027$3 \u003C= 100\u0027 \u003E $[O.]$id.draft.consensus.tab\r\nconda run -n seqkit-2.2.0 seqkit tab2fx $[O.]$id.draft.consensus.tab \u003E $[O.]$id.draft.consensus.fasta\r\nrm $[O.]$id.draft.consensus.tab\r\ndone \u003C \u003C(tail -n \u002B2 $[O.]samples.csv)\r\n",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": null,
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": null,
            "OmitStep": false,
            "LastUpdate": "2022-10-13T16:10:15.5982251-06:00",
            "LastAuthor": "SQA032",
            "ScriptParmsList": [
              {
                "ModuleName": "ONT-Flu",
                "ParmName": "Min_coverage",
                "DefaultValue": "30",
                "UserValue": "30",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "ONT-Flu",
                "ParmName": "Resume",
                "DefaultValue": "-resume",
                "UserValue": "-resume",
                "Description": "Resume the previous run.",
                "ComboValues": "-resume",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "ONT-Flu",
                "ParmName": "Downsample",
                "DefaultValue": "1000",
                "UserValue": "1000",
                "Description": "Number of reads to downsample to when generating consensus.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "ONT-Flu_Publish",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "",
              "FlowScriptToken": null,
              "Command": "# create dir structure\r\nmkdir $[O.]reports\r\n\r\n# copy general files\r\ncp -r $[I{ONT-Flu}.]execution $[O.]pipeline_info\r\ncp $[I{ONT-Flu}.]wf-flu-report.html $[O.]reports\r\ncp $[I{ONT-Flu}.]wf-flu-results.csv $[O.]\r\n\r\n# create sample dirs and copy outputs\r\nwhile read lines; do\r\nid=$(echo $lines | cut -f2 -d\u0027,\u0027)\r\nmkdir $[O.]$id\r\ncp $[I{ONT-Flu}.]$id.* $[O.]$id/\r\ndone \u003C \u003C($[I.]samples.csv)\r\n\r\n# copy tree output if exists\r\nif test -d $[I{ONT-Flu_Tree}.]tree; then\r\nfor i in $(ls $[I{ONT-Flu_Tree}.]tree); do\r\nfor j in $(ls $[I{ONT-Flu_Tree}.]tree/$i); do\r\nif test -f $[I{ONT-Flu_Tree}.]tree/$i/$j/$j.raxml.support; then\r\nmkdir -p $[O.]tree/$i/$j\r\ncp $[I{ONT-Flu_Tree}.]tree/$i/$j/$j.raxml.support $[O.]tree/$i/$j/$j.nwk\r\nfi\r\ndone\r\ndone\r\nfi",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": false,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "ONT-Flu",
                "ONT-Flu_Tree"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": null,
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": null,
            "OmitStep": false,
            "LastUpdate": "2022-10-13T16:51:26.6615884-06:00",
            "LastAuthor": "SQA032",
            "ScriptParmsList": [],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "ONT-Flu_Tree",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "",
              "FlowScriptToken": null,
              "Command": "# exit if any command fails\r\nset -e\r\n\r\n# run the following build tree steps only if --phylo is invoked\r\n\r\nif [[ @[Phylo=--phylo] == \u0022--phylo\u0022 ]]; then\r\n\r\necho \u0022Building phylogenetic tree from vcf outputs generated by wf-flu...\u0022\r\n\r\n# create tree workdir\r\nmkdir $[O.]tree\r\n\r\n# organize and process vcf by subtypes\r\n# ignore mixed subtypes\r\n\r\n## create species and H subtype work dir\r\nsubtypes=$(conda run -n seqkit-2.2.0 seqkit seq -ni $[I.]*.fasta | grep HA | sed \u0027s/HA_//g\u0027 | sort -u)\r\nfor i in $subtypes; do \r\nspecies=$(echo $i | cut -f1 -d\u0027_\u0027)\r\nsubtype=$(echo $i | cut -f2 -d\u0027_\u0027)\r\nmkdir -p $[O.]tree/$species/$subtype\r\ndone\r\n\r\n## get sample ids of each H subtype and species\r\nfor i in $(ls $[O.]tree); do\r\nfor j in $(ls $[O.]tree/$i); do\r\nfor x in $(ls $[I.] | grep fasta); do\r\n# test if consensus fasta contains complete sequence of query H subtype\r\n# if yes, add sample id to sample list in query H subtype work dir\r\nif grep -q ${i}_HA_$j $[I.]$x; then\r\necho $(basename $x .draft.consensus.fasta) \u003E\u003E $[O.]tree/$i/$j/samples.txt\r\nfi\r\ndone\r\ndone\r\ndone\r\n\r\n## extract reference sequence of each H subtype\r\n### download master reference seqs from wf-flu Git repo\r\ngit -C $[O.] clone --single-branch --depth 1 https://github.com/epi2me-labs/wf-flu.git\r\nln -s $[O.]/wf-flu/data/primer_schemes/V1/consensus_irma.fasta $[O.]flu_refs.fa\r\n### extract H refs by subtypes in tree work dir (i is species; j is H subtype)\r\nfor i in $(ls $[O.]tree); do\r\nfor j in $(ls $[O.]tree/$i); do\r\n## proceed only if samples.txt contains 4 or more samples\r\nif [[ $(cat $[O.]tree/$i/$j/samples.txt | wc -l) -ge 4 ]]; then\r\nconda run -n samtools-1.9 samtools faidx $[O.]flu_refs.fa ${i}_HA_$j \u003E $[O.]tree/$i/$j/ref.fa\r\nfi\r\ndone\r\ndone\r\n\r\n## organize and process vcf files in each species and H subtype sub dir\r\n\r\n### set up\r\n#### pull vcf2msa python script\r\ngit -C $[O.] clone --single-branch --depth 1 https://github.com/edgardomortiz/vcf2phylip.git\r\n\r\n## (i is species; j is H subtype)\r\nfor i in $(ls $[O.]tree); do\r\nfor j in $(ls $[O.]tree/$i); do\r\n# proceed only if samples.txt contains 4 or more samples\r\nif [[ $(cat $[O.]tree/$i/$j/samples.txt | wc -l) -ge 4 ]]; then\r\n## consolidate vcf to a single dir\r\nwhile read lines; do\r\n### create sub dir to keep all vcf files\r\nmkdir -p $[O.]tree/$i/$j/vcf\r\n### rename sample name and bgzip vcf\r\ncat $[I.]$lines.annotate.filtered.vcf | sed \u0022s/SAMPLE$/$lines/g\u0022 | bgzip -c \u003E $[O.]tree/$i/$j/vcf/$lines.vcf.gz\r\n### filter variants in HA region only\r\nconda run -n bcftools bcftools view -Oz -r ${i}_HA_${j} $[O.]tree/$i/$j/vcf/$lines.vcf.gz \u003E $[O.]tree/$i/$j/vcf/$lines.vcf.gz.tmp \u0026\u0026 \\\r\nmv $[O.]tree/$i/$j/vcf/$lines.vcf.gz.tmp $[O.]tree/$i/$j/vcf/$lines.vcf.gz\r\n### index zipped vcf\r\ntabix -h -f -p vcf $[O.]tree/$i/$j/vcf/$lines.vcf.gz\r\ndone \u003C $[O.]tree/$i/$j/samples.txt\r\n\r\n## merge vcf with bcftools\r\nconda run -n bcftools bcftools merge -Oz $[O.]tree/$i/$j/vcf/*.vcf.gz -o $[O.]tree/$i/$j/combined.vcf.gz\r\nconda run -n bcftools bcftools index $[O.]tree/$i/$j/combined.vcf.gz\r\n## create msa from combined vcf\r\n### call vcf2msa.py\r\n### output: combined.$min_n.fasta\r\nmin_n=$(cat $[O.]tree/$i/$j/samples.txt | wc -l)\r\nconda run -n vcf2msa python $[O.]vcf2phylip/vcf2phylip.py -i $[O.]tree/$i/$j/combined.vcf.gz -m $min_n --output-folder $[O.]tree/$i/$j --fasta\r\n## run modeltest-ng to select best model\r\nconda run -n modeltest-ng modeltest-ng --input $[O.]tree/$i/$j/combined.min$min_n.fasta --output $[O.]tree/$i/$j/modeltest -p @[Threads=16]\r\nmodel=$(cat $[O.]tree/$i/$j/modeltest.out | grep Model: | head -n1 | sed \u0027s/ //g\u0027 | cut -f2 -d\u0027:\u0027)\r\n## build tree with raxml-ng using the best model\r\nconda run -n raxmlng raxml-ng --all --tree pars{10} --bs-trees @[Bootstraps=1000] --msa $[O.]tree/$i/$j/combined.min$min_n.fasta --model ${model} --prefix $[O.]tree/$i/$j/$j --threads @[Threads=16]\r\nfi\r\ndone\r\ndone\r\n\r\n# clean up git repos\r\nrm -rf $[O.]/wf-flu\r\nrm -rf $[O.]vcf2phylip/\r\n\r\nelse\r\necho \u0022Skipping phylogenetic analysis...\u0022\r\nfi",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "ONT-Flu"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": null,
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": null,
            "OmitStep": false,
            "LastUpdate": "2022-10-14T11:49:37.4165427-06:00",
            "LastAuthor": "SQA032",
            "ScriptParmsList": [
              {
                "ModuleName": "ONT-Flu_Tree",
                "ParmName": "Bootstraps",
                "DefaultValue": "1000",
                "UserValue": "1000",
                "Description": "Number of bootstrap replicates to run.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "ONT-Flu_Tree",
                "ParmName": "Threads",
                "DefaultValue": "16",
                "UserValue": "16",
                "Description": "Number of CPU threads to allocate for analysis.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "ONT-Flu_Tree",
                "ParmName": "Phylo",
                "DefaultValue": "--phylo",
                "UserValue": "--phylo",
                "Description": "Run phylogenetic analysis.",
                "ComboValues": "--phylo",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2022-11-08T13:17:19.8289769-06:00",
      "LastAuthor": "SQA032",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [
        {
          "CommandToken": "D1C1",
          "FlowScriptToken": "SamnSero",
          "Command": "echo 1812676-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1812676-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv\necho 1827333-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1827333-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv\necho 1830060-2,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1830060-2/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv\necho 1903031-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1903031-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv\necho 1921247-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1921247-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv\necho 2005045-2,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/2005045-2/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv\nnextflow run jimmyliu1326/SamnSero_Nextflow -r v1.1 --input /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv --outdir /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/ --annot --qc --notrim   ",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        },
        {
          "CommandToken": "D1C2",
          "FlowScriptToken": "BuscoConsolidate",
          "Command": "echo 1812676-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1812676-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv\necho 1827333-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1827333-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv\necho 1830060-2,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1830060-2/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv\necho 1903031-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1903031-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv\necho 1921247-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1921247-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv\necho 2005045-2,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/2005045-2/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv\nconda run -n busco busco -m genome -f -i /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/assembly/ --out_path /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/ -o BuscoSummary -l bacteria_odb10\n\nwhile read -r line\ndo \n   IFS=\u0027,\u0027 read -ra my_array \u003C\u003C\u003C \u0022$line\u0022\n   echo \u0022Remove ${my_array[0]} subfolders.\u0022\n   rm -rf /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/BuscoSummary/\u0022${my_array[0]}\u0022.fasta/logs\n   rm -rf /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/BuscoSummary/\u0022${my_array[0]}\u0022.fasta/prodigal_output\n   rm -rf /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/BuscoSummary/\u0022${my_array[0]}\u0022.fasta/run_bacteria_odb10\ndone \u003C /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [
            "D1C1"
          ],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        }
      ],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "BuscoFlow",
      "TestConfig": {},
      "SubmissionTimeStamp": "0524071250",
      "LockUsername": null,
      "Comment": "",
      "DataSourceType": 0,
      "SerializeDataSteps": false,
      "SampleList": {
        "BuscoData": "1[S]/mnt/e/data/Arnie/BuscoData/contigs.fa"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": null,
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": null,
      "SequenceDBPath": null,
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": null,
      "IsLinux": true,
      "CanRunInLinux": true,
      "DockerBaseImage": "bioseqenv.0.3",
      "Parameters": "Busco@[lineage=bacteria_odb10]\r\nBusco@[OmitStep=False]\r\nBusco@[PublishOutput=True]\r\nBusco@[IgnoreError=False]\r\nBusco@[IncludeOutput=True]\r\nBusco@[IsDocker=True]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\BuscoResults\\",
      "StartWithScript": null,
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "Busco",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C1",
              "FlowScriptToken": null,
              "Command": "conda run -n busco busco -m genome -f -i $[D.[SamplePath]] --out_path $[O.] -o $[V.[SampleName]] -l @[lineage=proteobacteria_odb10]\r\nrm -rf $[O.]$[V.[SampleName]]/logs\r\nrm -rf $[O.]$[V.[SampleName]]/prodigal_output\r\nrm -rf $[O.]$[V.[SampleName]]/run_@[lineage=proteobacteria_odb10]\r\n",
              "IsNoop": false,
              "CondaPrefix": "busco",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": true,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": null,
            "OmitStep": false,
            "LastUpdate": "2022-04-29T06:08:19.4067173-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Busco",
                "ParmName": "lineage",
                "DefaultValue": "proteobacteria_odb10",
                "UserValue": "bacteria_odb10",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 8,
                "Validator": null,
                "Extensions": "",
                "MissingValue": null,
                "Public": false
              },
              {
                "ModuleName": "Busco",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Busco",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Busco",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Busco",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Busco",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2023-05-24T07:17:48.1181288-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": false,
      "InterfaceAdaptive": false,
      "CommandList": [],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "BuscoFlowConsolidated",
      "TestConfig": {},
      "SubmissionTimeStamp": "0524073455",
      "LockUsername": null,
      "Comment": "",
      "DataSourceType": 0,
      "SerializeDataSteps": false,
      "SampleList": {
        "1812676-1": "0[S]/mnt/e/data/Arnie/Salmonella_assembly_data/1812676-1.fasta",
        "1827333-1": "0[S]/mnt/e/data/Arnie/Salmonella_assembly_data/1827333-1.fasta",
        "1830060-2": "0[S]/mnt/e/data/Arnie/Salmonella_assembly_data/1830060-2.fasta",
        "1903031-1": "0[S]/mnt/e/data/Arnie/Salmonella_assembly_data/1903031-1.fasta",
        "1921247-1": "0[S]/mnt/e/data/Arnie/Salmonella_assembly_data/1921247-1.fasta",
        "2005045-2": "0[S]/mnt/e/data/Arnie/Salmonella_assembly_data/2005045-2.fasta",
        "PDS2220808-11_201127A": "1[S]/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/DragonFlye_Assembly/D2C8/PDS2220808-11_201127A/PDS2220808-11_201127A_contigs.fasta"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": null,
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": null,
      "SequenceDBPath": null,
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": {},
      "IsLinux": false,
      "CanRunInLinux": true,
      "DockerBaseImage": "bioseqenv.0.3",
      "Parameters": "BuscoConsolidate@[lineage=bacteria_odb10]\r\nBuscoConsolidate@[OmitStep=False]\r\nBuscoConsolidate@[PublishOutput=True]\r\nBuscoConsolidate@[IgnoreError=False]\r\nBuscoConsolidate@[IncludeOutput=True]\r\nBuscoConsolidate@[IsDocker=True]\r\nBuscoPrep@[OmitStep=False]\r\nBuscoPrep@[PublishOutput=False]\r\nBuscoPrep@[IgnoreError=False]\r\nBuscoPrep@[IncludeOutput=True]\r\nBuscoPrep@[IsDocker=False]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\BuscoResults\\",
      "StartWithScript": null,
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "BuscoPrep",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D7C1",
              "FlowScriptToken": null,
              "Command": "echo \u0022BuscoPrep\u0022\r\n# Copy all fasta files listed in samplelist.csv into the AllSamples folder.\r\nmkdir $[O.]AllSamples\r\nwhile read -r line\r\ndo \r\n   IFS=\u0027,\u0027 read -ra my_array \u003C\u003C\u003C \u0022$line\u0022\r\n   echo \u0022Copy ${my_array[1]}\u0022\r\n   cp \u0022${my_array[1]}\u0022 $[O.]AllSamples/.\r\ndone \u003C $[O.]SampleList.csv",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": "D7C1",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-07-03T09:54:10.7200847-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "BuscoPrep",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuscoPrep",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuscoPrep",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuscoPrep",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuscoPrep",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": "task BuscoPrep {\r\n  input {\r\n }\r\n  command \u003C\u003C\u003C\r\n  echo \u0022BuscoPrep\u0022\r\n# Copy all fasta files listed in samplelist.csv into the AllSamples folder.\r\nmkdir AllSamples\r\nwhile read -r line\r\ndo \r\n   IFS=\u0027,\u0027 read -ra my_array \u003C\u003C\u003C \u0022$line\u0022\r\n   echo \u0022Copy ${my_array[1]}\u0022\r\n   cp \u0022${my_array[1]}\u0022 AllSamples/.\r\ndone \u003C samplelist.csv \u003E\u003E\u003E\r\n  output {\r\n    }\r\n}\r\n",
            "WDL_Task_Inputs": [],
            "WDL_Task_Outputs": [],
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "BuscoConsolidate",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D7C2",
              "FlowScriptToken": null,
              "Command": "conda run -n busco busco -m genome -f -i $[I{BuscoPrep}.]AllSamples/ --out_path $[O.] -o BuscoSummary -l @[lineage=bacteria_odb10]\r\n\r\nwhile read -r line\r\ndo \r\n   IFS=\u0027,\u0027 read -ra my_array \u003C\u003C\u003C \u0022$line\u0022\r\n   echo \u0022Remove ${my_array[0]} subfolders.\u0022\r\n   #echo \u0022rm -rf $[O.]BuscoSummary/${my_array[0]}_contigs.fasta/logs\u0022\r\n   rm -rf \u0022$[O.]BuscoSummary/${my_array[0]}_contigs.fasta/logs\u0022\r\n   rm -rf \u0022$[O.]BuscoSummary/${my_array[0]}_contigs.fasta/prodigal_output\u0022\r\n   rm -rf \u0022$[O.]BuscoSummary/${my_array[0]}_contigs.fasta/run_@[lineage=proteobacteria_odb10]\u0022\r\ndone \u003C $[O.]SampleList.csv",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "BuscoPrep",
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-07-04T07:28:31.3519837-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "BuscoConsolidate",
                "ParmName": "lineage",
                "DefaultValue": "proteobacteria_odb10",
                "UserValue": "bacteria_odb10",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 8,
                "Validator": null,
                "Extensions": "",
                "MissingValue": null,
                "Public": false
              },
              {
                "ModuleName": "BuscoConsolidate",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuscoConsolidate",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuscoConsolidate",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuscoConsolidate",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuscoConsolidate",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2023-05-24T08:15:56.2536198-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": false,
      "InterfaceAdaptive": false,
      "CommandList": [
        {
          "CommandToken": "D7C1",
          "FlowScriptToken": "BuscoPrep",
          "Command": "touch /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/BuscoFlowConsolidated_0524071829/D7C1/SampleList.csv \u0026\u0026 rm /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/BuscoFlowConsolidated_0524071829/D7C1/SampleList.csv\ntouch /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/BuscoFlowConsolidated_0524071829/D7C1/SequenceList.csv \u0026\u0026 rm /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/BuscoFlowConsolidated_0524071829/D7C1/SequenceList.csv\necho consensus,/mnt/e/data/Arnie/CANSResults/2036822-3/consensus/consensus.fa \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/BuscoFlowConsolidated_0524071829/D7C1/SampleList.csv\necho TracyResults,/mnt/e/data/Arnie/TracyResults/R1_A3_barcode15_contigs.fasta \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/BuscoFlowConsolidated_0524071829/D7C1/SampleList.csv\necho \u0022BuscoPrep\u0022\n# Copy all fasta files listed in samplelist.csv into the AllSamples folder.\nmkdir /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/BuscoFlowConsolidated_0524071829/D7C1/AllSamples\nwhile read -r line\ndo \n   IFS=\u0027,\u0027 read -ra my_array \u003C\u003C\u003C \u0022$line\u0022\n   echo \u0022Copy ${my_array[1]}\u0022\n   cp \u0022${my_array[1]}\u0022 /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/BuscoFlowConsolidated_0524071829/D7C1/AllSamples/.\ndone \u003C /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/BuscoFlowConsolidated_0524071829/D7C1/samplelist.csv\n",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": "  call BuscoPrep as D7C1 {\r\n    input\r\n   }\r\n"
        }
      ],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "DashingFlow",
      "TestConfig": {},
      "SubmissionTimeStamp": "0604075124",
      "LockUsername": null,
      "Comment": "",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "2.Thompson.Run4": "1[S]/mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Objective2-Run4_NonAdaptive_15Dec22/Objective2-Run4_NonAdaptive_15Dec22/20221215_1215_X2_FAV71906_63db05c7/fastq_pass/2.Thompson.Run4/",
        "3.Mbandaka.Run4": "1[S]/mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Objective2-Run4_NonAdaptive_15Dec22/Objective2-Run4_NonAdaptive_15Dec22/20221215_1215_X2_FAV71906_63db05c7/fastq_pass/3.Mbandaka.Run4/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "SSuis",
      "ParameterFilesToUpload": {
        "[S]/mnt/c/BioSeqDB/WSLProxyRoot/RNK773/Work/CoverageCalculator_0424051529/D1C1/Reference.fa": null
      },
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "[S]/mnt/e/data/database/SSuis",
      "SequenceDBPath": "[S]E:\\data\\database\\\\SSuis\\SSuis.fasta",
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": {},
      "IsLinux": true,
      "CanRunInLinux": true,
      "DockerBaseImage": "quay.io/biocontainers/dashing:0.4.0--h735f0e5_3",
      "Parameters": "DashingCombine@[sequence_format=fastq.gz]\r\nDashing@[OmitStep=False]\r\nDashing@[PublishOutput=False]\r\nDashing@[IgnoreError=False]\r\nDashing@[IncludeOutput=True]\r\nDashing@[IsDocker=True]\r\n",
      "OutputPath": "[S]E:\\data\\Jimmy\\dashing_test\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "Dashing",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C2",
              "FlowScriptToken": null,
              "Command": "# create a samples.txt file containing paths to sample sequences\r\n#FS ForEachPrereq DashingCombine\r\n  find $[I.] -name \u0022*fastq*\u0022 -or -name \u0022*fasta*\u0022 \u003E\u003E $[O.]samples.txt\r\n#FS End\r\n\r\n# create reference.txt file containg paths to reference sequences\r\necho @[Reference=] \u003E $[O.]reference.txt\r\n\r\n# filter rare k-mers if analyzing raw reads\r\nfilter_opts=\u0022\u0022\r\nif [[ $(egrep \u0022fastq.gz$|fastq$\u0022 $[O.]samples.txt | wc -l) -ne 0 ]]; then\r\n  filter_opts=\u0022-y\u0022\r\n  echo \u0022Detected raw sequences. Enabling low frequency k-mers filtering.\u0022\r\nfi\r\n\r\ndashing dist -F $[O.]reference.txt -Q $[O.]samples.txt $filter_opts --containment-dist  --nthreads @[threads=16] -O $[O.]dashing_results.tsv --full-tsv",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "DashingCombine"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": true,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2023-04-24T19:01:33.5309702-06:00",
            "LastAuthor": "SQA032",
            "ScriptParmsList": [
              {
                "ModuleName": "Dashing",
                "ParmName": "Reference",
                "DefaultValue": "",
                "UserValue": "[S]/mnt/c/BioSeqDB/WSLProxyRoot/RNK773/Work/CoverageCalculator_0424051529/D1C1/Reference.fa",
                "Description": "Path to reference sequence",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Dashing",
                "ParmName": "threads",
                "DefaultValue": "16",
                "UserValue": "32",
                "Description": "Number of CPU cores to allocate",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Dashing",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Dashing",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Dashing",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Dashing",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Dashing",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "DashingCombine",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C1",
              "FlowScriptToken": null,
              "Command": "# global vars\r\nformat=@[sequence_format=fasta]\r\ncombined_input=$[O.]$[D.[SampleName]].${format}\r\noutdir=$[O.]\r\n# combine multi-file inputs into a single file\r\nif [[ format == \u0022fasta\u0022 ]]; then \r\n## enable multiple extensions for fasta formats\r\ncat $(find $[D.[SamplePath]] -name \u0027*.fa\u0027 -or -name \u0027*.fasta\u0027) \u003E $combined_input\r\nelse\r\ncat $[D.[SamplePath]]*.${format} \u003E $combined_input\r\nfi",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2023-04-24T19:04:27.7992493-06:00",
            "LastAuthor": "SQA032",
            "ScriptParmsList": [
              {
                "ModuleName": "DashingCombine",
                "ParmName": "sequence_format",
                "DefaultValue": "fasta",
                "UserValue": "fastq.gz",
                "Description": "",
                "ComboValues": "fasta|fastq|fastq.gz",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "DashingPublish",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "",
              "FlowScriptToken": null,
              "Command": "cat $[I.]*.tsv | sort -k2 | sed \u0027s_.*/__g\u0027 | sed \u0027s/.fastq//g\u0027 | sed \u0027s/.fasta//g\u0027 | sed \u0027s/.gz//g\u0027 \u003E $[O.]dashing_results.tsv",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Dashing"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": null,
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": true,
            "RunAfterALLCmdToken": null,
            "OmitStep": false,
            "LastUpdate": "2023-04-24T19:44:09.6601521-06:00",
            "LastAuthor": "SQA032",
            "ScriptParmsList": [],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2023-06-04T09:35:58.6679551-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [
        {
          "CommandToken": "D1C1",
          "FlowScriptToken": "DashingCombine",
          "Command": "# global vars\nformat=fastq.gz\ncombined_input=/mnt/c/BioSeqDB/WSLProxyRoot/SQA032/Work/DashingFlow_0424074107/D1C1/2.Thompson.Run4.${format}\noutdir=/mnt/c/BioSeqDB/WSLProxyRoot/SQA032/Work/DashingFlow_0424074107/D1C1/\n# combine multi-file inputs into a single file\nif [[ format == \u0022fasta\u0022 ]]; then \n## enable multiple extensions for fasta formats\ncat $(find /mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Objective2-Run4_NonAdaptive_15Dec22/Objective2-Run4_NonAdaptive_15Dec22/20221215_1215_X2_FAV71906_63db05c7/fastq_pass/2.Thompson.Run4/ -name \u0027*.fa\u0027 -or -name \u0027*.fasta\u0027) \u003E $combined_input\nelse\ncat /mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Objective2-Run4_NonAdaptive_15Dec22/Objective2-Run4_NonAdaptive_15Dec22/20221215_1215_X2_FAV71906_63db05c7/fastq_pass/2.Thompson.Run4/*.${format} \u003E $combined_input\nfi\n",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": false,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        }
      ],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "SRST2Flow",
      "TestConfig": {},
      "SubmissionTimeStamp": "0608063740",
      "LockUsername": null,
      "Comment": "Each instance of the SRST2 pipeline writes its output to the same folder. Due to this limitation, ONLY A SINGLE INSTANCE OF THE SRST2FLOW FLOWSCRIPT CAN BE RUN AT A TIME.\r\nStreptococcus suis is divided into 29 serotypes based on a serological reaction against the capsular polysaccharide (CPS). Multiplex PCR tests targeting the cps locus are also used to determine S. suis serotypes, but they cannot differentiate between serotypes 1 and 14, and between serotypes 2 and 1/2. This pipeline permits in silico serotype determination from whole-genome sequencing (WGS) short-read data that can readily identify all 29\u2009S. suis serotypes.",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "2123661-1": "0[S]/mnt/e/data/Dreamer/Genomic_Epidemiology/2021/Streptococcus_suis/Ssuis_27jul21DP/Ssuis_27jul21DP/20210727_1546_X2_FAP64303_4e15d39f/fastq_pass/2123661-1/",
        "PDS2314587-3": "1[S]/mnt/e/data/Dreamer/PDS_Diagnostics_2023/Ssuis_Ecoli_24May23_DP/Ssuis_24May23_DP/20230524_1350_X3_FAT95640_ae963ccf/fastq_pass/Ssuis_24may23_Dp/PDS2314587-3/",
        "PDS2314588-4": "1[S]/mnt/e/data/Dreamer/PDS_Diagnostics_2023/Ssuis_Ecoli_24May23_DP/Ssuis_24May23_DP/20230524_1350_X3_FAT95640_ae963ccf/fastq_pass/Ssuis_24may23_Dp/PDS2314588-4/",
        "PDS2314589-4": "1[S]/mnt/e/data/Dreamer/PDS_Diagnostics_2023/Ssuis_Ecoli_24May23_DP/Ssuis_24May23_DP/20230524_1350_X3_FAT95640_ae963ccf/fastq_pass/Ssuis_24may23_Dp/PDS2314589-4/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "SSuis_Ruwani",
      "ParameterFilesToUpload": {
        "[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_Serotyping.fasta": null,
        "[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_Serotyping_Definitions.txt": null,
        "[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_cps2K.fasta": null
      },
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "[S]/mnt/e/data/database/SSuis_Ruwani",
      "SequenceDBPath": "[S]E:\\data\\database\\SSuis_Ruwani\\SSuis_Ruwani.fasta",
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": null,
      "IsLinux": false,
      "CanRunInLinux": false,
      "DockerBaseImage": "megashipper/srst2env",
      "Parameters": "SRST2@[cps2K=[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_cps2K.fasta]\r\nSRST2@[serotype_definitions=[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_Serotyping_Definitions.txt]\r\nSRST2@[serotype_db=[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_Serotyping.fasta]\r\nSRST2@[ends=se]\r\nSRST2@[OmitStep=False]\r\nSRST2@[PublishOutput=True]\r\nSRST2@[IgnoreError=False]\r\nSRST2@[IncludeOutput=True]\r\nSRST2@[IsDocker=True]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\SRST2Results\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "Compress",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D4C1",
              "FlowScriptToken": null,
              "Command": "count=\u0060ls -1 $[D.[SamplePath]]*.fastq 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq \u003E $[O.]$[V.[SampleName]].fastq\r\ngzip -f $[O.]$[V.[SampleName]].fastq 2\u003E\u00261 \u003E /dev/null;\r\nfi \r\n\r\ncount=\u0060ls -1 $[D.[SamplePath]]*.fastq.gz 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq.gz \u003E $[O.]$[V.[SampleName]].fastq.gz\r\nfi\r\n",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": false,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-06T06:45:00.6544378-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "SRST2",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D4C2",
              "FlowScriptToken": null,
              "Command": "if [ -f \u0022$[I.]$[V.[SampleName]].fastq.gz\u0022 ]; then \r\n  gunzip $[I.]$[V.[SampleName]].fastq.gz\r\nfi\r\n\r\nif [ ! -d \u0022$[O.]$[V.[SampleName]]\u0022 ]; then\r\n mkdir $[O.]$[V.[SampleName]]\r\nfi\r\ncd $[O.]$[V.[SampleName]]\r\n\r\nconda run -n srst2 perl /mnt/e/data/SsuisSerotyping_pipeline/Ssuis_serotypingPipeline.pl --fastq_directory $[I.] --scoreName $[V.[SampleName]] @[serotype_db=[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_Serotyping.fasta] --serotype_definitions @[serotype_definitions=[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_Serotyping_Definitions.txt] --cps2K @[cps2K=[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_cps2K.fasta] t --ends @[ends=se] --forward .1 --reverse .2",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": true,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Compress"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2023-06-08T19:56:13.7055985-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "SRST2",
                "ParmName": "cps2K",
                "DefaultValue": "[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_cps2K.fasta",
                "UserValue": "[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_cps2K.fasta",
                "Description": "Path to multifasta file containing the cps2K confirmation database.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": null,
                "Extensions": "fasta|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SRST2",
                "ParmName": "serotype_definitions",
                "DefaultValue": "[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_Serotyping_Definitions.txt",
                "UserValue": "[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_Serotyping_Definitions.txt",
                "Description": "Path to text file containing the definitions for the serotype database file.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": null,
                "Extensions": "txt|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SRST2",
                "ParmName": "serotype_db",
                "DefaultValue": "[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_Serotyping.fasta",
                "UserValue": "[S]/mnt/e/data/SsuisSerotyping_pipeline//Ssuis_Serotyping.fasta",
                "Description": "Path to multifasta file containing the serotype database.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": null,
                "Extensions": "fasta|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SRST2",
                "ParmName": "ends",
                "DefaultValue": "se",
                "UserValue": "se",
                "Description": "Select pe for paired or se for single.",
                "ComboValues": "pe|se",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SRST2",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SRST2",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SRST2",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SRST2",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SRST2",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2023-06-08T19:56:13.7055985-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [
        {
          "CommandToken": "D4C1",
          "FlowScriptToken": "Compress",
          "Command": "count=\u0060ls -1 /mnt/e/data/Dreamer/PDS_Diagnostics_2022/Brucella_gard_ssuis_26jul22_AS/Brucella_gard_ssuis_26jul22_AS/20220726_1542_X1_FAT47818_2059a31b/fastq_pass/2222738_Ssuis/*.fastq 2\u003E/dev/null | wc -l\u0060\nif [ $count != 0 ]\nthen \ncat /mnt/e/data/Dreamer/PDS_Diagnostics_2022/Brucella_gard_ssuis_26jul22_AS/Brucella_gard_ssuis_26jul22_AS/20220726_1542_X1_FAT47818_2059a31b/fastq_pass/2222738_Ssuis/*.fastq \u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/SRST2Flow/D4C1/2222738_Ssuis.fastq\ngzip -f /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/SRST2Flow/D4C1/2222738_Ssuis.fastq 2\u003E\u00261 \u003E /dev/null;\nfi \n\ncount=\u0060ls -1 /mnt/e/data/Dreamer/PDS_Diagnostics_2022/Brucella_gard_ssuis_26jul22_AS/Brucella_gard_ssuis_26jul22_AS/20220726_1542_X1_FAT47818_2059a31b/fastq_pass/2222738_Ssuis/*.fastq.gz 2\u003E/dev/null | wc -l\u0060\nif [ $count != 0 ]\nthen \ncat /mnt/e/data/Dreamer/PDS_Diagnostics_2022/Brucella_gard_ssuis_26jul22_AS/Brucella_gard_ssuis_26jul22_AS/20220726_1542_X1_FAT47818_2059a31b/fastq_pass/2222738_Ssuis/*.fastq.gz \u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/SRST2Flow/D4C1/2222738_Ssuis.fastq.gz\nfi\n",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": false,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        }
      ],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "KrakenFlow",
      "TestConfig": {},
      "SubmissionTimeStamp": "0707091400",
      "LockUsername": null,
      "Comment": "Depending on the type of input (fasta or fastq), KrakenFlow will analyze from either assemblies or reads.\r\nDo taxonomy analysis on aggregate of all kraken aggregates.",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "2039421": "1[S]/mnt/e/data/Arnie/2039421/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "Brucella_Arnie",
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "[S]/mnt/e/data/database/Brucella_Arnie",
      "SequenceDBPath": "[S]E:\\data\\database\\\\Brucella_Arnie\\Brucella_Arnie.fasta",
      "SamplesFromLocalDevice": {
        "consensus": "1[L]/mnt/c/Temp/consensus/"
      },
      "SamplesToTransform": {},
      "IsLinux": true,
      "CanRunInLinux": true,
      "DockerBaseImage": "bioseqenv.0.3",
      "Parameters": "Krona Combined Publish@[mag_Col=3]\r\nKrona Combined Publish@[taxID_Col=5]\r\nKrona Combined Publish@[OmitStep=False]\r\nKrona Combined Publish@[PublishOutput=True]\r\nKrona Combined Publish@[IgnoreError=False]\r\nKrona Combined Publish@[IncludeOutput=True]\r\nKrona Combined Publish@[IsDocker=True]\r\nKraken2@[OmitStep=False]\r\nKraken2@[PublishOutput=True]\r\nKraken2@[IgnoreError=False]\r\nKraken2@[IncludeOutput=True]\r\nKraken2@[IsDocker=True]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\KrakenResults\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "Compress",
            "LockUsername": null,
            "Comment": null,
            "WslCommand": {
              "CommandToken": "D1C1",
              "FlowScriptToken": null,
              "Command": "count=\u0060ls -1 $[D.[SamplePath]]*.fastq 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq \u003E $[O.]$[V.[SampleName]].fastq\r\ngzip -f $[O.]$[V.[SampleName]].fastq 2\u003E\u00261 \u003E /dev/null;\r\nfi \r\ncount=\u0060ls -1 $[D.[SamplePath]]*.fastq.gz 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq.gz \u003E $[O.]$[V.[SampleName]].fastq.gz\r\nfi",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": false,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-06T06:45:00.6544378-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": "task Compress {\r\n  input {\r\n    String SamplePath\r\n    String SampleName\r\n }\r\n  command \u003C\u003C\u003C\r\n  count=\u0060ls -1 ~{SamplePath}*.fastq 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat ~{SamplePath}*.fastq \u003E ~{SampleName}.fastq\r\ngzip -f ~{SampleName}.fastq 2\u003E\u00261 \u003E /dev/null;\r\nfi \r\ncount=\u0060ls -1 ~{SamplePath}*.fastq.gz 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat ~{SamplePath}*.fastq.gz \u003E ~{SampleName}.fastq.gz\r\nfi \u003E\u003E\u003E\r\n  output {\r\n    }\r\n}\r\n",
            "WDL_Task_Inputs": [
              "String SamplePath",
              "String SampleName"
            ],
            "WDL_Task_Outputs": [],
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "Kraken2",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C2",
              "FlowScriptToken": null,
              "Command": "mkdir $[O.]$[V.[SampleName]]\r\n#FS DockerMap /mnt/e/data/reference/databases/\r\n# The gzip file will be available, we don\u0027t need to check the count in the original data sample folder.\r\n# Compress will have compressed the fastq files.\r\n\r\nconda run -n kraken2 kraken2  --db @[db=/mnt/e/data/reference/databases/minikraken2_v1_8GB/] --threads @[threads=8] --report $[O.]$[V.[SampleName]]/kraken.aggregates.txt --use-names --output $[O.]$[V.[SampleName]]/kraken.txt $[I.]$[V.[SampleName]].fastq.gz",
              "IsNoop": false,
              "CondaPrefix": "phame",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Compress"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-06-26T05:20:15.811676-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Kraken2",
                "ParmName": "db",
                "DefaultValue": "/mnt/e/data/reference/databases/minikraken2_v1_8GB/",
                "UserValue": "/mnt/e/data/reference/databases/kraken2-microbial/",
                "Description": "",
                "ComboValues": "/mnt/e/data/reference/databases/minikraken2_v1_8GB/|/mnt/e/data/reference/databases/kraken2-microbial/",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "threads",
                "DefaultValue": "8",
                "UserValue": "8",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": "task Kraken2 {\r\n  input {\r\n    String SampleName\r\n    File Compress\r\n }\r\n  command \u003C\u003C\u003C\r\n  mkdir ~{SampleName}\r\n#FS DockerMap /mnt/e/data/reference/referenceDB/minikraken2_v1_8GB/\r\n# The gzip file will be available, we don\u0027t need to check the count in the original data sample folder.\r\n# Compress will have compressed the fastq files.\r\nconda run -n kraken2 kraken2  --db /mnt/e/data/reference/referenceDB/minikraken2_v1_8GB/ --threads @[threads=8] --report ~{SampleName}/kraken.aggregates.txt --use-names --output ~{SampleName}/kraken.txt ~{Compress}~{SampleName}.fastq.gz \u003E\u003E\u003E\r\n  output {\r\n    }\r\n}\r\n",
            "WDL_Task_Inputs": [
              "String SampleName",
              "File Compress"
            ],
            "WDL_Task_Outputs": [],
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "Krona Combined Publish",
            "LockUsername": null,
            "Comment": "Do taxonomy analysis on aggregate of all kraken aggregates.",
            "WslCommand": {
              "CommandToken": "",
              "FlowScriptToken": null,
              "Command": "\r\n#FS ForEachPrereq\r\ncp $[I{Kraken2}.]$[V.[SampleName]]/kraken.aggregates.txt $[O.]$[V.[SampleName]].kraken.aggregates.txt\r\n#FS End\r\n\r\nconda run -n krona ktImportTaxonomy -tax  /mnt/e/data/reference/databases/taxonomy -t @[taxID_Col=5] -m @[mag_Col=3] -o $[O.]combined.html $[O.]*.kraken.aggregates.txt",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": true,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Kraken2"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": null,
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": true,
            "RunAfterALLCmdToken": null,
            "OmitStep": false,
            "LastUpdate": "2023-07-03T10:02:16.133284-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "mag_Col",
                "DefaultValue": "3",
                "UserValue": "3",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "taxID_Col",
                "DefaultValue": "5",
                "UserValue": "5",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": "megashipper/kronaenv",
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2023-07-07T11:52:26.8410774-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [
        {
          "CommandToken": "D1C1",
          "FlowScriptToken": "Compress",
          "Command": "count=\u0060ls -1 /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/SamplesFromLocalDevice/consensus/*.fastq 2\u003E/dev/null | wc -l\u0060\nif [ $count != 0 ]\nthen \ncat /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/SamplesFromLocalDevice/consensus/*.fastq \u003E /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C1/consensus.fastq\ngzip -f /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C1/consensus.fastq 2\u003E\u00261 \u003E /dev/null;\nfi \ncount=\u0060ls -1 /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/SamplesFromLocalDevice/consensus/*.fastq.gz 2\u003E/dev/null | wc -l\u0060\nif [ $count != 0 ]\nthen \ncat /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/SamplesFromLocalDevice/consensus/*.fastq.gz \u003E /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C1/consensus.fastq.gz\nfi\n",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": false,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": "  call Compress as D1C1 {\r\n    input:\r\n      SamplePath = \u0022/mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/SamplesFromLocalDevice/consensus/\u0022,\r\n      SampleName = \u0022consensus\u0022\r\n   }\r\n"
        },
        {
          "CommandToken": "D1C2",
          "FlowScriptToken": "Kraken2",
          "Command": "mkdir /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C2/consensus\n#FS DockerMap /mnt/e/data/reference/referenceDB/minikraken2_v1_8GB/\n# The gzip file will be available, we don\u0027t need to check the count in the original data sample folder.\n# Compress will have compressed the fastq files.\nconda run -n kraken2 kraken2  --db /mnt/e/data/reference/referenceDB/minikraken2_v1_8GB/ --threads 16 --report /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C2/consensus/kraken.aggregates.txt --use-names --output /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C2/consensus/kraken.txt /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C1/consensus.fastq.gz\n",
          "IsNoop": false,
          "CondaPrefix": "phame",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": true,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": true,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [
            "D1C1"
          ],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": "  call Kraken2 as D1C2 {\r\n    input:\r\n      SampleName = D1C1.SampleName\r\n   }\r\n"
        }
      ],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "CoverageCalculator",
      "TestConfig": {},
      "SubmissionTimeStamp": "0707023616",
      "LockUsername": null,
      "Comment": "This is the Coverage Calculator FlowScript.",
      "DataSourceType": 2,
      "SerializeDataSteps": false,
      "SampleList": {
        "barcode10_2038528-1": "1[S]/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode10_2038528-1/",
        "barcode11_2037403-1": "1[S]/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode11_2037403-1/",
        "barcode12_2038061-1": "1[S]/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode12_2038061-1/",
        "barcode7_2037399-4": "1[S]/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode7_2037399-4/",
        "barcode8_2038546-2": "1[S]/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode8_2038546-2/",
        "barcode9_2038054-2": "1[S]/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode9_2038054-2/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "hpsuis",
      "ParameterFilesToUpload": {
        "[S]/mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Blast/mbandaka.fna": null
      },
      "ParameterFoldersToUpload": {
        "/mnt/e/data/reference/bakta_db/db": null
      },
      "SequenceDBPathLinux": "/mnt/e/data/database/hpsuis",
      "SequenceDBPath": "/mnt/e/data/database/hpsuis/hpsuis.fasta",
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": {},
      "IsLinux": false,
      "CanRunInLinux": true,
      "DockerBaseImage": "megashipper/coveragecalculatorenv",
      "Parameters": "CovCalc_Report@[OmitStep=False]\r\nCovCalc_Report@[PublishOutput=False]\r\nCovCalc_Report@[IgnoreError=False]\r\nCovCalc_Report@[IncludeOutput=True]\r\nCovCalc_Report@[IsDocker=True]\r\nCovCalc@[OmitStep=False]\r\nCovCalc@[PublishOutput=False]\r\nCovCalc@[IgnoreError=False]\r\nCovCalc@[IncludeOutput=True]\r\nCovCalc@[IsDocker=True]\r\nCovCalc_Publish@[OmitStep=False]\r\nCovCalc_Publish@[PublishOutput=True]\r\nCovCalc_Publish@[IgnoreError=False]\r\nCovCalc_Publish@[IncludeOutput=False]\r\nCovCalc_Publish@[IsDocker=False]\r\nCovCalc_Annot@[OmitStep=False]\r\nCovCalc_Annot@[PublishOutput=False]\r\nCovCalc_Annot@[IgnoreError=False]\r\nCovCalc_Annot@[IncludeOutput=True]\r\nCovCalc_Annot@[IsDocker=True]\r\n",
      "OutputPath": "[S]E:\\data\\Jimmy\\covcalc_test\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "CovCalc",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C2",
              "FlowScriptToken": null,
              "Command": "# global vars\r\nformat=@[sequence_format=fasta]\r\nreference=$[I{CovCalc_Annot}.]Reference.fa\r\ncombined_input=$[O.]$[V.[SampleName]].${format}\r\noutdir=$[O.]\r\noutput_bed=$outdir/bed/$[V.[SampleName]].bedgraph\r\n\r\n# combine multi-file inputs into a single file\r\nif [[ format == \u0022fasta\u0022 ]]; then \r\n  ## enable multiple extensions for fasta formats\r\n  cat $(find $[D.[SamplePath]] -name \u0027*.fa\u0027 -or -name \u0027*.fasta\u0027) \u003E $combined_input\r\nelse\r\n  cat $[D.[SamplePath]]*.${format} \u003E $combined_input\r\nfi\r\n\r\n# create output subdirectories\r\nmkdir -p $outdir/bed\r\n\r\n# activate required conda environment\r\nsource /opt/conda/bin/activate cov_calc\r\n\r\n# run alignment with minimap2 and use bedtools to calculate alignment coverage\r\nminimap2 -ax map-ont -t @[threads=16] $reference $combined_input | samtools view -@ @[threads=16] -b | samtools sort | bedtools genomecov -ibam - -bg \u003E $output_bed",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": true,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "CovCalc_Annot",
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2023-04-24T16:04:41.0125081-06:00",
            "LastAuthor": "SQA032",
            "ScriptParmsList": [
              {
                "ModuleName": "CovCalc",
                "ParmName": "threads",
                "DefaultValue": "16",
                "UserValue": "32",
                "Description": "Number of CPU threads to allocate.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CovCalc",
                "ParmName": "sequence_format",
                "DefaultValue": "fasta",
                "UserValue": "fastq",
                "Description": "Format of input sequence",
                "ComboValues": "fasta|fastq|fastq.gz",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CovCalc",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/SQA032/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "CovCalc_Publish",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "",
              "FlowScriptToken": null,
              "Command": "cp $[I.]coverage_report.html $[O.]\r\ncp -r $[I.]bed $[O.]",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": false,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "CovCalc_Report"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": true,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2023-04-24T16:04:41.0125081-06:00",
            "LastAuthor": "SQA032",
            "ScriptParmsList": [
              {
                "ModuleName": "CovCalc_Publish",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc_Publish",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc_Publish",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc_Publish",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc_Publish",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "CovCalc_Annot",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C1",
              "FlowScriptToken": null,
              "Command": "# global vars\r\ninput_reference=@[reference=]\r\noutput_reference=$[O.]Reference.fa\r\noutdir=$[O.]\r\n\r\ncp @[reference=] $[O.]Reference.fa\r\n\r\n# index reference sequence\r\nconda run -n cov_calc samtools faidx $[O.]Reference.fa\r\n\r\n# create reference bed file\r\nawk \u0027BEGIN {FS=\u0022\\t\u0022}; {print $1 FS \u00220\u0022 FS $2}\u0027 $[O.]Reference.fa.fai \u003E $[O.]Reference.bed\r\n\r\n# run genome annotation on output reference if invoked\r\nif [[ \u0027@[Annot=--annot]\u0027 == \u0027--annot\u0027 ]]; then\r\n    conda run -n cov_calc bakta \\\r\n    --db @[db=/mnt/e/data/reference/bakta_db/db] \\\r\n    --genus $(echo @[Organism=] | cut -f1 -d\u0027 \u0027) \\\r\n    --species $(echo @[Organism=] | cut -f2 -d\u0027 \u0027) \\\r\n    --gram @[gram=-] \\\r\n    --keep-contig-headers \\\r\n    --threads @[threads=16] \\\r\n    --output $outdir \\\r\n    --prefix Reference \\\r\n    @[reference=]\r\nfi",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": true,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": "D1C1",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2023-04-24T16:04:41.0125081-06:00",
            "LastAuthor": "SQA032",
            "ScriptParmsList": [
              {
                "ModuleName": "CovCalc_Annot",
                "ParmName": "Annot",
                "DefaultValue": "--annot",
                "UserValue": "",
                "Description": "Run gene annotation on reference sequence.",
                "ComboValues": "--annot",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CovCalc_Annot",
                "ParmName": "Organism",
                "DefaultValue": "",
                "UserValue": "",
                "Description": "Organism name of reference sequence (include genus and species name).",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CovCalc_Annot",
                "ParmName": "gram",
                "DefaultValue": "-",
                "UserValue": "-",
                "Description": "Indicate if the organism of reference sequence is gram negative (-), gram positive (\u002B) or unknown (?)",
                "ComboValues": "-|\u002B|?",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CovCalc_Annot",
                "ParmName": "threads",
                "DefaultValue": "16",
                "UserValue": "16",
                "Description": "Number of CPU threads to allocate.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CovCalc_Annot",
                "ParmName": "reference",
                "DefaultValue": "",
                "UserValue": "[S]/mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Blast/mbandaka.fna",
                "Description": "Path to reference sequence.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": null,
                "Extensions": "fasta|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CovCalc_Annot",
                "ParmName": "db",
                "DefaultValue": "/mnt/e/data/reference/bakta_db/db",
                "UserValue": "/mnt/e/data/reference/bakta_db/db",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 6,
                "Validator": null,
                "Extensions": "txt|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CovCalc_Annot",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc_Annot",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc_Annot",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc_Annot",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc_Annot",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/SQA032/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": "task CovCalc_Annot {\r\n  input {\r\n }\r\n  command \u003C\u003C\u003C\r\n  # global vars\r\ninput_reference=@[reference=]\r\noutput_reference=Reference.fa\r\noutdir=\r\n# create symlink of reference sequence in work dir\r\n#ln -s $input_reference $output_reference\r\ncp @[reference=] Reference.fa\r\n# index reference sequence\r\nconda run -n cov_calc samtools faidx Reference.fa\r\n# create reference bed file\r\nawk \u0027BEGIN {FS=\u0022\\t\u0022}; {print $1 FS \u00220\u0022 FS $2}\u0027 Reference.fa.fai \u003E Reference.bed\r\n# run genome annotation on output reference if invoked\r\nif [[ \u0027@[Annot=--annot]\u0027 == \u0027--annot\u0027 ]]; then\r\n    conda run -n cov_calc bakta \\\r\n    --db @[db=/mnt/e/data/reference/bakta_db/db] \\\r\n    --genus $(echo @[Organism=] | cut -f1 -d\u0027 \u0027) \\\r\n    --species $(echo @[Organism=] | cut -f2 -d\u0027 \u0027) \\\r\n    --gram @[gram=-] \\\r\n    --keep-contig-headers \\\r\n    --threads @[threads=16] \\\r\n    --output $outdir \\\r\n    --prefix Reference \\\r\n    @[reference=]\r\nfi \u003E\u003E\u003E\r\n  output {\r\n    }\r\n}\r\n",
            "WDL_Task_Inputs": [],
            "WDL_Task_Outputs": [],
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "CovCalc_Report",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "",
              "FlowScriptToken": null,
              "Command": "# I/O\r\nbedgraph_dir=$[O.]bed\r\nreference_fa=$[I{CovCalc_Annot}.]Reference.fa\r\nreference_bed=$[I{CovCalc_Annot}.]Reference.bed\r\noutput_html=$[O.]coverage_report.html\r\n\r\n# consolidaate all bedgraphs into a single output directory\r\n#FS ForEachPrereq CovCalc\r\ncp -r $[I{CovCalc}.]bed $[O.]\r\n#FS End\r\n\r\n# check if gff was generated\r\nif test -f $[I{CovCalc_Annot}.]Reference.gff3; then\r\ntracks_path=\u0022$[I{CovCalc_Annot}.]Reference.gff3 $(find ${bedgraph_dir} -name \u0027*.bedgraph\u0027)\u0022\r\nelse\r\ntracks_path=$(find ${bedgraph_dir} -name \u0027*.bedgraph\u0027)\r\nfi\r\n\r\n# main\r\nconda run -n cov_calc create_report ${reference_bed} ${reference_fa} \\\r\n            --tracks ${tracks_path} \\\r\n            --output ${output_html}",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": true,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "CovCalc",
                "CovCalc_Annot"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": true,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2023-04-24T16:04:41.0125081-06:00",
            "LastAuthor": "SQA032",
            "ScriptParmsList": [
              {
                "ModuleName": "CovCalc_Report",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc_Report",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc_Report",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc_Report",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CovCalc_Report",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/SQA032/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2023-07-07T15:01:48.6111028-06:00",
      "LastAuthor": "SQA032",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [
        {
          "CommandToken": "D1C1",
          "FlowScriptToken": "CovCalc_Annot",
          "Command": "touch /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/SampleList.csv \u0026\u0026 rm /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/SampleList.csv\ntouch /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/SequenceList.csv \u0026\u0026 rm /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/SequenceList.csv\necho barcode10_2038528-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode10_2038528-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/SampleList.csv\n# global vars\ninput_reference=/mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Blast/mbandaka.fna\noutput_reference=/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/Reference.fa\noutdir=/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/\n# create symlink of reference sequence in work dir\n#ln -s $input_reference $output_reference\ncp /mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Blast/mbandaka.fna /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/Reference.fa\n# index reference sequence\nconda run -n cov_calc samtools faidx /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/Reference.fa\n# create reference bed file\nawk \u0027BEGIN {FS=\u0022\\t\u0022}; {print $1 FS \u00220\u0022 FS $2}\u0027 /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/Reference.fa.fai \u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/Reference.bed\n# run genome annotation on output reference if invoked\nif [[ \u0027\u0027 == \u0027--annot\u0027 ]]; then\n    conda run -n cov_calc bakta \\\n    --db /mnt/e/data/reference/bakta_db/db \\\n    --genus $(echo  | cut -f1 -d\u0027 \u0027) \\\n    --species $(echo  | cut -f2 -d\u0027 \u0027) \\\n    --gram - \\\n    --keep-contig-headers \\\n    --threads 16 \\\n    --output $outdir \\\n    --prefix Reference \\\n    /mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Blast/mbandaka.fna\nfi\n",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": true,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": "  call CovCalc_Annot as D1C1 {\r\n    input\r\n   }\r\n"
        }
      ],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "CentrifugeFlow",
      "TestConfig": {},
      "SubmissionTimeStamp": "0710073418",
      "LockUsername": null,
      "Comment": "Create a taxonomic classification for a set of sequence reads using Centrifuge.\r\nDo taxonomy analysis on aggregate of all kraken aggregates.",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "2123661-1": "1[S]/mnt/e/data/Arnie/2123661-1/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "SSuis_Ruwani",
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {
        "[S]/mnt/e/data/reference/viralRefSeq_InfA_custom": null
      },
      "SequenceDBPathLinux": "[S]/mnt/e/data/database/SSuis_Ruwani",
      "SequenceDBPath": "[S]E:\\data\\database\\SSuis_Ruwani\\SSuis_Ruwani.fasta",
      "SamplesFromLocalDevice": null,
      "SamplesToTransform": null,
      "IsLinux": false,
      "CanRunInLinux": true,
      "DockerBaseImage": "megashipper/centrifugeenv",
      "Parameters": "Krona Combined Publish@[mag_Col=3]\r\nKrona Combined Publish@[taxID_Col=5]\r\nKrona Combined Publish@[OmitStep=False]\r\nKrona Combined Publish@[PublishOutput=True]\r\nKrona Combined Publish@[IgnoreError=False]\r\nKrona Combined Publish@[IncludeOutput=True]\r\nKrona Combined Publish@[IsDocker=True]\r\nCentrifuge@[OmitStep=False]\r\nCentrifuge@[PublishOutput=True]\r\nCentrifuge@[IgnoreError=False]\r\nCentrifuge@[IncludeOutput=True]\r\nCentrifuge@[IsDocker=True]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\CentrifugeResults\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "Centrifuge",
            "LockUsername": null,
            "Comment": "Create a taxonomic classification for a set of sequence reads using Centrifuge.",
            "WslCommand": {
              "CommandToken": "D1C1",
              "FlowScriptToken": null,
              "Command": "# Convert filenames in data source to a CSV list of filenames.\r\ncd $[D.[SamplePath]]\r\nls -p *.f* | grep -v / \u003E $[O.]samples.txt\r\ncsv=\u0022\u0022\r\nwhile read value; do \r\n   csv=\u0022${csv},$[D.[SamplePath]]$value\u0022 \r\ndone \u003C $[O.]samples.txt \r\ncd\r\n\r\necho \u0022\u003E\u003E\u003E\u0022\r\necho \u0022conda run -n centrifuge centrifuge -p @[threads=4] -k @[maxResults=50] --ignore-quals -U ${csv:1} -x @[Reference=[S]/mnt/e/data/reference/viralRefSeq_InfA_custom]/@[viralRefIndex=viralRefSeq_InfA_custom] -S $[O.]centrifuge_res.tsv --report-file $[O.]centrifuge_report.tsv\u0022\r\necho \u0022\u003C\u003C\u003C\u0022\r\n\r\nconda run -n centrifuge centrifuge -p @[threads=4] -k @[maxResults=50] --ignore-quals -U ${csv:1} -x @[Reference=[S]/mnt/e/data/reference/viralRefSeq_InfA_custom]/@[viralRefIndex=viralRefSeq_InfA_custom] -S $[O.]centrifuge_res.tsv --report-file $[O.]centrifuge_report.tsv\r\n\r\nconda run -n centrifuge centrifuge-kreport -x @[Reference=[S]/mnt/e/data/reference/viralRefSeq_InfA_custom]/@[viralRefIndex=viralRefSeq_InfA_custom] $[O.]centrifuge_res.tsv \u003E $[O.]centrifuge_res.txt\r\n",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": true,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2023-06-29T11:13:43.7259935-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Centrifuge",
                "ParmName": "viralRefIndex",
                "DefaultValue": "viralRefSeq_InfA_custom",
                "UserValue": "viralRefSeq_InfA_custom",
                "Description": "The name of the set of .cf files that form the index for the virual reference.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Centrifuge",
                "ParmName": "maxResults",
                "DefaultValue": "50",
                "UserValue": "50",
                "Description": "Maximum primary assignments for each read.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Centrifuge",
                "ParmName": "threads",
                "DefaultValue": "4",
                "UserValue": "4",
                "Description": "Number of threads",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Centrifuge",
                "ParmName": "Reference",
                "DefaultValue": "[S]/mnt/e/data/reference/viralRefSeq_InfA_custom",
                "UserValue": "[S]/mnt/e/data/reference/viralRefSeq_InfA_custom",
                "Description": "Path to Centrifuge database for taxonomic and segment classification.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 6,
                "Validator": null,
                "Extensions": "cf|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Centrifuge",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Centrifuge",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Centrifuge",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Centrifuge",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Centrifuge",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "Krona Combined Publish",
            "LockUsername": null,
            "Comment": "Do taxonomy analysis on aggregate of all kraken aggregates.",
            "WslCommand": {
              "CommandToken": "",
              "FlowScriptToken": null,
              "Command": "\r\n#FS ForEachPrereq\r\ncp $[I{Centrifuge}.]centrifuge_res.txt $[O.]$[V.[SampleName]].kraken.aggregate.txt\r\n#FS End\r\n\r\nconda run -n krona ktImportTaxonomy -tax  /mnt/e/data/reference/databases/taxonomy -t @[taxID_Col=5] -m @[mag_Col=3] -o $[O.]combined.html $[O.]*.kraken.aggregate.txt",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": true,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Centrifuge"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": null,
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": true,
            "RunAfterALLCmdToken": null,
            "OmitStep": false,
            "LastUpdate": "2023-07-03T10:02:16.133284-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "mag_Col",
                "DefaultValue": "3",
                "UserValue": "3",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "taxID_Col",
                "DefaultValue": "5",
                "UserValue": "5",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Krona Combined Publish",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": "megashipper/kronaenv",
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2023-07-10T19:42:34.4290304-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": null,
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "FastQC Flow",
      "TestConfig": {},
      "SubmissionTimeStamp": "0820065327",
      "LockUsername": null,
      "Comment": "",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "barcode12": "1[S]/mnt/r/incoming/Taras/20230218_NAS51/GPU_on/20230218_1541_P2S_00036-1_PAI23592_d0742452/fastq_pass/barcode12/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "SSuis_Ruwani",
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "[S]/mnt/e/data/database/SSuis_Ruwani",
      "SequenceDBPath": "[S]E:\\data\\database\\\\SSuis_Ruwani\\SSuis_Ruwani.fasta",
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": {},
      "IsLinux": false,
      "CanRunInLinux": false,
      "DockerBaseImage": "",
      "Parameters": "FastQC@[threads=4]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\FastQC_Results\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "FastQC",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C1",
              "FlowScriptToken": null,
              "Command": "mkdir $[O.]$[D.[SampleName]]\r\n\r\ncount=\u0060ls -1 $[D.[SamplePath]]*.fastq 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq \u003E $[O.]$[D.[SampleName]]/$[V.[SampleName]].fastq\r\nfi \r\n\r\ncount=\u0060ls -1 $[D.[SamplePath]]*.fastq.gz 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncp $[D.[SamplePath]]*.fastq.gz $[O.]\r\ngunzip $[O.]*.gz\r\ncat $[O.]*.fastq \u003E $[O.]$[D.[SampleName]]/$[V.[SampleName]].fastq\r\nrm $[O.]*.fastq\r\nfi\r\n\r\nfastqc  -t @[threads=4] -o $[O.]$[D.[SampleName]]  $[O.]$[D.[SampleName]]/$[V.[SampleName]].fastq",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2023-08-20T07:00:47.6075917-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "FastQC",
                "ParmName": "threads",
                "DefaultValue": "4",
                "UserValue": "4",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "MultiQC",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C2",
              "FlowScriptToken": null,
              "Command": "#FS ForEachPrereq\r\ncp -r $[I{FastQC}.]$[V.[SampleName]]/ -t $[O.]\r\n#FS End\r\n\r\n~/.local/bin/multiqc --force -o $[O.]  $[O.]\r\n",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data",
                "FastQC"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": true,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2023-08-20T07:00:47.6075917-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "MultiQC_Publish",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "",
              "FlowScriptToken": null,
              "Command": "cp -r $[I{MultiQC}.]multiqc_report.html  $[O.]\r\n\r\n#FS ForEachPrereq FastQC\r\ncp -r $[I{FastQC}.]$[V.[SampleName]]/*.html -t $[O.]\r\n#FS End",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": false,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "FastQC",
                "MultiQC"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": true,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2023-08-20T07:00:47.6075917-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2023-08-20T07:00:47.6075917-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [
        {
          "CommandToken": "D1C1",
          "FlowScriptToken": "FastQC",
          "Command": "mkdir /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/FastQC_Flow_0920054514/D1C1/PDS2220808-1_PL001\ncat /mnt/e/data/Arnie/PDS2220808-1_PL001/*.fastq \u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/FastQC_Flow_0920054514/D1C1/Consolidated.fastq\nfastqc  -t 4 -o /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/FastQC_Flow_0920054514/D1C1/PDS2220808-1_PL001  /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/FastQC_Flow_0920054514/D1C1/Consolidated.fastq\n",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        }
      ],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "Bovine_Flow",
      "TestConfig": {},
      "SubmissionTimeStamp": "0822011738",
      "LockUsername": null,
      "Comment": "",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "NTC": "1[S]/mnt/e/data/Dreamer/BovReproSeq/Bovreproseq_sensitivity_30Jun23_Dp/Bovreproseq_sensitivity_30Jun23_Dp/20230630_1614_X1_FAX01509_9c4c0ecf/fastq_pass/NTC/",
        "Placenta\u002Bsynthpos_Cox_10E00": "1[S]/mnt/e/data/Dreamer/BovReproSeq/Bovreproseq_sensitivity_30Jun23_Dp/Bovreproseq_sensitivity_30Jun23_Dp/20230630_1614_X1_FAX01509_9c4c0ecf/fastq_pass/Placenta\u002Bsynthpos_Cox_10E00/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "SSuis_Ruwani",
      "ParameterFilesToUpload": {
        "[S]/mnt/e/data/reference/bovine/Bovreproseq_ref_multi.fasta": null,
        "[S]/mnt/e/data/reference/bovine/Bovreproseq_primer.bed": null
      },
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "[S]/mnt/e/data/database/SSuis_Ruwani",
      "SequenceDBPath": "[S]E:\\data\\database\\SSuis_Ruwani\\SSuis_Ruwani.fasta",
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": {},
      "IsLinux": false,
      "CanRunInLinux": true,
      "DockerBaseImage": "",
      "Parameters": "Bovine_Dhinesh@[Resume=]\r\nBovine_Dhinesh@[db=[S]/mnt/e/data/reference/databases/minikraken2_v1_8GB/]\r\nBovine_Dhinesh@[profile=docker]\r\nBovine_Dhinesh@[primerbed=[S]/mnt/e/data/reference/bovine/Bovreproseq_primer.bed]\r\nBovine_Dhinesh@[reference=[S]/mnt/e/data/reference/bovine/Bovreproseq_ref_multi.fasta]\r\nBovine_Dhinesh@[OmitStep=False]\r\nBovine_Dhinesh@[PublishOutput=True]\r\nBovine_Dhinesh@[IgnoreError=False]\r\nBovine_Dhinesh@[IncludeOutput=True]\r\nBovine_Dhinesh@[IsDocker=False]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\BovineResults\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "Bovine_Dhinesh",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C1",
              "FlowScriptToken": null,
              "Command": "nextflow run https://github.com/dhineshp565/Bovreproseq -r main -latest --input $[O.]SampleList.csv --outdir $[O.] --primerbed @[primerbed=[S]/mnt/e/data/reference/bovine/Bovreproseq_primer.bed] --reference @[reference=[S]/mnt/e/data/reference/bovine/Bovreproseq_ref_multi.fasta]  -profile @[profile=conda] --db @[db=[S]/mnt/e/data/reference/databases/minikraken2_v1_8GB/] @[Resume=-resume] -with-tower --centri /mnt/e/data/reference/centrifuge\r\n",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": true,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2023-08-22T13:24:52.7794404-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Bovine_Dhinesh",
                "ParmName": "Resume",
                "DefaultValue": "-resume",
                "UserValue": "",
                "Description": "",
                "ComboValues": "-resume|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Bovine_Dhinesh",
                "ParmName": "db",
                "DefaultValue": "[S]/mnt/e/data/reference/databases/minikraken2_v1_8GB/",
                "UserValue": "[S]/mnt/e/data/reference/databases/minikraken2_v1_8GB/",
                "Description": "",
                "ComboValues": "[S]/mnt/e/data/reference/databases/minikraken2_v1_8GB/|[S]/mnt/e/data/reference/databases/kraken2-microbial/",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Bovine_Dhinesh",
                "ParmName": "profile",
                "DefaultValue": "conda",
                "UserValue": "docker",
                "Description": "",
                "ComboValues": "conda|docker",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Bovine_Dhinesh",
                "ParmName": "primerbed",
                "DefaultValue": "[S]/mnt/e/data/reference/bovine/Bovreproseq_primer.bed",
                "UserValue": "[S]/mnt/e/data/reference/bovine/Bovreproseq_primer.bed",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": "",
                "Extensions": "bed|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Bovine_Dhinesh",
                "ParmName": "reference",
                "DefaultValue": "[S]/mnt/e/data/reference/bovine/Bovreproseq_ref_multi.fasta",
                "UserValue": "[S]/mnt/e/data/reference/bovine/Bovreproseq_ref_multi.fasta",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": "",
                "Extensions": "fasta|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Bovine_Dhinesh",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Bovine_Dhinesh",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Bovine_Dhinesh",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Bovine_Dhinesh",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Bovine_Dhinesh",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2023-08-22T13:24:52.7794404-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "FastANI Flow",
      "TestConfig": {},
      "SubmissionTimeStamp": "0831120307",
      "LockUsername": null,
      "Comment": "Select one or more fasta query samples to compare against the reference fasta file specified in the runtime parameters. When there are multiple data sample files, they are all compared to the same reference.\r\nSee https://github.com/ParBLiSS/FastANI for details on running FastANI.\r\n",
      "DataSourceType": 0,
      "SerializeDataSteps": false,
      "SampleList": {
        "FastANI_Data000001": "1[S]/mnt/e/data/Arnie/FastANI_Data/1737637-4.fasta",
        "FastANI_Data000002": "1[S]/mnt/e/data/Arnie/FastANI_Data/1741278-8.fasta",
        "FastANI_Data000003": "1[S]/mnt/e/data/Arnie/FastANI_Data/1802921-7.fasta",
        "FastANI_Data000004": "1[S]/mnt/e/data/Arnie/FastANI_Data/1805577-5.fasta",
        "FastANI_Data000005": "1[S]/mnt/e/data/Arnie/FastANI_Data/1806503-4.fasta",
        "FastANI_Data000006": "1[S]/mnt/e/data/Arnie/FastANI_Data/1812676-1.fasta",
        "FastANI_Data000007": "1[S]/mnt/e/data/Arnie/FastANI_Data/1823843-2.fasta"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "hpsuis",
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "/mnt/e/data/database/hpsuis",
      "SequenceDBPath": "/mnt/e/data/database/hpsuis/hpsuis.fasta",
      "SamplesFromLocalDevice": null,
      "SamplesToTransform": null,
      "IsLinux": false,
      "CanRunInLinux": true,
      "DockerBaseImage": "bioseqenv.0.3",
      "Parameters": "FastANI Visualize@[reference=[S]/mnt/e/data/Arnie/FastANI_Data//Escherichia_coli_str_K12_MG1655.fna]\r\nFastANI Visualize@[OmitStep=True]\r\nFastANI Visualize@[PublishOutput=True]\r\nFastANI Visualize@[IgnoreError=False]\r\nFastANI Visualize@[IncludeOutput=True]\r\nFastANI Visualize@[IsDocker=False]\r\nFastANI@[OmitStep=False]\r\nFastANI@[PublishOutput=True]\r\nFastANI@[IgnoreError=False]\r\nFastANI@[IncludeOutput=True]\r\nFastANI@[IsDocker=True]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\FastANI_Results\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "FastANI",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "",
              "FlowScriptToken": null,
              "Command": "# FastANI (in ANIclustermap) uses libgsl.so.25. Create a shortcut to libgsl.so.25.0.0.\r\n\r\n# Copy all fasta files listed in SampleList.csv into the minimal_dataset folder.\r\nmkdir $[O.]minimal_dataset\r\nwhile read -r line\r\ndo \r\n   IFS=\u0027,\u0027 read -ra my_array \u003C\u003C\u003C \u0022$line\u0022\r\n   echo \u0022Copy ${my_array[1]}\u0022\r\n   cp \u0022${my_array[1]}\u0022 $[O.]minimal_dataset/.\r\ndone \u003C $[O.]SampleList.csv\r\n\r\n#/NGStools/FastANI/fastANI -q $[D.[SamplePath]] -r @[reference=] --visualize -o $[O.]$[D.[SampleName]]_fastani.out\r\n\r\n# Use ANIclustermap to visualize this mapping.\r\n\r\nif [ -e \u0022@[reference=]\u0022 ]\r\nthen \r\n  cp @[reference=] $[O.]minimal_dataset\r\nfi\r\n\r\nconda run -n aniclustermap ANIclustermap -i $[O.]minimal_dataset -o $[O.]$[V.[SampleName]]_ANIclustermap_Results\r\n\r\n# Put visualize.R in the work folder where it will be accessible to the second visualize step following this script module.\r\ncp /NGStools/FastANI/scripts/visualize.R $[O.]\r\n\r\n",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": true,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": null,
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": null,
            "OmitStep": false,
            "LastUpdate": "2023-09-18T08:53:28.3223735-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "FastANI",
                "ParmName": "reference",
                "DefaultValue": "",
                "UserValue": "",
                "Description": "Select a .fasta file to be used as a reference against the query data sample file(s).",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": "",
                "Extensions": "fasta|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "FastANI",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "FastANI",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "FastANI",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "FastANI",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "FastANI",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": "megashipper/fastanienv",
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "FastANI Visualize",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "",
              "FlowScriptToken": null,
              "Command": "Rscript $[I.]visualize.R $[V.[SamplePath]] @[reference=] $[I.]$[V.[SampleName]]_fastani.out.visual",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "FastANI"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": null,
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": null,
            "OmitStep": true,
            "LastUpdate": "2023-09-18T08:53:28.3223735-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "FastANI Visualize",
                "ParmName": "reference",
                "DefaultValue": "",
                "UserValue": "[S]/mnt/e/data/Arnie/FastANI_Data//Escherichia_coli_str_K12_MG1655.fna",
                "Description": "Specify the same reference as the FastANI script module.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": "",
                "Extensions": "fasta|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "FastANI Visualize",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "FastANI Visualize",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "FastANI Visualize",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "FastANI Visualize",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "FastANI Visualize",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2023-09-18T08:53:28.3223735-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": false,
      "InterfaceAdaptive": false,
      "CommandList": null,
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "FlowSeq",
      "TestConfig": {},
      "SubmissionTimeStamp": "1028072931",
      "LockUsername": null,
      "Comment": "",
      "DataSourceType": 2,
      "SerializeDataSteps": false,
      "SampleList": {
        "PDS2238346": "1[S]/mnt/e/data/Dreamer/PDS_Diagnostics_2022/PDS2238346_15dec22_Dp/PDS2238346_15dec22_Dp/20221214_1234_X3_FAV39373_f07ffbe1/PDS2238346/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "hpsuis",
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {
        "[S]/mnt/e/data/Jimmy/samnsero_demo//data_stream/": null
      },
      "SequenceDBPathLinux": "/mnt/e/data/database/hpsuis",
      "SequenceDBPath": "/mnt/e/data/database/hpsuis/hpsuis.fasta",
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": null,
      "IsLinux": false,
      "CanRunInLinux": true,
      "DockerBaseImage": "",
      "Parameters": "SamnSero_RT@[NoReport=--noreport]\r\nSamnSero_RT@[QC=--qc]\r\nSamnSero_RT@[NanoHQ=--nanohq]\r\nSamnSero_RT@[TaxonName=Salmonella enterica]\r\nSamnSero_RT@[TaxonLevel=species]\r\nSamnSero_RT@[GPU=--gpu]\r\nSamnSero_RT@[Trim=--trim]\r\nSamnSero_RT@[Platform=nanopore]\r\nSamnSero_RT@[OmitStep=False]\r\nSamnSero_RT@[PublishOutput=True]\r\nSamnSero_RT@[IgnoreError=False]\r\nSamnSero_RT@[IncludeOutput=True]\r\nSamnSero_RT@[IsDocker=False]\r\n",
      "OutputPath": "[S]E:\\data\\Jimmy\\PDS2238346\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "SamnSero_RT",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C1",
              "FlowScriptToken": null,
              "Command": "#FS Interface Adaptive\r\n\r\n# Set up the Watch folder.\r\nmkdir $[O.]Data\r\nmkdir $[O.]Proxy\r\nmkdir $[O.]Data/STOP\r\n\r\n# Initiate log file to capture stderr and stdout\r\ntouch $[O.]output.log\r\n\r\ntail -f $[O.]output.log | grep -m 1 Monitor | cut -f10 -d\u0027 \u0027 \u003E $[O.]tower.txt \u0026 \\\r\nnextflow run /home/pds_wimmer/JimmyFiles/SamnSero_Nextflow/main.nf --watchdir $[O.]Data --out_dir $[O.]Reports @[QC=--qc] @[Trim=--trim] @[NanoHQ=--nanohq] @[NoReport=--noreport] @[GPU=--gpu] --taxon_name \u0022@[TaxonName=Salmonella enterica]\u0022 --taxon_level @[TaxonLevel=species] -with-tower --medaka_batchsize 50 --seq_platform @[Platform=nanopore] --centrifuge /mnt/e/data/reference/centrifuge \u0026\u003E $[O.]output.log\r\n\r\necho $? \u003E $[O.]exitcode.txt",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "SamnSero"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "D1C1",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": null,
            "OmitStep": false,
            "LastUpdate": "2023-09-28T19:21:42.661785-06:00",
            "LastAuthor": "SQA032",
            "ScriptParmsList": [
              {
                "ModuleName": "SamnSero_RT",
                "ParmName": "Platform",
                "DefaultValue": "nanopore",
                "UserValue": "nanopore",
                "Description": "Select the sequencing platform used",
                "ComboValues": "nanopore|illumina",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero_RT",
                "ParmName": "Trim",
                "DefaultValue": "--trim",
                "UserValue": "--trim",
                "Description": "Perform adaptor trimming",
                "ComboValues": "--trim",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero_RT",
                "ParmName": "GPU",
                "DefaultValue": "--gpu",
                "UserValue": "--gpu",
                "Description": "Accelerate analysis processes with GPU. Only available on WIMMER server node.",
                "ComboValues": "--gpu",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero_RT",
                "ParmName": "TaxonLevel",
                "DefaultValue": "species",
                "UserValue": "species",
                "Description": "Taxonomy level of the sequenced organism.",
                "ComboValues": "species|genus|family|order|class|phylum|kingdom|domain",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero_RT",
                "ParmName": "TaxonName",
                "DefaultValue": "Salmonella enterica",
                "UserValue": "Salmonella enterica",
                "Description": "Name of the organism sequenced.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero_RT",
                "ParmName": "NanoHQ",
                "DefaultValue": "--nanohq",
                "UserValue": "--nanohq",
                "Description": "Optimize genome assembly parameters for Nanopore data basecalled by Guppy v5 SUP models.",
                "ComboValues": "--nanohq",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero_RT",
                "ParmName": "QC",
                "DefaultValue": "--qc",
                "UserValue": "--qc",
                "Description": "Assess quality of raw reads and assembled genomes.",
                "ComboValues": "--qc",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero_RT",
                "ParmName": "NoReport",
                "DefaultValue": "--noreport",
                "UserValue": "--noreport",
                "Description": "Disable the creation of html reports.",
                "ComboValues": "--noreport",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero_RT",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero_RT",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero_RT",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero_RT",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero_RT",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2023-10-28T08:37:27.1159513-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": true,
      "InterfaceAdaptive": true,
      "CommandList": [
        {
          "CommandToken": "D1C1",
          "FlowScriptToken": "SamnSero",
          "Command": "echo 1812676-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1812676-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv\necho 1827333-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1827333-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv\necho 1830060-2,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1830060-2/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv\necho 1903031-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1903031-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv\necho 1921247-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1921247-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv\necho 2005045-2,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/2005045-2/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv\nnextflow run jimmyliu1326/SamnSero_Nextflow -r v1.1 --input /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/samplelist.csv --outdir /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/ --annot --qc --notrim   ",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        },
        {
          "CommandToken": "D1C2",
          "FlowScriptToken": "BuscoConsolidate",
          "Command": "echo 1812676-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1812676-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv\necho 1827333-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1827333-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv\necho 1830060-2,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1830060-2/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv\necho 1903031-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1903031-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv\necho 1921247-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/1921247-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv\necho 2005045-2,/mnt/e/data/Dreamer/Salmonella_serotyping/2022/Salmonella_14June22_DT/Salmonella_14June22_DT/20220614_1224_X3_FAT45607_f9c29905/fastq_pass/2005045-2/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv\nconda run -n busco busco -m genome -f -i /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C1/assembly/ --out_path /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/ -o BuscoSummary -l bacteria_odb10\n\nwhile read -r line\ndo \n   IFS=\u0027,\u0027 read -ra my_array \u003C\u003C\u003C \u0022$line\u0022\n   echo \u0022Remove ${my_array[0]} subfolders.\u0022\n   rm -rf /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/BuscoSummary/\u0022${my_array[0]}\u0022.fasta/logs\n   rm -rf /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/BuscoSummary/\u0022${my_array[0]}\u0022.fasta/prodigal_output\n   rm -rf /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/BuscoSummary/\u0022${my_array[0]}\u0022.fasta/run_bacteria_odb10\ndone \u003C /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Salmonella/D1C2/samplelist.csv",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [
            "D1C1"
          ],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        }
      ],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "BuildTree Phantom Flow",
      "TestConfig": {},
      "SubmissionTimeStamp": "1030040552",
      "LockUsername": null,
      "Comment": "Construct a cgSNP tree from closest genomic neighbours in the database.\r\n2022-05-14 15:57 AGB465: If the --fasttree parameter is specified, also insert this line:\r\n#fs filewatcher tree.nwk\r\nas BuildTree will generate tree.nwk into the output folder. FlowScript needs to know the name of the file to look for.",
      "DataSourceType": 0,
      "SerializeDataSteps": false,
      "SampleList": {
        "SSuis_Contigs": "1[S]/mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/SSuis_Contigs/2225125_5.fasta"
      },
      "SequenceList": [
        "1616822",
        "1706501",
        "1717316",
        "1717321",
        "1721193-1",
        "1721193-4",
        "1721193-5",
        "1721193-6",
        "1721193-9",
        "1722147",
        "1732047-1"
      ],
      "SequenceListChecked": [
        "1616822",
        "1706501",
        "1717316",
        "1717321",
        "1721193-1",
        "1721193-4",
        "1721193-5",
        "1721193-6",
        "1721193-9",
        "1722147",
        "1732047-1"
      ],
      "SequenceDatabaseName": "SSuis",
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "[S]/mnt/e/data/database/SSuis",
      "SequenceDBPath": "[S]E:\\data\\database\\\\SSuis\\SSuis.fasta",
      "SamplesFromLocalDevice": null,
      "SamplesToTransform": null,
      "IsLinux": true,
      "CanRunInLinux": false,
      "DockerBaseImage": "bioseqenv.0.3",
      "Parameters": "BuildTree Phantom@[fast_tree=--fast_tree]\r\nBuildTree Phantom@[threads=4]\r\nBuildTree Phantom@[ref=[S]/mnt/e/data/reference/SSuis/GCF_002961825.1_ASM296182v1_genomic.fna]\r\nBuildTree Phantom@[cutoff=.001]\r\nBuildTree Phantom@[linkage=threshold]\r\nBuildTree Phantom@[includeAll=--include_all]\r\nBuildTree Phantom@[OmitStep=False]\r\nBuildTree Phantom@[PublishOutput=False]\r\nBuildTree Phantom@[IgnoreError=False]\r\nBuildTree Phantom@[IncludeOutput=True]\r\nBuildTree Phantom@[IsDocker=True]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\BuildTreeResults\\",
      "StartWithScript": null,
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "BuildTree Phantom",
            "LockUsername": null,
            "Comment": "2022-05-14 15:57 AGB465: If the --fasttree parameter is specified, also insert this line:\r\n#fs filewatcher tree.nwk\r\nas BuildTree will generate tree.nwk into the output folder. FlowScript needs to know the name of the file to look for.",
            "WslCommand": {
              "CommandToken": "",
              "FlowScriptToken": null,
              "Command": "# Set up the phantom.fasta database from the samples from the sequence data source.\r\nif [ -f $[O.]phantom.fasta ]\r\nthen\r\n  rm $[O.]phantom.fasta\r\nfi\r\n\r\nif [ -f $[O.]SequenceList.csv ]\r\nthen\r\ncat $[O.]SequenceList.csv | \r\nwhile read line; do\r\n      cat \u0022${line#*,}\u0022 \u003E\u003E $[O.]phantom.fasta\r\ndone\r\nfi\r\n\r\n# Set up the querylist.txt from the samples from the normal data source.\r\nif [ -f $[O.]querylist.txt ]\r\nthen\r\n  rm $[O.]querylist.txt\r\nfi\r\n\r\nif [ -f $[O.]SampleList.csv ]\r\nthen\r\ncat $[O.]SampleList.csv |\r\nwhile read line; do\r\necho \u0022${line#*,}\u0022 \u003E\u003E $[O.]querylist.txt\r\ndone\r\nfi\r\n\r\nq=\u0022\u0022\r\nif [ -f $[O.]querylist.txt ]\r\nthen\r\n   q=\u0022-l $[O.]querylist.txt\u0022 \r\nfi\r\n\r\n#fs filewatcher tree.nwk\r\n\r\n@\u003Cconda=seqdb\u003E\r\n@\u003Ccmd=/home/pds_wimmer/JimmyFiles/seqdb/seqdb\u003E\r\n\r\n#FS IsDocker\r\n@\u003Cconda=seqdb\u003E\r\n@\u003Ccmd=/seqdb-1.0/seqdb\u003E\r\n#FS End\r\n\r\nconda run -n @\u003Cconda\u003E @\u003Ccmd\u003E build_tree --linkage @[linkage=threshold] -c @[cutoff=.001] ${q} -r @[ref=] -t @[threads=4] -d $[O.]phantom.fasta -o $[O.] @[fast_tree=--fast_tree] @[includeAll=--include_all]",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": null,
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": null,
            "OmitStep": false,
            "LastUpdate": "2022-09-16T16:33:56.4582175Z",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "BuildTree Phantom",
                "ParmName": "fast_tree",
                "DefaultValue": "--fast_tree",
                "UserValue": "--fast_tree",
                "Description": "Use fast but inaccurate tree building method.",
                "ComboValues": "--fast_tree",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "BuildTree Phantom",
                "ParmName": "threads",
                "DefaultValue": "4",
                "UserValue": "4",
                "Description": "Number of threads to use.",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "BuildTree Phantom",
                "ParmName": "ref",
                "DefaultValue": "",
                "UserValue": "[S]/mnt/e/data/reference/SSuis/GCF_002961825.1_ASM296182v1_genomic.fna",
                "Description": "Reference sequence for variant calling. Required if using default tree building method.",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": null,
                "Extensions": "fasta|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "BuildTree Phantom",
                "ParmName": "cutoff",
                "DefaultValue": ".001",
                "UserValue": ".001",
                "Description": "Cutoff value to filter database matches.",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 3,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "BuildTree Phantom",
                "ParmName": "linkage",
                "DefaultValue": "threshold",
                "UserValue": "threshold",
                "Description": "Method to define database matches.",
                "ComboValues": "threshold|tophits|cluster",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "BuildTree Phantom",
                "ParmName": "includeAll",
                "DefaultValue": "--include_all",
                "UserValue": "--include_all",
                "Description": "Disables sequence match filtering by adjusting search parameters to include all database sequences.",
                "ComboValues": "--include_all",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "BuildTree Phantom",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuildTree Phantom",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuildTree Phantom",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuildTree Phantom",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuildTree Phantom",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/QNE801/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "BuildTree_Publish",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "",
              "FlowScriptToken": null,
              "Command": "cp  $[I{BuildTree Phantom}.]tree.nwk  $[O.]\r\ncp  $[I{BuildTree Phantom}.]metadata_microreact.csv  $[O.]",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "BuildTree Phantom"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": null,
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": null,
            "OmitStep": false,
            "LastUpdate": "2022-12-23T06:10:14.5781506-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 0,
            "Slurm_Min_Resources": null,
            "Slurm_Moderate_Resources": null,
            "Slurm_Max_Resources": null,
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2023-10-30T16:06:32.093005-06:00",
      "LastAuthor": "QNE801",
      "FindFolders": false,
      "InterfaceAdaptive": false,
      "CommandList": null,
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "Tracy Flow",
      "TestConfig": {
        "1": {
          "TestSelect": true,
          "TestNumber": 1,
          "TestFlowScript": null,
          "TestMachine": "WSL2 - This machine",
          "TestOutputPath": null,
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        }
      },
      "SubmissionTimeStamp": "0123025450",
      "LockUsername": null,
      "Comment": "",
      "DataSourceType": 0,
      "SerializeDataSteps": false,
      "SampleList": {
        "sample01": "1[S]/mnt/e/data/std_testing/Tracy/input/sample01/",
        "sample02": "1[S]/mnt/e/data/std_testing/Tracy/input/sample02/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "ForAnatoliy",
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "[S]/mnt/e/data/database/ForAnatoliy",
      "SequenceDBPath": "[S]E:\\data\\database\\\\ForAnatoliy\\ForAnatoliy.fasta",
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": {},
      "IsLinux": true,
      "CanRunInLinux": true,
      "DockerBaseImage": "bioseqenv.0.3",
      "Parameters": "Blastn@[numalign=50]\r\nBlastn@[outfmt=\u00227  qseqid sseqid scomnames staxids pident length qcovs evalue bitscore\u0022]\r\nBlastn@[OmitStep=False]\r\nBlastn@[PublishOutput=True]\r\nBlastn@[IgnoreError=False]\r\nBlastn@[IncludeOutput=True]\r\nBlastn@[IsDocker=False]\r\nBlastn@[IsSlurm=True]\r\nHarvestTracy@[OmitStep=False]\r\nHarvestTracy@[PublishOutput=True]\r\nHarvestTracy@[IgnoreError=False]\r\nHarvestTracy@[IncludeOutput=True]\r\nHarvestTracy@[IsDocker=False]\r\nHarvestTracy@[IsSlurm=True]\r\nTracy@[includeVirusRef=]\r\nTracy@[virusRef=]\r\nTracy@[maxFastq=all]\r\nTracy@[OmitStep=False]\r\nTracy@[PublishOutput=False]\r\nTracy@[IgnoreError=False]\r\nTracy@[IncludeOutput=True]\r\nTracy@[IsDocker=False]\r\nTracy@[IsSlurm=True]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\TracyResults\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "Blastn",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C1",
              "FlowScriptToken": null,
              "Command": "echo \u0022Blast sample name=$[I{HarvestTracy}.]*.fasta\u0022\r\nexport BLASTDB=/mnt/e/data/reference/databases/BLASTDB/\r\nconda run -n blast-2.12.0 blastn -db nt -query $[I{HarvestTracy}.]*.fasta -outfmt @[outfmt=\u00227  qseqid sseqid scomnames staxids pident length qcovs evalue bitscore\u0022] -num_alignments @[numalign=50] -out $[O.[SampleName]].alignment.txt -remote\r\n",
              "IsNoop": false,
              "CondaPrefix": "blast-2.12.0",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "HarvestTracy"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-19T12:07:57.5579259-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Blastn",
                "ParmName": "numalign",
                "DefaultValue": "50",
                "UserValue": "50",
                "Description": "Number of alignments to report.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Blastn",
                "ParmName": "outfmt",
                "DefaultValue": "\u00227  qseqid sseqid scomnames staxids pident length qcovs evalue bitscore\u0022",
                "UserValue": "\u00227  qseqid sseqid scomnames staxids pident length qcovs evalue bitscore\u0022",
                "Description": "Output reporting format (6=tabular).",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Blastn",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": "OmitStep",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Blastn",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "PublishOutput",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Blastn",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": "IgnoreError",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Blastn",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "IncludeOutput",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Blastn",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": "IsDocker",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Blastn",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "IsSlurm",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "HarvestTracy",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C2",
              "FlowScriptToken": null,
              "Command": "cp $[I.]/$[V.[SampleName]].cons.fa $[O.]/$[V.[SampleName]].cons.fa\r\nsed \u0027s/\u003EConsensus/\u003E$[V.[SampleName]]/\u0027 $[O.]/$[V.[SampleName]].cons.fa \u003E $[O.]$[V.[SampleName]].fasta",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Tracy"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-06-08T09:17:40.9522596-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "HarvestTracy",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": "OmitStep",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "HarvestTracy",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "PublishOutput",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "HarvestTracy",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": "IgnoreError",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "HarvestTracy",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "IncludeOutput",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "HarvestTracy",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": "IsDocker",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "HarvestTracy",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "IsSlurm",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          },
          {
            "ModuleName": "Tracy",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C1",
              "FlowScriptToken": null,
              "Command": "conda run -n tracy BatchTracy.sh -p 0 -m @[maxFastq=all] -s $[V.[SampleName]] -i $[D.[SamplePath]] -o $[O.] @[includeVirusRef=-r @[virusRef=]]",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-08-17T07:10:02.8661642-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Tracy",
                "ParmName": "includeVirusRef",
                "DefaultValue": "-r @[virusRef=]",
                "UserValue": "",
                "Description": "",
                "ComboValues": "-r @[virusRef=]|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Tracy",
                "ParmName": "virusRef",
                "DefaultValue": "",
                "UserValue": "",
                "Description": "Include a .fasta reference genome.",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": null,
                "Extensions": "fasta|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Tracy",
                "ParmName": "maxFastq",
                "DefaultValue": "all",
                "UserValue": "all",
                "Description": "Specify either \u0027all\u0027, or maximum number of .ab1 read files.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Tracy",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": "OmitStep",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Tracy",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": "PublishOutput",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Tracy",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": "IgnoreError",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Tracy",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "IncludeOutput",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Tracy",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": "IsDocker",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Tracy",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "IsSlurm",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": null,
            "CaseNumberList_csv": null
          }
        ]
      },
      "LastUpdate": "2024-01-23T14:55:05.6387839-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [
        {
          "CommandToken": "D1C1",
          "FlowScriptToken": "Tracy",
          "Command": "conda run -n tracy BatchTracy.sh -p 0 -m all -s PDS2239175-16 -i /mnt/e/data/Arnie/PDS2239175-16/ -o /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/Tracy_Flow_0119110521/D1C1/ \n",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        }
      ],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "TestWSLBash",
      "TestConfig": {
        "1": {
          "TestSelect": true,
          "TestNumber": 1,
          "TestFlowScript": null,
          "TestMachine": "WSL2 - This machine",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\TestWSLBash_0110062701_6917aa3",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        },
        "2": {
          "TestSelect": false,
          "TestNumber": 2,
          "TestFlowScript": null,
          "TestMachine": "Linux - Monod",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\TestWSLBash_0110063654_6917aa3",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        }
      },
      "SubmissionTimeStamp": "0202070852",
      "LockUsername": null,
      "Comment": "",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "fastq_pass": "1[S]/mnt/x/PDS-BioSeqDB/NAS/NAS04_AT1P17/bos_taurus_depletion/20220624_1506_MN26243_FAT25659_defad8c3/fastq_pass/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "SSuis_Ruwani",
      "ParameterFilesToUpload": {
        "[S]/mnt/x/data/Arnie/BioSeqDB_SystemMessage.txt": null
      },
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "[S]/mnt/e/data/database/SSuis_Ruwani",
      "SequenceDBPath": "[S]E:\\data\\database\\SSuis_Ruwani\\SSuis_Ruwani.fasta",
      "SamplesFromLocalDevice": null,
      "SamplesToTransform": null,
      "IsLinux": true,
      "CanRunInLinux": true,
      "DockerBaseImage": "bioseqenv.0.3",
      "Parameters": "TestWSLBash@[\u003CIsSLURM\u003E=0]\r\nTestWSLBash@[Primer=[S]/mnt/x/data/Arnie/BioSeqDB_SystemMessage.txt]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\TestWSLBash_Results\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "TestWSLBash",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C2",
              "FlowScriptToken": null,
              "Command": "echo \u0022IsSLURM=@[\u003CIsSLURM\u003E=]\u0022\r\nnextflow -version\r\n# mkdir $[O.]$[I.[SampleName]]\r\n# cp $[I.[SamplePath]] $[O.]$[I.[SampleName]]\r\ncp @[Primer=[S]/mnt/r/PDS-BioSeqDB/isPCR/AAFC//20230503_Pbrassicae-PCRproducts.txt] $[O.]primer.txt\r\nll @[Primer=[S]/mnt/r/PDS-BioSeqDB/isPCR/AAFC//20230503_Pbrassicae-PCRproducts.txt]\r\n#conda run -n busco busco --list-datasets",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Compress"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "D1C2",
            "OmitStep": false,
            "LastUpdate": "2023-04-22T11:47:58.7859189-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "TestWSLBash",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "TestWSLBash",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "TestWSLBash",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "TestWSLBash",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "TestWSLBash",
                "ParmName": "Primer",
                "DefaultValue": "[S]/mnt/r/PDS-BioSeqDB/isPCR/AAFC//20230503_Pbrassicae-PCRproducts.txt",
                "UserValue": "[S]/mnt/x/data/Arnie/BioSeqDB_SystemMessage.txt",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": null,
                "Extensions": "txt|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "TestWSLBash",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "TestWSLBash",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "TestWSLBash",
                "ParmName": "\u003CIsSLURM\u003E",
                "DefaultValue": "0",
                "UserValue": "0",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "TestWSLBash",
                "ParmName": "\u003CSLURM_CPUs\u003E",
                "DefaultValue": "2",
                "UserValue": "2",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "TestWSLBash",
                "ParmName": "\u003CSLURM_GBs\u003E",
                "DefaultValue": "4",
                "UserValue": "4",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "TestWSLBash",
                "ParmName": "\u003CSLURM_Minutes\u003E",
                "DefaultValue": "18",
                "UserValue": "18",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 1,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "Compress",
            "LockUsername": null,
            "Comment": null,
            "WslCommand": {
              "CommandToken": "D2C1",
              "FlowScriptToken": null,
              "Command": "count=\u0060ls -1 $[D.[SamplePath]]*.fastq 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq \u003E $[O.]$[V.[SampleName]].fastq\r\ngzip -f $[O.]$[V.[SampleName]].fastq 2\u003E\u00261 \u003E /dev/null;\r\nfi \r\ncount=\u0060ls -1 $[D.[SamplePath]]*.fastq.gz 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq.gz \u003E $[O.]$[V.[SampleName]].fastq.gz\r\nfi",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": false,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-06T06:45:00.6544378-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Compress",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "false",
                "Description": "OmitStep",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "false",
                "Description": "PublishOutput",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "false",
                "Description": "IgnoreError",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "false",
                "Description": "IncludeOutput",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "false",
                "Description": "IsDocker",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IsSlurm",
                "ComboValues": "true|false",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "\u003CIsSLURM\u003E",
                "DefaultValue": "1",
                "UserValue": "1",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "\u003CSLURM_CPUs\u003E",
                "DefaultValue": "2",
                "UserValue": "2",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "\u003CSLURM_GBs\u003E",
                "DefaultValue": "4",
                "UserValue": "4",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "\u003CSLURM_Minutes\u003E",
                "DefaultValue": "18",
                "UserValue": "18",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 1,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          }
        ]
      },
      "LastUpdate": "2024-02-02T07:09:58.492375-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": null,
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "Salmonella",
      "TestConfig": {
        "1": {
          "TestSelect": true,
          "TestNumber": 1,
          "TestFlowScript": null,
          "TestMachine": "WSL2 - This machine",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\Salmonella_0114093110_e2deb14",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        },
        "2": {
          "TestSelect": true,
          "TestNumber": 2,
          "TestFlowScript": null,
          "TestMachine": "Linux - Monod",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\Salmonella_0115082334_e2deb14",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        }
      },
      "SubmissionTimeStamp": "0124110441",
      "LockUsername": null,
      "Comment": "The Salmonella FlowScript functions to predict Salmonella serotypes from raw Nanopore sequencing data. The pipeline uses flye to assemble the long reads, medaka for genome polishing, and SISTR for in-silico serotyping. When complete, the pipeline produces a single \u0027sistr_res_aggregate\u0027 file that aggregates the results from all the included samples.",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "barcode1_2037151-1": "1[S]/mnt/e/data/std_testing/salmonella/input/barcode1_2037151-1/",
        "barcode2_2037151-2": "1[S]/mnt/e/data/std_testing/salmonella/input/barcode2_2037151-2/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "hpsuis",
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "/c/data/database/hpsuis",
      "SequenceDBPath": "/c/data/database/hpsuis/hpsuis.fasta",
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": {},
      "IsLinux": true,
      "CanRunInLinux": true,
      "DockerBaseImage": "bioseqenv.0.3",
      "Parameters": "BuscoConsolidate@[lineage=bacteria_odb10]\r\nBuscoConsolidate@[OmitStep=False]\r\nBuscoConsolidate@[PublishOutput=True]\r\nBuscoConsolidate@[IgnoreError=False]\r\nBuscoConsolidate@[IncludeOutput=True]\r\nBuscoConsolidate@[IsDocker=True]\r\nBuscoConsolidate@[IsSlurm=True]\r\nSamnSero@[DisableBinning=]\r\nSamnSero@[Resume=]\r\nSamnSero@[NoReport=]\r\nSamnSero@[Annot=--annot]\r\nSamnSero@[QC=--qc]\r\nSamnSero@[NanoHQ=]\r\nSamnSero@[TaxonName=Salmonella enterica]\r\nSamnSero@[TaxonLevel=species]\r\nSamnSero@[GPU=]\r\nSamnSero@[Metagenomics=off]\r\nSamnSero@[Trim=]\r\nSamnSero@[Platform=nanopore]\r\nSamnSero@[OmitStep=False]\r\nSamnSero@[PublishOutput=False]\r\nSamnSero@[IgnoreError=False]\r\nSamnSero@[IncludeOutput=True]\r\nSamnSero@[IsDocker=False]\r\nSamnSero@[IsSlurm=True]\r\nSamnSero@[\u003CisSLURM\u003E=0]\r\nSamnSero@[\u003CIsSlurm\u003E=0]\r\nSamnSero_Publish@[OmitStep=False]\r\nSamnSero_Publish@[PublishOutput=True]\r\nSamnSero_Publish@[IgnoreError=False]\r\nSamnSero_Publish@[IncludeOutput=False]\r\nSamnSero_Publish@[IsDocker=False]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\SamnseroTest_Results\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "BuscoConsolidate",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C2",
              "FlowScriptToken": null,
              "Command": "# create an input directory of assembly symlinks\r\nmkdir -p $[O.]busco_input\r\nfind $[I{SamnSero}.]assembly/ -type f -name \u0027*.fasta\u0027 -exec sh -c \u0027ln -s {} $[O.]busco_input/\u0022$(basename {})\u0022\u0027 \\;\r\n# run busco\r\nconda run -n busco busco -m genome -f -i $[O.]busco_input/ --out_path $[O.] -o BuscoSummary -l @[lineage=bacteria_odb10]\r\nwhile read -r line\r\ndo \r\n   IFS=\u0027,\u0027 read -ra my_array \u003C\u003C\u003C \u0022$line\u0022\r\n   echo \u0022Remove ${my_array[0]} subfolders.\u0022\r\n   rm -rf $[O.]BuscoSummary/\u0022${my_array[0]}\u0022.fasta/logs\r\n   rm -rf $[O.]BuscoSummary/\u0022${my_array[0]}\u0022.fasta/prodigal_output\r\n   rm -rf $[O.]BuscoSummary/\u0022${my_array[0]}\u0022.fasta/run_@[lineage=bacteria_odb10]\r\ndone \u003C $[O.]SampleList.csv",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data",
                "SamnSero"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": "D1C2",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-07-04T07:28:31.3519837-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "BuscoConsolidate",
                "ParmName": "lineage",
                "DefaultValue": "bacteria_odb10",
                "UserValue": "bacteria_odb10",
                "Description": "Select a lineage database from the dropdown.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 8,
                "Validator": null,
                "Extensions": "",
                "MissingValue": null,
                "Public": false
              },
              {
                "ModuleName": "BuscoConsolidate",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuscoConsolidate",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuscoConsolidate",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuscoConsolidate",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuscoConsolidate",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BuscoConsolidate",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": "bioseqenv.0.3",
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "SamnSero",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C1",
              "FlowScriptToken": null,
              "Command": "# check for slurm support\r\n# script variables\r\nargs=\u0022\u0022\r\n# check if slurm is available in env\r\nif [[ @[\u003CIsSlurm\u003E=] -eq 1 ]]; then \r\nargs=\u0022-profile slurm,standard --account pds_monod\u0022\r\nfi\r\necho \u0022isSLURM=@[\u003CisSLURM\u003E=]\u0022\r\n# run pipeline\r\nnextflow run jimmyliu1326/SamnSero_Nextflow -r main -latest --input $[O.]SampleList.csv --out_dir $[O.] @[Annot=--annot] @[QC=--qc] @[Trim=--trim] @[NanoHQ=--nanohq] @[NoReport=--noreport] @[GPU=--gpu] --taxon_name \u0022@[TaxonName=Salmonella enterica]\u0022 --taxon_level @[TaxonLevel=species] @[Resume=-resume] --meta @[Metagenomics=off] -with-tower --medaka_batchsize 50 --seq_platform @[Platform=nanopore] --centrifuge /mnt/e/data/reference/centrifuge @[DisableBinning=--disable_binning]",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": "D1C1",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-30T07:45:47.7849963-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "SamnSero",
                "ParmName": "DisableBinning",
                "DefaultValue": "--disable_binning",
                "UserValue": "",
                "Description": "Disable binning contigs from metagenomic assemblies",
                "ComboValues": "--disable_binning",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "Resume",
                "DefaultValue": "-resume",
                "UserValue": "",
                "Description": "Resume from the previous run.",
                "ComboValues": "-resume",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "NoReport",
                "DefaultValue": "--noreport",
                "UserValue": "",
                "Description": "Disable the creation of html reports.",
                "ComboValues": "--noreport",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "Annot",
                "DefaultValue": "--annot",
                "UserValue": "--annot",
                "Description": "Perform genome annotation after genome assembly.",
                "ComboValues": "--annot",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "QC",
                "DefaultValue": "--qc",
                "UserValue": "--qc",
                "Description": "Assess quality of raw reads and assembled genomes.",
                "ComboValues": "--qc",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "NanoHQ",
                "DefaultValue": "--nanohq",
                "UserValue": "",
                "Description": "Optimize genome assembly parameters for Nanopore data basecalled by Guppy v5 SUP models.",
                "ComboValues": "--nanohq",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "TaxonName",
                "DefaultValue": "Salmonella enterica",
                "UserValue": "Salmonella enterica",
                "Description": "Name of the organism sequenced.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "TaxonLevel",
                "DefaultValue": "species",
                "UserValue": "species",
                "Description": "Taxonomy level of the sequenced organism.",
                "ComboValues": "species|genus|family|order|class|phylum|kingdom|domain",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "GPU",
                "DefaultValue": "--gpu",
                "UserValue": "",
                "Description": "Accelerate analysis processes with GPU. Only available on WIMMER server node.",
                "ComboValues": "--gpu",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "Metagenomics",
                "DefaultValue": "off",
                "UserValue": "off",
                "Description": "Indicate the samples are metagenomic samples.",
                "ComboValues": "off|targeted|untargeted",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "Trim",
                "DefaultValue": "--trim",
                "UserValue": "",
                "Description": "Perform adaptor trimming",
                "ComboValues": "--trim",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "Platform",
                "DefaultValue": "nanopore",
                "UserValue": "nanopore",
                "Description": "Select the sequencing platform used",
                "ComboValues": "nanopore|illumina",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "\u003CisSLURM\u003E",
                "DefaultValue": "0",
                "UserValue": "0",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": false
              },
              {
                "ModuleName": "SamnSero",
                "ParmName": "\u003CIsSlurm\u003E",
                "DefaultValue": "0",
                "UserValue": "0",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": false
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 3,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 8,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "SamnSero_Publish",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C3",
              "FlowScriptToken": null,
              "Command": "cp -r $[I{SamnSero}.]analysis_results.csv $[O.]\r\nif test -d $[I{SamnSero}.]annotations; then cp -r $[I{SamnSero}.]annotations $[O.]; fi\r\nif test -d $[I{SamnSero}.]qc; then cp -r $[I{SamnSero}.]qc $[O.]; fi\r\nif test -d $[I{SamnSero}.]reports; then cp -r $[I{SamnSero}.]reports $[O.]; fi\r\ncp -r $[I{SamnSero}.]pipeline_info $[O.]\r\ncp -r $[I{SamnSero}.]assembly $[O.]\r\n#cp -r $[I{BuscoConsolidate}.]BuscoSummary  $[O.].",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": false,
              "IsParallel": false,
              "IsSlurm": false,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "BuscoConsolidate",
                "SamnSero"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-19T08:45:41.3940123-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "SamnSero_Publish",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero_Publish",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero_Publish",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero_Publish",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SamnSero_Publish",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          }
        ]
      },
      "LastUpdate": "2024-02-02T08:23:37.6232203-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "StrepSuisFlow",
      "TestConfig": {
        "1": {
          "TestSelect": true,
          "TestNumber": 1,
          "TestFlowScript": "StrepSuisFlow",
          "TestMachine": "WSL2 - This machine",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\StrepSuisFlow_0118100217_WSL2_",
          "TestSuccess": true,
          "TestSuccessLabel": "Success",
          "TestIsRunning": false
        },
        "2": {
          "TestSelect": true,
          "TestNumber": 2,
          "TestFlowScript": "StrepSuisFlow",
          "TestMachine": "Linux - Monod",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\StrepSuisFlow_0118100217_Linux_eec36ce",
          "TestSuccess": false,
          "TestSuccessLabel": "",
          "TestIsRunning": false
        }
      },
      "SubmissionTimeStamp": "0202021325",
      "LockUsername": null,
      "Comment": "This pipeline is designed to rapidly infer Streptococcus suis serotype from Oxford Nanopore Data by first assemblying a draft genome using Miniasm followed by genome polishing with racon and medaka. The processed assembly is subsequently queried against the Cps Blast Database to determine isolate serotype. An additional variant calling step is employed to resolve serotype 2 and 1/2, as well as 1 and 14.  Choose either a folder of fastq files, or a .gz file.",
      "DataSourceType": 2,
      "SerializeDataSteps": false,
      "SampleList": {
        "PDS1721193-1": "1[S]/mnt/e/data/std_testing/StrepSuis/input/PDS1721193-1/",
        "PDS1721193-4": "1[S]/mnt/e/data/std_testing/StrepSuis/input/PDS1721193-4/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "SSuis",
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "[S]/mnt/e/data/database/SSuis",
      "SequenceDBPath": "[S]E:\\data\\database\\\\SSuis\\SSuis.fasta",
      "SamplesFromLocalDevice": null,
      "SamplesToTransform": null,
      "IsLinux": true,
      "CanRunInLinux": true,
      "DockerBaseImage": "bioseqenv.0.3",
      "Parameters": "StrepSuis@[IsSlurm=true]\r\nStrepSuis@[\u003CIsSLURM\u003E=1]\r\nStrepSuis@[\u003CSLURM_CPUs\u003E=32]\r\nStrepSuis@[\u003CSLURM_GBs\u003E=64]\r\nStrepSuis@[\u003CSLURM_Minutes\u003E=120]\r\nStrepSuis@[OmitStep=False]\r\nStrepSuis@[PublishOutput=False]\r\nStrepSuis@[IgnoreError=False]\r\nStrepSuis@[IncludeOutput=True]\r\nStrepSuis@[IsDocker=True]\r\nCompress@[IsSlurm=true]\r\nCompress@[\u003CIsSLURM\u003E=1]\r\nCompress@[\u003CSLURM_CPUs\u003E=6]\r\nCompress@[\u003CSLURM_GBs\u003E=16]\r\nCompress@[\u003CSLURM_Minutes\u003E=45]\r\nCompress@[OmitStep=False]\r\nCompress@[PublishOutput=False]\r\nCompress@[IgnoreError=False]\r\nCompress@[IncludeOutput=False]\r\nCompress@[IsDocker=False]\r\nDragonFlye@[IsSlurm=true]\r\nDragonFlye@[\u003CIsSLURM\u003E=1]\r\nDragonFlye@[\u003CSLURM_CPUs\u003E=6]\r\nDragonFlye@[\u003CSLURM_GBs\u003E=16]\r\nDragonFlye@[\u003CSLURM_Minutes\u003E=45]\r\nDragonFlye@[gsize=2200000]\r\nDragonFlye@[raconRounds=1]\r\nDragonFlye@[medakaModel=r104_e81_sup_g610]\r\nDragonFlye@[medakaRounds=1]\r\nDragonFlye@[nopolish=]\r\nDragonFlye@[nano-hq=]\r\nDragonFlye@[OmitStep=False]\r\nDragonFlye@[PublishOutput=False]\r\nDragonFlye@[IgnoreError=False]\r\nDragonFlye@[IncludeOutput=True]\r\nDragonFlye@[IsDocker=True]\r\nSsuis_Publish@[IsSlurm=true]\r\nSsuis_Publish@[\u003CIsSLURM\u003E=1]\r\nSsuis_Publish@[\u003CSLURM_CPUs\u003E=6]\r\nSsuis_Publish@[\u003CSLURM_GBs\u003E=16]\r\nSsuis_Publish@[\u003CSLURM_Minutes\u003E=45]\r\nSsuis_Publish@[OmitStep=False]\r\nSsuis_Publish@[PublishOutput=True]\r\nSsuis_Publish@[IgnoreError=False]\r\nSsuis_Publish@[IncludeOutput=False]\r\nSsuis_Publish@[IsDocker=False]\r\n",
      "OutputPath": "[S]E:\\data\\Jimmy\\ssuis_atypical\\ssuissero\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "StrepSuis",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C3",
              "FlowScriptToken": null,
              "Command": "conda run -n SsuisSero SsuisSero.sh -s $[V.[SampleName]] -i $[I.]contigs.fa -o $[O.] -x fasta -t @[\u003CSLURM_CPUs\u003E=]",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "DragonFlye"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-07-20T13:52:01.7938144-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "StrepSuis",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "StrepSuis",
                "ParmName": "\u003CIsSLURM\u003E",
                "DefaultValue": "1",
                "UserValue": "1",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "StrepSuis",
                "ParmName": "\u003CSLURM_CPUs\u003E",
                "DefaultValue": "2",
                "UserValue": "2",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "StrepSuis",
                "ParmName": "\u003CSLURM_GBs\u003E",
                "DefaultValue": "64",
                "UserValue": "64",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "StrepSuis",
                "ParmName": "\u003CSLURM_Minutes\u003E",
                "DefaultValue": "120",
                "UserValue": "120",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "StrepSuis",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "StrepSuis",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "StrepSuis",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "StrepSuis",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "StrepSuis",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/SQA032/Work/"
            ],
            "DockerImage": "megashipper/ssuisseroenv",
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 1,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 32,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "Compress",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C1",
              "FlowScriptToken": null,
              "Command": "count=\u0060ls -1 $[D.[SamplePath]]*.fastq 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq \u003E $[O.]$[V.[SampleName]].fastq\r\ngzip -f $[O.]$[V.[SampleName]].fastq 2\u003E\u00261 \u003E /dev/null;\r\nfi \r\ncount=\u0060ls -1 $[D.[SamplePath]]*.fastq.gz 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq.gz \u003E $[O.]$[V.[SampleName]].fastq.gz\r\nfi",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": false,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-06T06:45:00.6544378-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Compress",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "\u003CIsSLURM\u003E",
                "DefaultValue": "1",
                "UserValue": "1",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "\u003CSLURM_CPUs\u003E",
                "DefaultValue": "6",
                "UserValue": "6",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "\u003CSLURM_GBs\u003E",
                "DefaultValue": "16",
                "UserValue": "16",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "\u003CSLURM_Minutes\u003E",
                "DefaultValue": "45",
                "UserValue": "45",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "DragonFlye",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C2",
              "FlowScriptToken": null,
              "Command": "conda run -n dragonflye dragonflye --force  --cpus @[\u003CSLURM_CPUs\u003E=] --ram @[\u003CSLURM_GBs\u003E=]  --assembler flye @[nopolish=--nopolish] @[nano-hq=--nanohq] --medaka @[medakaRounds=1] --model @[medakaModel=x] --racon @[raconRounds=0] --reads $[I.]$[V.[SampleName]].fastq* --outdir $[O.] --gsize @[gsize=2200000]",
              "IsNoop": false,
              "CondaPrefix": "dragonflye",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Compress"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-06-28T10:31:04.4738465-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "DragonFlye",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "\u003CIsSLURM\u003E",
                "DefaultValue": "1",
                "UserValue": "1",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "\u003CSLURM_CPUs\u003E",
                "DefaultValue": "8",
                "UserValue": "8",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "\u003CSLURM_GBs\u003E",
                "DefaultValue": "16",
                "UserValue": "16",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "\u003CSLURM_Minutes\u003E",
                "DefaultValue": "45",
                "UserValue": "45",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "gsize",
                "DefaultValue": "2200000",
                "UserValue": "2200000",
                "Description": "",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "raconRounds",
                "DefaultValue": "0",
                "UserValue": "1",
                "Description": "",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "medakaModel",
                "DefaultValue": "x",
                "UserValue": "r104_e81_sup_g610",
                "Description": "",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 7,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "medakaRounds",
                "DefaultValue": "1",
                "UserValue": "1",
                "Description": "",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "nopolish",
                "DefaultValue": "--nopolish",
                "UserValue": "",
                "Description": "",
                "ComboValues": "--nopolish",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "nano-hq",
                "DefaultValue": "--nanohq",
                "UserValue": "",
                "Description": "",
                "ComboValues": "--nanohq",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/SQA032/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 8,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "Ssuis_Publish",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C4",
              "FlowScriptToken": null,
              "Command": "#FS ForEachPrereq DragonFlye\r\nmkdir -p $[O.]$[V.[SampleName]]\r\ncp -r $[I{DragonFlye}.]contigs.fa $[O.]$[V.[SampleName]]\r\n#FS End\r\n#FS ForEachPrereq StrepSuis\r\nmkdir -p $[O.]$[V.[SampleName]]\r\ncp -r $[I{StrepSuis}.]* $[O.]$[V.[SampleName]]\r\n#FS End\r\nawk \u0027NR == 1 || FNR \u003E 1\u0027 $[O.]*/*.tsv \u003E $[O.]analysis_results.tsv",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": false,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "DragonFlye",
                "StrepSuis"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": true,
            "RunAfterALLCmdToken": "D1C4",
            "OmitStep": false,
            "LastUpdate": "2022-08-19T16:55:53.8035935-06:00",
            "LastAuthor": "SQA032",
            "ScriptParmsList": [
              {
                "ModuleName": "Ssuis_Publish",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Ssuis_Publish",
                "ParmName": "\u003CIsSLURM\u003E",
                "DefaultValue": "1",
                "UserValue": "1",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Ssuis_Publish",
                "ParmName": "\u003CSLURM_CPUs\u003E",
                "DefaultValue": "6",
                "UserValue": "6",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Ssuis_Publish",
                "ParmName": "\u003CSLURM_GBs\u003E",
                "DefaultValue": "16",
                "UserValue": "16",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Ssuis_Publish",
                "ParmName": "\u003CSLURM_Minutes\u003E",
                "DefaultValue": "45",
                "UserValue": "45",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Ssuis_Publish",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Ssuis_Publish",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Ssuis_Publish",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Ssuis_Publish",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Ssuis_Publish",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 1,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          }
        ]
      },
      "LastUpdate": "2024-02-02T14:31:35.5700069-06:00",
      "LastAuthor": "SQA032",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": null,
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "CANSFlow",
      "TestConfig": {
        "1": {
          "TestSelect": true,
          "TestNumber": 1,
          "TestFlowScript": null,
          "TestMachine": "WSL2 - This machine",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\CANSFlow_0115010417_302832d",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        },
        "2": {
          "TestSelect": true,
          "TestNumber": 2,
          "TestFlowScript": null,
          "TestMachine": "Linux - Monod",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\CANSFlow_0109021847_3029f6b",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        }
      },
      "SubmissionTimeStamp": "0114092214",
      "LockUsername": null,
      "Comment": "",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "2036822-3": "1[S]/mnt/e/data/std_testing/CANS/input/2036822-3/",
        "2039363": "1[S]/mnt/e/data/std_testing/CANS/input/2039363/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "SSuis",
      "ParameterFilesToUpload": {
        "[S]/mnt/e/data/std_testing/CANS/primers.txt": null
      },
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "[S]/mnt/e/data/database/SSuis",
      "SequenceDBPath": "[S]E:\\data\\database\\\\SSuis\\SSuis.fasta",
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": {},
      "IsLinux": false,
      "CanRunInLinux": true,
      "DockerBaseImage": "jimmyliu1326/cans",
      "Parameters": "CANS@[targetCoverage=1000]\r\nCANS@[sequenceLength=1750]\r\nCANS@[mode=dynamic]\r\nCANS@[notrim=--notrim]\r\nCANS@[deviation=50]\r\nCANS@[model=r9]\r\nCANS@[primers=[S]/mnt/e/data/std_testing/CANS/primers.txt]\r\nCANS@[cpus=4]\r\nCANS@[host=]\r\nCANS@[OmitStep=False]\r\nCANS@[PublishOutput=True]\r\nCANS@[IgnoreError=False]\r\nCANS@[IncludeOutput=True]\r\nCANS@[IsDocker=True]\r\nCANS@[IsSlurm=True]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\CANSResults\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "CANS",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C1",
              "FlowScriptToken": null,
              "Command": "# check primers input\r\nprimers=@[primers=]\r\nif ! test -z $primers; then primers_args=\u0022--primers $primers\u0022; fi\r\n# check host input\r\nhost=@[host=]\r\nif ! test -z $host; then host_args=\u0022--host $host\u0022; fi \r\nCANS.sh  -t @[\u003CSLURM_CPUs\u003E=] $host_args $primers_args -m @[model=r9] -s @[targetCoverage=1000] -d @[deviation=50] @[notrim=--notrim]  --mode @[mode=dynamic] -i $[O.]SampleList.csv -o $[O.] -e @[sequenceLength=1750]\r\nrm -rf $[O.].snakemake",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": true,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": "D1C1",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-07-05T08:30:05.7772726-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "CANS",
                "ParmName": "targetCoverage",
                "DefaultValue": "1000",
                "UserValue": "1000",
                "Description": "Target coverage for consensus calling (default 1000).",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CANS",
                "ParmName": "sequenceLength",
                "DefaultValue": "1750",
                "UserValue": "1750",
                "Description": "Expected sequence length (bps) of target amplicon (default 1750).",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CANS",
                "ParmName": "mode",
                "DefaultValue": "dynamic",
                "UserValue": "dynamic",
                "Description": "Mode for full-length reads identification (dynamic or static).",
                "ComboValues": "dynamic|static",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CANS",
                "ParmName": "notrim",
                "DefaultValue": "--notrim",
                "UserValue": "--notrim",
                "Description": "Adapter trimming by porechop (leave blank to trim).",
                "ComboValues": "--notrim",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CANS",
                "ParmName": "deviation",
                "DefaultValue": "50",
                "UserValue": "50",
                "Description": "Read deviation length from (\u002B/-) expected read length (default = 50 bps).",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CANS",
                "ParmName": "model",
                "DefaultValue": "r9",
                "UserValue": "r9",
                "Description": "Flowcell chemistry model (R9 or R10).",
                "ComboValues": "r9|r10",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CANS",
                "ParmName": "primers",
                "DefaultValue": "",
                "UserValue": "[S]/mnt/e/data/std_testing/CANS/primers.txt",
                "Description": "Path to headerless .tsv file with fwd/rev primers to select PCR products for consensus building.",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": "",
                "Extensions": "ANY|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CANS",
                "ParmName": "host",
                "DefaultValue": "",
                "UserValue": "",
                "Description": "Path to reference sequence for dehosting (optional).",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": "",
                "Extensions": "fasta|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "CANS",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CANS",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CANS",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CANS",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CANS",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CANS",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "CANS",
                "ParmName": "\u003CSLURM_CPUs\u003E",
                "DefaultValue": "12",
                "UserValue": "12",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": false
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": "jimmyliu1326/cans",
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 12,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          }
        ]
      },
      "LastUpdate": "2024-02-02T14:32:21.9369445-06:00",
      "LastAuthor": "SQA032",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "InfluenzaA Flow",
      "TestConfig": {
        "1": {
          "TestSelect": true,
          "TestNumber": 1,
          "TestFlowScript": null,
          "TestMachine": "WSL2 - This machine",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\InfluenzaA Flow_0117034256_6e672a5",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        },
        "2": {
          "TestSelect": true,
          "TestNumber": 2,
          "TestFlowScript": null,
          "TestMachine": "Linux - Monod",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\InfluenzaA Flow_0117035909_6e672a5",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        }
      },
      "SubmissionTimeStamp": "0114090856",
      "LockUsername": null,
      "Comment": "",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "PDS2100454-1": "1[S]/mnt/e/data/std_testing/influenza/input/PDS2100454-1/",
        "PDS2100454-2": "1[S]/mnt/e/data/std_testing/influenza/input/PDS2100454-2/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "SSuis",
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "[S]/mnt/e/data/database/SSuis",
      "SequenceDBPath": "[S]E:\\data\\database\\\\SSuis\\SSuis.fasta",
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": {},
      "IsLinux": false,
      "CanRunInLinux": true,
      "DockerBaseImage": "jimmyliu1326/influenza_nanopore",
      "Parameters": "InfluenzaA@[Disable Trimming=--notrim]\r\nInfluenzaA@[mode=dynamic]\r\nInfluenzaA@[model=r103_fast_g507]\r\nInfluenzaA@[segments=4]\r\nInfluenzaA@[threads=32]\r\nInfluenzaA@[OmitStep=False]\r\nInfluenzaA@[PublishOutput=True]\r\nInfluenzaA@[IgnoreError=False]\r\nInfluenzaA@[IncludeOutput=True]\r\nInfluenzaA@[IsDocker=True]\r\nInfluenzaA@[IsSlurm=True]\r\nCompress@[IsSlurm=True]\r\nCompress@[OmitStep=False]\r\nCompress@[PublishOutput=False]\r\nCompress@[IgnoreError=False]\r\nCompress@[IncludeOutput=False]\r\nCompress@[IsDocker=False]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\InfluenzaAResults\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "InfluenzaA",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C1",
              "FlowScriptToken": null,
              "Command": "influenza_consensus.sh  -t @[\u003CSLURM_CPUs\u003E=] @[Disable Trimming=--notrim]  -s @[segments=4] -m @[model=r103_fast_g507] -i $[O.]SampleList.csv -o $[O.] --mode @[mode=dynamic]",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": true,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": "D1C1",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-07-24T06:48:17.9468565-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "InfluenzaA",
                "ParmName": "Disable Trimming",
                "DefaultValue": "--notrim",
                "UserValue": "--notrim",
                "Description": "Disable adapter and barcode trimming by Porechop",
                "ComboValues": "--notrim",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "InfluenzaA",
                "ParmName": "mode",
                "DefaultValue": "dynamic",
                "UserValue": "dynamic",
                "Description": "Mode for full-length reads identification.",
                "ComboValues": "dynamic|static",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "InfluenzaA",
                "ParmName": "model",
                "DefaultValue": "r103_fast_g507",
                "UserValue": "r103_fast_g507",
                "Description": "Nanopore basecalling model used for the input sequencing data",
                "ComboValues": "r103_fast_g507|r103_fast_snp_g507|r103_fast_variant_g507|r103_hac_g507|r103_hac_snp_g507|r103_hac_variant_g507|r103_min_high_g345|r103_min_high_g360|r103_prom_high_g360|r103_prom_snp_g3210|r103_prom_variant_g3210|r103_sup_g507|r103_sup_snp_g507|r103_sup_variant_g507|r1041_e82_260bps_fast_g632|r1041_e82_260bps_fast_variant_g632|r1041_e82_260bps_hac_g632|r1041_e82_260bps_hac_v4.0.0|r1041_e82_260bps_hac_v4.1.0|r1041_e82_260bps_hac_variant_g632|r1041_e82_260bps_hac_variant_v4.1.0|r1041_e82_260bps_sup_g632|r1041_e82_260bps_sup_v4.0.0|r1041_e82_260bps_sup_v4.1.0|r1041_e82_260bps_sup_variant_g632|r1041_e82_260bps_sup_variant_v4.1.0|r1041_e82_400bps_fast_g615|r1041_e82_400bps_fast_g632|r1041_e82_400bps_fast_variant_g615|r1041_e82_400bps_fast_variant_g632|r1041_e82_400bps_hac_g615|r1041_e82_400bps_hac_g632|r1041_e82_400bps_hac_v4.0.0|r1041_e82_400bps_hac_v4.1.0|r1041_e82_400bps_hac_v4.2.0|r1041_e82_400bps_hac_v4.3.0|r1041_e82_400bps_hac_variant_g615|r1041_e82_400bps_hac_variant_g632|r1041_e82_400bps_hac_variant_v4.1.0|r1041_e82_400bps_hac_variant_v4.2.0|r1041_e82_400bps_hac_variant_v4.3.0|r1041_e82_400bps_sup_g615|r1041_e82_400bps_sup_v4.0.0|r1041_e82_400bps_sup_v4.1.0|r1041_e82_400bps_sup_v4.2.0|r1041_e82_400bps_sup_v4.3.0|r1041_e82_400bps_sup_variant_g615|r1041_e82_400bps_sup_variant_v4.1.0|r1041_e82_400bps_sup_variant_v4.2.0|r1041_e82_400bps_sup_variant_v4.3.0|r104_e81_fast_g5015|r104_e81_fast_variant_g5015|r104_e81_hac_g5015|r104_e81_hac_variant_g5015|r104_e81_sup_g5015|r104_e81_sup_g610|r104_e81_sup_variant_g610|r10_min_high_g303|r10_min_high_g340|r941_e81_fast_g514|r941_e81_fast_variant_g514|r941_e81_hac_g514|r941_e81_hac_variant_g514|r941_e81_sup_g514|r941_e81_sup_variant_g514|r941_min_fast_g303|r941_min_fast_g507|r941_min_fast_snp_g507|r941_min_fast_variant_g507|r941_min_hac_g507|r941_min_hac_snp_g507|r941_min_hac_variant_g507|r941_min_high_g303|r941_min_high_g330|r941_min_high_g340_rle|r941_min_high_g344|r941_min_high_g351|r941_min_high_g360|r941_min_sup_g507|r941_min_sup_snp_g507|r941_min_sup_variant_g507|r941_prom_fast_g303|r941_prom_fast_g507|r941_prom_fast_snp_g507|r941_prom_fast_variant_g507|r941_prom_hac_g507|r941_prom_hac_snp_g507|r941_prom_hac_variant_g507|r941_prom_high_g303|r941_prom_high_g330|r941_prom_high_g344|r941_prom_high_g360|r941_prom_high_g4011|r941_prom_snp_g303|r941_prom_snp_g322|r941_prom_snp_g360|r941_prom_sup_g507|r941_prom_sup_snp_g507|r941_prom_sup_variant_g507|r941_prom_variant_g303|r941_prom_variant_g322|r941_prom_variant_g360|r941_sup_plant_g610|r941_sup_plant_variant_g610",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "InfluenzaA",
                "ParmName": "segments",
                "DefaultValue": "4",
                "UserValue": "4",
                "Description": "Segments to assemble (1 to 8). Target specific Influenza A genomic segments for consensus calling with each segment number delimited by a comma (Example: 1,2,5,6)",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "InfluenzaA",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "InfluenzaA",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "InfluenzaA",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "InfluenzaA",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "InfluenzaA",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "InfluenzaA",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "InfluenzaA",
                "ParmName": "\u003CSLURM_CPUs\u003E",
                "DefaultValue": "16",
                "UserValue": "16",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": false
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": "jimmyliu1326/influenza_nanopore",
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 3,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 32,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "Compress",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C2",
              "FlowScriptToken": null,
              "Command": "count=\u0060ls -1 $[D.[SamplePath]]*.fastq 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq \u003E $[O.]$[V.[SampleName]].fastq\r\ngzip -f $[O.]$[V.[SampleName]].fastq 2\u003E\u00261 \u003E /dev/null;\r\nfi \r\ncount=\u0060ls -1 $[D.[SamplePath]]*.fastq.gz 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq.gz \u003E $[O.]$[V.[SampleName]].fastq.gz\r\nfi",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": false,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": false,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-06T06:45:00.6544378-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Compress",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "IsSlurm",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          }
        ]
      },
      "LastUpdate": "2024-02-02T14:32:53.0736927-06:00",
      "LastAuthor": "SQA032",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "In-silico PCR",
      "TestConfig": {
        "1": {
          "TestSelect": true,
          "TestNumber": 1,
          "TestFlowScript": null,
          "TestMachine": "Linux - Monod",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\In-silico PCR_0117010521_54a2903",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        },
        "2": {
          "TestSelect": true,
          "TestNumber": 2,
          "TestFlowScript": null,
          "TestMachine": "WSL2 - This machine",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\In-silico PCR_0117010713_54a2903",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        }
      },
      "SubmissionTimeStamp": "0201015808",
      "LockUsername": null,
      "Comment": "",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "sample_1": "1[S]/mnt/e/data/std_testing/isPCR/input/sample_1/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "hpsuis",
      "ParameterFilesToUpload": {
        "[S]/mnt/e/data/std_testing/isPCR/primers.txt": null
      },
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "/c/data/database/hpsuis",
      "SequenceDBPath": "/c/data/database/hpsuis/hpsuis.fasta",
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": {},
      "IsLinux": true,
      "CanRunInLinux": true,
      "DockerBaseImage": "bioseqenv.0.3",
      "Parameters": "tnBLAST@[\u003CIsSLURM\u003E=0]\r\ntnBLAST@[Primer=[S]/mnt/e/data/std_testing/isPCR/primers.txt]\r\ntnBLAST@[sequence_format=fasta]\r\ntnBLAST@[Multiplex=]\r\ntnBLAST@[Min_Primer_Tm=40]\r\ntnBLAST@[Min_Probe_Tm=40]\r\ntnBLAST@[max_amplicon_length=5000]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\In-Silico_Results\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "tnBLAST",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C1",
              "FlowScriptToken": null,
              "Command": "# check for slurm support\r\n# script variables\r\nargs=\u0022\u0022\r\n# check if slurm is available in env\r\nif [[ @[\u003CIsSLURM\u003E=] -eq 1 ]]; then \r\nargs=\u0022-profile slurm,standard --account pds_monod\u0022\r\nfi\r\n\r\necho \u0022IsSLURM=@[\u003CIsSLURM\u003E=]\u0022\r\nnextflow run jimmyliu1326/isPCR \\\r\n   -latest \\\r\n   --input $[O.]SampleList.csv \\\r\n   --outdir $[O.] \\\r\n   --primer @[Primer=] \\\r\n   --input_format @[sequence_format=fasta] \\\r\n   @[Multiplex=--multiplex] \\\r\n   --primer_min_tm @[Min_Primer_Tm=40] \\\r\n   --probe_min_tm @[Min_Probe_Tm=40] \\\r\n   --max_length @[max_amplicon_length=1000] \\\r\n   -with-tower \\\r\n   $args",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": "D1C1",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-11-20T16:07:21.3027096-06:00",
            "LastAuthor": "SQA032",
            "ScriptParmsList": [
              {
                "ModuleName": "tnBLAST",
                "ParmName": "Primer",
                "DefaultValue": "",
                "UserValue": "[S]/mnt/e/data/std_testing/isPCR/primers.txt",
                "Description": "Path to primer sequences.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "sequence_format",
                "DefaultValue": "fasta",
                "UserValue": "fasta",
                "Description": "File format of input sequences to search against",
                "ComboValues": "fasta|fastq",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "max_amplicon_length",
                "DefaultValue": "1000",
                "UserValue": "5000",
                "Description": "Maximum target amplicon length.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "Min_Primer_Tm",
                "DefaultValue": "40",
                "UserValue": "40",
                "Description": "Minimum primer hyridization melting temperature required (in Celsius)",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "Min_Probe_Tm",
                "DefaultValue": "40",
                "UserValue": "40",
                "Description": "Minimum probe hyridization melting temperature required (in Celsius)",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "Multiplex",
                "DefaultValue": "--multiplex",
                "UserValue": "",
                "Description": "Run all primer/probe pairs in a single assay.",
                "ComboValues": "--multiplex",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "NULL",
                "Public": false
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "\u003CIsSLURM\u003E",
                "DefaultValue": "0",
                "UserValue": "0",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "\u003CSLURM_CPUs\u003E",
                "DefaultValue": "16",
                "UserValue": "16",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "\u003CSLURM_GBs\u003E",
                "DefaultValue": "64",
                "UserValue": "64",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST",
                "ParmName": "\u003CSLURM_Minutes\u003E",
                "DefaultValue": "120",
                "UserValue": "120",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 3,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "tnBLAST_Publish",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D1C2",
              "FlowScriptToken": null,
              "Command": "cp -r $[I{tnBLAST}.]pipeline_info  $[O.]\r\ncp -r $[I{tnBLAST}.]results $[O.]\r\ncp $[I{tnBLAST}.]analysis_results.tsv $[O.] || printf \u0022\\nAnalysis results file is missing - likely because no hits were detected. Check the run log file!\u0022",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data",
                "tnBLAST"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": "D1C2",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2023-04-22T08:24:31.8157341-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "tnBLAST_Publish",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST_Publish",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST_Publish",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST_Publish",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST_Publish",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST_Publish",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST_Publish",
                "ParmName": "\u003CIsSLURM\u003E",
                "DefaultValue": "1",
                "UserValue": "1",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST_Publish",
                "ParmName": "\u003CSLURM_CPUs\u003E",
                "DefaultValue": "2",
                "UserValue": "2",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST_Publish",
                "ParmName": "\u003CSLURM_GBs\u003E",
                "DefaultValue": "4",
                "UserValue": "4",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tnBLAST_Publish",
                "ParmName": "\u003CSLURM_Minutes\u003E",
                "DefaultValue": "18",
                "UserValue": "18",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 1,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          }
        ]
      },
      "LastUpdate": "2024-02-03T06:15:14.358635-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [
        {
          "CommandToken": "D1C1",
          "FlowScriptToken": "tnBLAST",
          "Command": "touch /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/In-silico_PCR_0423062438/D1C1/SampleList.csv \u0026\u0026 rm /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/In-silico_PCR_0423062438/D1C1/SampleList.csv\ntouch /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/In-silico_PCR_0423062438/D1C1/SequenceList.csv \u0026\u0026 rm /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/In-silico_PCR_0423062438/D1C1/SequenceList.csv\necho barcode07,/mnt/r/incoming/OPAL/20220711_120_21-22/12July2022_BRDvirus_L5/20220712_2147_2-E1-H1_PAI88784_03c82d1e/fastq_pass/barcode07/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/In-silico_PCR_0423062438/D1C1/SampleList.csv\necho barcode08,/mnt/r/incoming/OPAL/20220711_120_21-22/12July2022_BRDvirus_L5/20220712_2147_2-E1-H1_PAI88784_03c82d1e/fastq_pass/barcode08/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/In-silico_PCR_0423062438/D1C1/SampleList.csv\nwhoami\npwd\n#cd /home/pds_monod\n#export JAVA_CMD=/home/pds_monod/.sdkman/candidates/java/current/bin/java\n#export TOWER_ACCESS_TOKEN=eyJ0aWQiOiA1MTQzfS40OTA3Yzg2Y2ZiNGUwNjA4YjFmYWRhZWJjZmUwZGE4ZDE0NzYxNjhh\n# \u0027source .bashrc\u0027 does not actually run .bashrc, the exports need to be done explicitly.\nwhereis java\necho \u0022JAVA_CMD=$JAVA_CMD\u0022\nwhich java\nnextflow run jimmyliu1326/isPCR \\\n   --input /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/In-silico_PCR_0423062438/D1C1/SampleList.csv \\\n   --outdir /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/In-silico_PCR_0423062438/D1C1/ \\\n   --primer /mnt/x/PDS-BioSeqDB/isPCR/Primers//20230413_viral_primers.txt \\\n   --input_format fastq \\\n    \\\n   --primer_min_tm 40 \\\n   --probe_min_tm 40 \\\n   --max_length 1100 \\\n   -with-tower\n",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        }
      ],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "tCANSFlow",
      "TestConfig": {
        "1": {
          "TestSelect": true,
          "TestNumber": 1,
          "TestFlowScript": null,
          "TestMachine": "WSL2 - This machine",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\tCANSFlow_0114085736_63595bc",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        },
        "2": {
          "TestSelect": true,
          "TestNumber": 2,
          "TestFlowScript": null,
          "TestMachine": "Linux - Monod",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\tCANSFlow_0114090108_63595bc",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        }
      },
      "SubmissionTimeStamp": "0117073243",
      "LockUsername": null,
      "Comment": "",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "PDS2236071-1": "1[S]/mnt/e/data/std_testing/tCANS/input/PDS2236071-1/",
        "PDS2236071-2": "1[S]/mnt/e/data/std_testing/tCANS/input/PDS2236071-2/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "SSuis",
      "ParameterFilesToUpload": {
        "[S]/mnt/e/data/std_testing/tCANS/BCV_NA.scheme.bed": null,
        "[S]/mnt/e/data/std_testing/tCANS/BCV_NA.reference.fasta": null
      },
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "[S]/mnt/e/data/database/SSuis",
      "SequenceDBPath": "[S]E:\\data\\database\\\\SSuis\\SSuis.fasta",
      "SamplesFromLocalDevice": null,
      "SamplesToTransform": null,
      "IsLinux": true,
      "CanRunInLinux": true,
      "DockerBaseImage": "",
      "Parameters": "tCANS@[\u003CisSLURM\u003E=0]\r\ntCANS@[\u003CIsSlurm\u003E=0]\r\ntCANS@[resume=]\r\ntCANS@[host=]\r\ntCANS@[reference=[S]/mnt/e/data/std_testing/tCANS/BCV_NA.reference.fasta]\r\ntCANS@[primers=[S]/mnt/e/data/std_testing/tCANS/BCV_NA.scheme.bed]\r\ntCANS@[gpu=]\r\ntCANS@[Min_readLength=200]\r\ntCANS@[Max_readLength=0]\r\ntCANS@[Disable Trimming=--notrim]\r\ntCANS@[Min_depth=10]\r\ntCANS@[Max_depth=1000]\r\ntCANS@[Min_readQual=7]\r\ntCANS@[Max_N=0.75]\r\ntCANS@[run_Msa=--run_msa]\r\ntCANS@[run_blast=--run_blast]\r\ntCANS@[blast_evalue=0.01]\r\ntCANS@[OmitStep=False]\r\ntCANS@[PublishOutput=True]\r\ntCANS@[IgnoreError=False]\r\ntCANS@[IncludeOutput=True]\r\ntCANS@[IsDocker=False]\r\ntCANS@[IsSlurm=True]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\TCANS_Results\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "tCANS",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C1",
              "FlowScriptToken": null,
              "Command": "# check for slurm support\r\n# script variables\r\nargs=\u0022\u0022\r\n# check if slurm is available in env\r\nif [[ @[\u003CIsSlurm\u003E=] -eq 1 ]]; then \r\nargs=\u0022-profile slurm,standard --account pds_monod\u0022\r\nfi\r\necho \u0022isSLURM=@[\u003CisSLURM\u003E=]\u0022\r\n# global vars\r\nhost=@[host=]\r\nif test -z $host; then\r\nhost_args=\u0027\u0027\r\nelse\r\nhost_args=\u0027--host $host\u0027\r\nfi\r\nnextflow run jimmyliu1326/tCANS -r main -latest --input $[O.]SampleList.csv --out_dir $[O.] \\\r\n--primers @[primers=] \\\r\n--reference @[reference=] \\\r\n$host \\\r\n@[gpu=--gpu] \\\r\n@[Disable Trimming=--notrim] \\\r\n--min_rl @[Min_readLength=200] \\\r\n--max_rl @[Max_readLength=0] \\\r\n--min_rq @[Min_readQual=7] \\\r\n--min_depth @[Min_depth=10] \\\r\n--max_depth @[Max_depth=1000] \\\r\n--max_N @[Max_N=0.75] \\\r\n@[run_Msa=--run_msa] \\\r\n@[run_blast=--run_blast] \\\r\n--blast_evalue @[blast_evalue=0.01] \\\r\n--medaka_batchsize 75 \\\r\n@[resume=-resume] \\\r\n-with-tower \\\r\n$args",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": true,
            "ConsolidatedCmdToken": "D1C1",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-03-31T09:59:29.4061846-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "tCANS",
                "ParmName": "\u003CisSLURM\u003E",
                "DefaultValue": "0",
                "UserValue": "0",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "\u003CIsSlurm\u003E",
                "DefaultValue": "0",
                "UserValue": "0",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "resume",
                "DefaultValue": "-resume",
                "UserValue": "",
                "Description": "Resume pipeline run using cached results.",
                "ComboValues": "-resume",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "host",
                "DefaultValue": "",
                "UserValue": "",
                "Description": "Optional path to host genome reference database.",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": null,
                "Extensions": "fasta|gz|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "reference",
                "DefaultValue": "",
                "UserValue": "[S]/mnt/e/data/std_testing/tCANS/BCV_NA.reference.fasta",
                "Description": "Path to primer scheme fasta format reference file.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": null,
                "Extensions": "fasta|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "primers",
                "DefaultValue": "",
                "UserValue": "[S]/mnt/e/data/std_testing/tCANS/BCV_NA.scheme.bed",
                "Description": "Path to primer file (bed format).",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 5,
                "Validator": null,
                "Extensions": "bed|",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "gpu",
                "DefaultValue": "--gpu",
                "UserValue": "",
                "Description": "Turn on the gpu option with \u0027--gpu\u0027 or leave blank for no gpu use.",
                "ComboValues": "--gpu",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "Min_readLength",
                "DefaultValue": "200",
                "UserValue": "200",
                "Description": "Minimum read length",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "Max_readLength",
                "DefaultValue": "0",
                "UserValue": "0",
                "Description": "Maximum read length (value of 0 indicates no upper bound)",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "Disable Trimming",
                "DefaultValue": "--notrim",
                "UserValue": "--notrim",
                "Description": "Disable adaptor trimming by Porechop",
                "ComboValues": "--notrim",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "Min_depth",
                "DefaultValue": "10",
                "UserValue": "10",
                "Description": "Minimum depth required to call consensus base",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "Max_depth",
                "DefaultValue": "1000",
                "UserValue": "1000",
                "Description": "Subsample to a defined depth prior to consensus calling",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "Min_readQual",
                "DefaultValue": "7",
                "UserValue": "7",
                "Description": "Minimum read quality score",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "Max_N",
                "DefaultValue": "0.75",
                "UserValue": "0.75",
                "Description": "Maximum percentage of N bases allowed in consensus, ranging from 0 to 1",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 3,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "run_Msa",
                "DefaultValue": "--run_msa",
                "UserValue": "--run_msa",
                "Description": "Compare consensus sequences by multiple sequence alignment",
                "ComboValues": "--run_msa",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "run_blast",
                "DefaultValue": "--run_blast",
                "UserValue": "--run_blast",
                "Description": "Invoke NCBI BLASTN query after consensus calling",
                "ComboValues": "--run_blast",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "blast_evalue",
                "DefaultValue": "0.01",
                "UserValue": "0.01",
                "Description": "BLAST hit e-value",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 3,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "tCANS",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          }
        ]
      },
      "LastUpdate": "2024-02-03T06:17:25.9628376-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [
        {
          "CommandToken": "D1C1",
          "FlowScriptToken": null,
          "Command": "echo \u0022L2480\u0022\u0022,\u0022\u0022/mnt/e/data/Dreamer/BCV_WGS/BCV_ARTIC_7feb22_DP/BCV_ARTIC_7feb22_DP/20220207_1632_X4_FAR84250_985aef52/fastq_pass/L2480/\u0022 \u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/tCANSFlow/D1C1/sample.csv",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        },
        {
          "CommandToken": "D1C2",
          "FlowScriptToken": null,
          "Command": "nextflow run jimmyliu1326/tCANS --input /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/tCANSFlow/D1C1/sample.csv --outdir /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/tCANSFlow/D1C2/ --primers /mnt/e/data/reference/artic/primer_schemes/BCV_NA/V1/BCV_NA.primer.bed --reference /mnt/e/data/reference/artic/primer_schemes/BCV_NA/V1/BCV_NA.reference.fasta -profile conda",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [
            "D1C1"
          ],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        }
      ],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    },
    {
      "FlowScriptName": "DragonFlye Assembly",
      "TestConfig": {
        "1": {
          "TestSelect": true,
          "TestNumber": 1,
          "TestFlowScript": null,
          "TestMachine": "WSL2 - This machine",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\DragonFlye Assembly_1230101908_754e017",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        },
        "2": {
          "TestSelect": true,
          "TestNumber": 2,
          "TestFlowScript": null,
          "TestMachine": "Linux - Monod",
          "TestOutputPath": "E:\\data\\FlowScript_Test_Output_Results\\DragonFlye Assembly_0101070249_754e017",
          "TestSuccess": false,
          "TestSuccessLabel": null,
          "TestIsRunning": false
        }
      },
      "SubmissionTimeStamp": "0127061122",
      "LockUsername": null,
      "Comment": "",
      "DataSourceType": 1,
      "SerializeDataSteps": false,
      "SampleList": {
        "barcode1_2037151-1": "1[S]/mnt/e/data/std_testing/Dragonflye/input/barcode1_2037151-1/",
        "barcode2_2037151-2": "1[S]/mnt/e/data/std_testing/Dragonflye/input/barcode2_2037151-2/",
        "fastq_pass": "0[S]/mnt/x/PDS-BioSeqDB/NAS/NAS04_AT1P17/bos_taurus_depletion/20220624_1506_MN26243_FAT25659_defad8c3/fastq_pass/"
      },
      "SequenceList": [],
      "SequenceListChecked": [],
      "SequenceDatabaseName": "hpsuis",
      "ParameterFilesToUpload": {},
      "ParameterFoldersToUpload": {},
      "SequenceDBPathLinux": "/c/data/database/hpsuis",
      "SequenceDBPath": "/c/data/database/hpsuis/hpsuis.fasta",
      "SamplesFromLocalDevice": {},
      "SamplesToTransform": null,
      "IsLinux": true,
      "CanRunInLinux": true,
      "DockerBaseImage": "bioseqenv.0.3",
      "Parameters": "Busco@[lineage=bacteria_odb10]\r\nKraken2@[db=/mnt/e/data/reference/databases/minikraken2_v1_8GB/]\r\nKraken2@[threads=20]\r\nDragonFlye@[\u003CSLURM_CPUs\u003E=]\r\nDragonFlye@[\u003CSLURM_GBs\u003E=]\r\nDragonFlye@[assembler=flye]\r\nDragonFlye@[nopolish=--nopolish]\r\nDragonFlye@[nano-hq=--nanohq]\r\nDragonFlye@[medaka=--medaka @[medakaRounds=1] @[medakaModelParm=--model @[medakaModel=r941_min_hac_g507]]]\r\nDragonFlye@[medakaRounds=1]\r\nDragonFlye@[medakaModelParm=--model @[medakaModel=r941_min_hac_g507]]\r\nDragonFlye@[medakaModel=r941_e81_hac_g514]\r\nDragonFlye@[racon=--racon @[raconRounds=1]]\r\nDragonFlye@[raconRounds=1]\r\nDragonFlye@[gsizeParm=--gsize @[gsize=]]\r\nDragonFlye@[gsize=3M]\r\nDragonFlye@[trim=]\r\nAbricate@[db=ncbi]\r\n",
      "OutputPath": "[S]E:\\data\\Arnie\\DragonFlyeResults\\",
      "StartWithScript": "Data",
      "ScriptModulesInFlowScript": {
        "GlobalScriptModules": [
          {
            "ModuleName": "SeqTK",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C6",
              "FlowScriptToken": null,
              "Command": "count=\u0060ls -1 $[I.]$[V.[SampleName]]*.fastq 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\nconda run -n seqtk seqtk seq -A $[I.]$[V.[SampleName]]*.fastq \u003E $[O.]sample.fasta\r\nfi \r\ncount=\u0060ls -1 $[I.]$[V.[SampleName]]*.fastq.gz 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\nconda run -n seqtk seqtk seq -A $[I.]$[V.[SampleName]]*.fastq.gz \u003E $[O.]sample.fasta\r\nfi",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Compress"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-06T07:28:04.3954504-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "SeqTK",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SeqTK",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SeqTK",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SeqTK",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SeqTK",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SeqTK",
                "ParmName": "IgnoreExitCode",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IgnoreExitCode",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SeqTK",
                "ParmName": "IncludeStandardOutput",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IncludeStandardOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "SeqTK",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "BBMap",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C7",
              "FlowScriptToken": null,
              "Command": "mkdir $[O.]$[V.[SampleName]]\r\nconda run -n seqdb bbmap.sh nodisk=f threads=6 ref=$[I.]sample.fasta in=$[I.]sample.fasta  covstats=$[O.]$[V.[SampleName]]/covstats.txt covhist=$[O.]$[V.[SampleName]]/covhist.txt bincov=$[O.]$[V.[SampleName]]/bincov.txt ",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": true,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "SeqTK"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-06-26T05:20:01.3379975-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "BBMap",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BBMap",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BBMap",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BBMap",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BBMap",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BBMap",
                "ParmName": "IgnoreExitCode",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IgnoreExitCode",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BBMap",
                "ParmName": "IncludeStandardOutput",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IncludeStandardOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "BBMap",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "Rename_Contigs",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C11",
              "FlowScriptToken": null,
              "Command": "mkdir $[O{DragonFlye}.]$[V.[SampleName]]\r\ncp $[I{DragonFlye}.]contigs.fa $[O{DragonFlye}.]$[V.[SampleName]]/$[V.[SampleName]]_contigs.fasta\r\ncp $[I{DragonFlye}.]flye.fasta $[O{DragonFlye}.]$[V.[SampleName]]/$[V.[SampleName]]_flye.fa\r\ncp $[I{DragonFlye}.]flye-info.txt $[O{DragonFlye}.]$[V.[SampleName]]/$[V.[SampleName]]_flye-info.txt\r\ncp $[I{DragonFlye}.]dragonflye.log $[O{DragonFlye}.]$[V.[SampleName]]/$[V.[SampleName]]_dragonflye.log\r\ncp $[I{Abricate}.]$[V.[SampleName]]_Abricate_Output.tsv $[O{DragonFlye}.]$[V.[SampleName]]/$[V.[SampleName]]_Abricate_Output.tsv\r\n# Create a temporary file for writing the modified content\r\ntempfile=$[O.]tmp_$[V.[SampleName]]\r\ntouch \u0022$tempfile\u0022\r\n# This script changes the text of a file for each line that starts with \u0027\u003E\u0027\r\n# Replace the word that follows the \u0027\u003E\u0027 with \u0027SAMPLE\u0027, followed by space and then everything that was originally on the line after the \u0027\u003E\u0027\r\nfilename=$[O{DragonFlye}.]$[V.[SampleName]]/$[V.[SampleName]]_contigs.fasta\r\n# Loop through each line of the file\r\nwhile read -r line; do\r\n  # Check if the line starts with \u0027\u003E\u0027\r\n  if [[ $line == \u0027\u003E\u0027* ]]; then\r\n    # Extract the word that follows the \u0027\u003E\u0027\r\n    word=$(echo $line | cut -d\u0027 \u0027 -f1 | cut -c2-)\r\n    # Replace the word with SAMPLENAME\r\n    line=${line/$word/$[V.[SampleName]] $word}\r\n    echo $line\r\n  fi\r\n  # Print the modified line\r\n  echo \u0022$line\u0022 \u003E\u003E \u0022$tempfile\u0022\r\ndone \u003C $filename\r\n# Replace the original file with the modified content\r\nmv \u0022$tempfile\u0022 $filename\r\ntouch \u0022$tempfile\u0022\r\n# Do the same with the second file.\r\nfilename=$[O{DragonFlye}.]$[V.[SampleName]]/$[V.[SampleName]]_flye.fa\r\n# Loop through each line of the file\r\nwhile read -r line; do\r\n  # Check if the line starts with \u0027\u003E\u0027\r\n  if [[ $line == \u0027\u003E\u0027* ]]; then\r\n    # Extract the word that follows the \u0027\u003E\u0027\r\n    word=$(echo $line | cut -d\u0027 \u0027 -f1 | cut -c2-)\r\n    # Replace the word with SAMPLENAME\r\n    line=${line/$word/$[V.[SampleName]] $word}\r\n    echo $line\r\n  fi\r\n  # Print the modified line\r\n  echo \u0022$line\u0022 \u003E\u003E \u0022$tempfile\u0022\r\ndone \u003C $filename\r\n# Replace the original file with the modified content\r\nmv \u0022$tempfile\u0022 $filename\r\n# Copy fasta files but add \u0027 sample_id=\u0027\u003CsampleID\u003E\u0027 to headers\r\ncp $[I{DragonFlye}.]contigs.fa $[O{DragonFlye}.]$[V.[SampleName]]/contigs.fasta\r\ntouch \u0022$tempfile\u0022\r\nawk \u0027/^\u003E/ {print $0\u0022 sample_id=$[V.[SampleName]]\u0022} !/^\u003E/ {print $0}\u0027 $[O{DragonFlye}.]$[V.[SampleName]]/contigs.fasta \u003E \u0022$tempfile\u0022\r\nmv \u0022$tempfile\u0022 $[O{DragonFlye}.]$[V.[SampleName]]/contigs.fasta\r\ncp $[I{DragonFlye}.]flye.fasta $[O{DragonFlye}.]$[V.[SampleName]]/flye.fa\r\ntouch \u0022$tempfile\u0022\r\nawk \u0027/^\u003E/ {print $0\u0022 sample_id=$[V.[SampleName]]\u0022} !/^\u003E/ {print $0}\u0027 $[O{DragonFlye}.]$[V.[SampleName]]/flye.fa \u003E \u0022$tempfile\u0022\r\nmv \u0022$tempfile\u0022 $[O{DragonFlye}.]$[V.[SampleName]]/flye.fa",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Abricate",
                "Busco",
                "DragonFlye",
                "Kraken2",
                "Quast"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-06T06:32:38.7403952-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Rename_Contigs",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Rename_Contigs",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Rename_Contigs",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Rename_Contigs",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Rename_Contigs",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Rename_Contigs",
                "ParmName": "IgnoreExitCode",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IgnoreExitCode",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Rename_Contigs",
                "ParmName": "IncludeStandardOutput",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IncludeStandardOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Rename_Contigs",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "Compress",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C1",
              "FlowScriptToken": null,
              "Command": "count=\u0060ls -1 $[D.[SamplePath]]*.fastq 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq \u003E $[O.]$[V.[SampleName]].fastq\r\ngzip -f $[O.]$[V.[SampleName]].fastq 2\u003E\u00261 \u003E /dev/null;\r\nfi \r\ncount=\u0060ls -1 $[D.[SamplePath]]*.fastq.gz 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq.gz \u003E $[O.]$[V.[SampleName]].fastq.gz\r\nfi",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": false,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-06T06:45:00.6544378-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Compress",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "",
                "Description": "OmitStep",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "",
                "Description": "PublishOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IgnoreExitCode",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IgnoreExitCode",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IncludeStandardOutput",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IncludeStandardOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "",
                "Description": "IsDocker",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "",
                "Description": "IgnoreError",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "",
                "Description": "IncludeOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Compress",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "nanoq",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C2",
              "FlowScriptToken": null,
              "Command": "conda run -n dragonflye nanoq --min-len 1000 -r $[O.]nanoq_report.csv -H --input $[I.]*.fastq* --min-qual 0  1\u003E $[O.]READS.filt.fq \r\nrm $[O.]READS.filt.fq\r\nsed -i -e \u0027s/ /,/g\u0027 $[O.]nanoq_report.csv\r\n#FS IsDocker\r\n# Add write mode because if run in Docker, we need to be able to delete this file from WSL2.\r\nchmod a\u002Bw $[O.]nanoq_report.csv\r\n#FS End",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Compress"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-07-08T10:26:56.6894226-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "nanoq",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "nanoq",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "nanoq",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "nanoq",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "nanoq",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "nanoq",
                "ParmName": "IgnoreExitCode",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IgnoreExitCode",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "nanoq",
                "ParmName": "IncludeStandardOutput",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IncludeStandardOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "nanoq",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "Busco",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C8",
              "FlowScriptToken": null,
              "Command": "conda run -n busco busco -m genome -f -i $[I.]contigs.fa --out_path $[O.] -o $[V.[SampleName]] -l @[lineage=bacteria_odb10]\r\nrm -rf $[O.]$[V.[SampleName]]/logs\r\nrm -rf $[O.]$[V.[SampleName]]/prodigal_output\r\nrm -rf $[O.]$[V.[SampleName]]/run_@[lineage=bacteria_odb10]\r\nrm -rf $[o.]/busco_downloads",
              "IsNoop": false,
              "CondaPrefix": "busco",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "DragonFlye"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-29T06:08:19.4067173-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Busco",
                "ParmName": "lineage",
                "DefaultValue": "bacteria_odb10",
                "UserValue": "bacteria_odb10",
                "Description": "Select a Busco lineage database from the dropdown.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 8,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Busco",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Busco",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Busco",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Busco",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Busco",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Busco",
                "ParmName": "IgnoreExitCode",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IgnoreExitCode",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Busco",
                "ParmName": "IncludeStandardOutput",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IncludeStandardOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Busco",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "Quast",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C9",
              "FlowScriptToken": null,
              "Command": "cmd=\u0027/usr/local/quast-5.0.2/quast.py -o $[O.]$[V.[SampleName]]/Quast/ --glimmer $[I.]contigs.fa\u0027\r\n#FS IsDocker\r\ncmd=\u0027conda run -n quast quast.py -o $[O.]$[V.[SampleName]]/Quast/ --glimmer $[I.]contigs.fa\u0027\r\n#FS End\r\neval \u0022$cmd\u0022",
              "IsNoop": false,
              "CondaPrefix": "phame",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "DragonFlye"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-02-13T17:16:37.7814819-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Quast",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Quast",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Quast",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Quast",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Quast",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Quast",
                "ParmName": "IgnoreExitCode",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IgnoreExitCode",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Quast",
                "ParmName": "IncludeStandardOutput",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IncludeStandardOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Quast",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "Refseq_Masher",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C12",
              "FlowScriptToken": null,
              "Command": "# Refseq_masher does not play well with the raven assembler. Recommend use flye.\r\nmkdir $[O.]$[V.[SampleName]]\r\n#FS IsDocker\r\n#FS End\r\nconda run -n refseq_masher refseq_masher matches --output-type csv -o $[O.]$[V.[SampleName]]/RefseqIdent.csv $[I.]$[V.[SampleName]]/",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": false,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Rename_Contigs"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-03T05:52:48.250547-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Refseq_Masher",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "",
                "Description": "OmitStep",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Refseq_Masher",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "",
                "Description": "PublishOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Refseq_Masher",
                "ParmName": "IgnoreExitCode",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IgnoreExitCode",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Refseq_Masher",
                "ParmName": "IncludeStandardOutput",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IncludeStandardOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Refseq_Masher",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IsDocker",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Refseq_Masher",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "",
                "Description": "IgnoreError",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Refseq_Masher",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "",
                "Description": "IncludeOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Refseq_Masher",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "Kraken2",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C10",
              "FlowScriptToken": null,
              "Command": "mkdir $[O.]$[V.[SampleName]]\r\ncmd=\u0027/usr/local/kraken2/kraken2 --db @[db=/mnt/e/data/reference/databases/minikraken2_v1_8GB/] --threads @[threads=20] --report $[O.]$[V.[SampleName]]/kraken.aggregates.txt --use-names --output $[O.]$[V.[SampleName]]/kraken.txt $[I.]/contigs.fa\u0027\r\n#FS IsDocker\r\n#FS DockerMap /mnt/e/data/reference/databases/\r\ncmd=\u0027conda run -n kraken2 kraken2 --db @[db=/mnt/e/data/reference/databases/minikraken2_v1_8GB/] --threads @[threads=20] --report $[O.]$[V.[SampleName]]/kraken.aggregates.txt --use-names --output $[O.]$[V.[SampleName]]/kraken.txt $[I.]/contigs.fa\u0027\r\n#FS End\r\neval \u0022$cmd\u0022",
              "IsNoop": false,
              "CondaPrefix": "phame",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "DragonFlye"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-04-05T09:39:03.0925066-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Kraken2",
                "ParmName": "threads",
                "DefaultValue": "20",
                "UserValue": "20",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "db",
                "DefaultValue": "/mnt/e/data/reference/databases/minikraken2_v1_8GB/",
                "UserValue": "/mnt/e/data/reference/databases/minikraken2_v1_8GB/",
                "Description": "",
                "ComboValues": "/mnt/e/data/reference/databases/minikraken2_v1_8GB/|/mnt/e/data/reference/databases/kraken2-microbial/",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "IgnoreExitCode",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IgnoreExitCode",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "IncludeStandardOutput",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IncludeStandardOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Kraken2",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "DragonFlye",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C3",
              "FlowScriptToken": null,
              "Command": "conda run -n dragonflye dragonflye --force  --cpus @[\u003CSLURM_CPUs\u003E=] --ram @[\u003CSLURM_GBs\u003E=]  --assembler @[assembler=flye] @[nopolish=--nopolish] @[nano-hq=--nanohq] @[medaka=--medaka @[medakaRounds=1] @[medakaModelParm=--model @[medakaModel=r941_min_hac_g507]]] @[racon=--racon @[raconRounds=1]] --reads $[I.]$[V.[SampleName]].fastq* --outdir $[O.] @[gsizeParm=--gsize @[gsize=]] @[trim=--trim]",
              "IsNoop": false,
              "CondaPrefix": "dragonflye",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": true,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "Compress",
                "Data"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": false,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": false,
            "LastUpdate": "2022-06-23T14:00:52.2250869-06:00",
            "LastAuthor": "DHP565",
            "ScriptParmsList": [
              {
                "ModuleName": "DragonFlye",
                "ParmName": "\u003CSLURM_CPUs\u003E",
                "DefaultValue": "",
                "UserValue": "",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "\u003CSLURM_GBs\u003E",
                "DefaultValue": "",
                "UserValue": "",
                "Description": null,
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": true,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "trim",
                "DefaultValue": "--trim",
                "UserValue": "",
                "Description": "",
                "ComboValues": "--trim|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "gsizeParm",
                "DefaultValue": "--gsize @[gsize=]",
                "UserValue": "--gsize @[gsize=]",
                "Description": "Leave blank for DragonFlye to estimate based on kmers; otherwise use \u0027--gsize @[gsize=n]\u0027.",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "gsize",
                "DefaultValue": "",
                "UserValue": "3M",
                "Description": "Estimated genome size in number of bases, if gsizeParm is blank.",
                "ComboValues": null,
                "Optional": true,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "raconRounds",
                "DefaultValue": "1",
                "UserValue": "1",
                "Description": "Rounds of polishing by Racon",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "racon",
                "DefaultValue": "--racon @[raconRounds=1]",
                "UserValue": "--racon @[raconRounds=1]",
                "Description": "Ignore - Number of rounds of Racon polishing will be inserted into this parameter.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "medakaModel",
                "DefaultValue": "r941_min_hac_g507",
                "UserValue": "r941_e81_hac_g514",
                "Description": "Choose Medaka model from combo dropdown.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 7,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "medakaRounds",
                "DefaultValue": "1",
                "UserValue": "1",
                "Description": "Rounds of polishing by Medaka",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 2,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "medaka",
                "DefaultValue": "--medaka @[medakaRounds=1] @[medakaModelParm=--model @[medakaModel=r941_min_hac_g507]]",
                "UserValue": "--medaka @[medakaRounds=1] @[medakaModelParm=--model @[medakaModel=r941_min_hac_g507]]",
                "Description": "",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "assembler",
                "DefaultValue": "flye",
                "UserValue": "flye",
                "Description": "Choose flye (default), raven, or miniasm",
                "ComboValues": "flye|raven|miniasm",
                "Optional": false,
                "ReadOnly": true,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "medakaModelParm",
                "DefaultValue": "--model @[medakaModel=r941_min_hac_g507]",
                "UserValue": "--model @[medakaModel=r941_min_hac_g507]",
                "Description": "Ignore - Number of rounds of Medaka polishing will be inserted into this parameter.",
                "ComboValues": null,
                "Optional": false,
                "ReadOnly": false,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 0,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "nano-hq",
                "DefaultValue": "--nanohq",
                "UserValue": "--nanohq",
                "Description": "",
                "ComboValues": "--nanohq|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "nopolish",
                "DefaultValue": "--nopolish",
                "UserValue": "--nopolish",
                "Description": "",
                "ComboValues": "--nopolish|",
                "Optional": true,
                "ReadOnly": false,
                "Hidden": true,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": "",
                "Extensions": "",
                "MissingValue": "",
                "Public": false
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [
              "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
            ],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": true,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 8,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "DragonFlye Sink",
            "LockUsername": null,
            "Comment": "2022-09-22 12:25 AGB465: The awk command has the effect of concatenting all the nanoq reports and retaining just one copy of the header.",
            "WslCommand": {
              "CommandToken": "D2C4",
              "FlowScriptToken": null,
              "Command": "echo \u0022DragonFlye Sink $[I{nanoq}.] $[O.] runs to consolidate all nanoq reports.\u0022\r\n#FS ForEachPrereq\r\ncp $[I{nanoq}.]nanoq_report.csv $[O.]$[V.[SampleName]]nanoq_report.csv\r\nrm $[I{nanoq}.]nanoq_report.csv\r\n#FS End\r\nawk \u0027FNR==1 \u0026\u0026 NR!=1{next;}{print}\u0027 $[O.]*.csv \u003E $[O.]master_nanoq_report.csv\r\n#FS ForEachPrereq\r\nrm $[O.]$[V.[SampleName]]nanoq_report.csv\r\n#FS End",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "nanoq"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": true,
            "RunAfterALLCmdToken": "D1C4",
            "OmitStep": false,
            "LastUpdate": "2022-07-18T07:37:27.5485521-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "DragonFlye Sink",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye Sink",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye Sink",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye Sink",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye Sink",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye Sink",
                "ParmName": "IgnoreExitCode",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IgnoreExitCode",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye Sink",
                "ParmName": "IncludeStandardOutput",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IncludeStandardOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "DragonFlye Sink",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "true",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": null,
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          },
          {
            "ModuleName": "Abricate",
            "LockUsername": null,
            "Comment": "",
            "WslCommand": {
              "CommandToken": "D2C5",
              "FlowScriptToken": null,
              "Command": "conda run -n abricate abricate --db @[db=ncbi] $[I.]contigs.fa \u003E $[O.]$[V.[SampleName]]_Abricate_Output.tsv",
              "IsNoop": false,
              "CondaPrefix": "",
              "Parms": [],
              "IncludeStandardOutput": true,
              "IsParallel": false,
              "IsSlurm": true,
              "IsDocker": false,
              "IsLinux": true,
              "LinuxJobRunning": false,
              "SlurmJobID": null,
              "SlurmParms": null,
              "WindowsWorkPath": null,
              "IgnoreExitCode": false,
              "WSLResponse": null,
              "ConditionRun": null,
              "ExitCodeConditionGoto": "",
              "Preprocess": null,
              "StandardOutputConditionGoto": "",
              "HDF_Command": null,
              "Prereqs": [
                "DragonFlye"
              ],
              "Thread": 0,
              "StandardOutputBypass": "",
              "WDL": null
            },
            "PublishOutput": true,
            "ConsolidateInput": false,
            "ConsolidatedCmdToken": "",
            "ExpectSamplesHeader": false,
            "RunAfterALLPrereqs": false,
            "RunAfterALLCmdToken": "",
            "OmitStep": true,
            "LastUpdate": "2023-06-27T10:09:20.4439538-06:00",
            "LastAuthor": "AGB465",
            "ScriptParmsList": [
              {
                "ModuleName": "Abricate",
                "ParmName": "db",
                "DefaultValue": "ncbi",
                "UserValue": "ncbi",
                "Description": "Provide a database against which to search for genes.",
                "ComboValues": "ncbi|argannot|card|ecoh|ecoli_vf|megares|plasmidfinder|resfinder|vfdb",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 4,
                "Validator": null,
                "Extensions": "",
                "MissingValue": "ncbi",
                "Public": false
              },
              {
                "ModuleName": "Abricate",
                "ParmName": "OmitStep",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Abricate",
                "ParmName": "PublishOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Abricate",
                "ParmName": "IgnoreError",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Abricate",
                "ParmName": "IncludeOutput",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Abricate",
                "ParmName": "IsDocker",
                "DefaultValue": null,
                "UserValue": "False",
                "Description": null,
                "ComboValues": "True|False",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Abricate",
                "ParmName": "IgnoreExitCode",
                "DefaultValue": null,
                "UserValue": "",
                "Description": "IgnoreExitCode",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Abricate",
                "ParmName": "IncludeStandardOutput",
                "DefaultValue": null,
                "UserValue": "",
                "Description": "IncludeStandardOutput",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              },
              {
                "ModuleName": "Abricate",
                "ParmName": "IsSlurm",
                "DefaultValue": null,
                "UserValue": "True",
                "Description": "IsSlurm",
                "ComboValues": "true|",
                "Optional": false,
                "ReadOnly": false,
                "Hidden": false,
                "DeleteFlag": false,
                "DataType": 1,
                "Validator": null,
                "Extensions": null,
                "MissingValue": null,
                "Public": true
              }
            ],
            "DockerMountMap": [],
            "DockerImage": "megashipper/abricateenv",
            "UserVariableList": {},
            "IsDocker": false,
            "IsSLURM": true,
            "Slurm_Resource_Request": 2,
            "Slurm_Min_Resources": {
              "CPUs": 2,
              "MemoryGB": 4,
              "Hours": 0.300000012
            },
            "Slurm_Moderate_Resources": {
              "CPUs": 6,
              "MemoryGB": 16,
              "Hours": 0.75
            },
            "Slurm_Max_Resources": {
              "CPUs": 16,
              "MemoryGB": 64,
              "Hours": 2
            },
            "WDL_Task": null,
            "WDL_Task_Inputs": null,
            "WDL_Task_Outputs": null,
            "CaseNumberList_JSON": "",
            "CaseNumberList_csv": ""
          }
        ]
      },
      "LastUpdate": "2024-02-03T06:29:24.5330054-06:00",
      "LastAuthor": "AGB465",
      "FindFolders": true,
      "InterfaceAdaptive": false,
      "CommandList": [
        {
          "CommandToken": "D1C1",
          "FlowScriptToken": "Compress",
          "Command": "count=\u0060ls -1 /mnt/e/data/Dreamer/PDS_Diagnostics_2022/PDS2221084-2_Brucella_ovis_6Jul22_II/PDS2221084-2_Brucella_ovis_6Jul22_II/20220706_1235_X4_FAT43517_2f710a8b/fastq_pass/*.fastq 2\u003E/dev/null | wc -l\u0060\nif [ $count != 0 ]\nthen \ncat /mnt/e/data/Dreamer/PDS_Diagnostics_2022/PDS2221084-2_Brucella_ovis_6Jul22_II/PDS2221084-2_Brucella_ovis_6Jul22_II/20220706_1235_X4_FAT43517_2f710a8b/fastq_pass/*.fastq \u003E /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/DragonFlye_Assembly/D1C1/fastq_pass.fastq\ngzip -f /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/DragonFlye_Assembly/D1C1/fastq_pass.fastq 2\u003E\u00261 \u003E /dev/null;\nfi \n\ncount=\u0060ls -1 /mnt/e/data/Dreamer/PDS_Diagnostics_2022/PDS2221084-2_Brucella_ovis_6Jul22_II/PDS2221084-2_Brucella_ovis_6Jul22_II/20220706_1235_X4_FAT43517_2f710a8b/fastq_pass/*.fastq.gz 2\u003E/dev/null | wc -l\u0060\nif [ $count != 0 ]\nthen \ncat /mnt/e/data/Dreamer/PDS_Diagnostics_2022/PDS2221084-2_Brucella_ovis_6Jul22_II/PDS2221084-2_Brucella_ovis_6Jul22_II/20220706_1235_X4_FAT43517_2f710a8b/fastq_pass/*.fastq.gz \u003E /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/DragonFlye_Assembly/D1C1/fastq_pass.fastq.gz\nfi\n",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": false,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        },
        {
          "CommandToken": "D1C2",
          "FlowScriptToken": "nanoq",
          "Command": "conda run -n dragonflye nanoq --min-len 1000 -r /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/DragonFlye_Assembly/D1C2/nanoq_report.txt -H --input /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/DragonFlye_Assembly/D1C1/*.fastq* --min-qual 0  1\u003E /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/DragonFlye_Assembly/D1C2/READS.filt.fq \nrm /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/DragonFlye_Assembly/D1C2/READS.filt.fq\n",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": false,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [
            "D1C1"
          ],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        },
        {
          "CommandToken": "D1C3",
          "FlowScriptToken": "DragonFlye",
          "Command": "conda run -n dragonflye dragonflye --force  --cpus 4 --assembler flye  --nanohq --medaka 1 --model r103_fast_g507 --racon 1 --reads /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/DragonFlye_Assembly/D1C1/fastq_pass.fastq* --outdir /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/DragonFlye_Assembly/D1C3/ 0",
          "IsNoop": false,
          "CondaPrefix": "dragonflye",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": true,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": {
            "ExitCode": 0,
            "StandardOutput": null,
            "StandardError": null,
            "LastCommand": null,
            "RestartCount": 0
          },
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": {
            "Command": 0,
            "DBFileName": null,
            "DBPath": null,
            "Dataset": {
              "SequenceList": [],
              "Standard_Reference_Sequence": "",
              "Standard_Reference_Name": ""
            },
            "DatasetName": "",
            "FindIn": "",
            "FindOut": "",
            "Sample": {
              "SampleName": "",
              "SampleDetail": null,
              "LIMSCaseNumber": null,
              "LIMSTestID": null,
              "LIMSSampleID": null,
              "Sequence": null,
              "SampleFileName": null
            }
          },
          "Prereqs": [
            "D1C1"
          ],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        }
      ],
      "RemoveReads": false,
      "SLURM_IsAvailable": false
    }
  ]
}