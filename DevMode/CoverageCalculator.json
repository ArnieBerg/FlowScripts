{
  "FlowScriptName": "CoverageCalculator",
  "TestConfig": {},
  "SubmissionTimeStamp": "0707023616",
  "LockUsername": null,
  "Comment": "This is the Coverage Calculator FlowScript.",
  "DataSourceType": 2,
  "SerializeDataSteps": false,
  "SampleList": {
    "barcode10_2038528-1": "1[S]/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode10_2038528-1/",
    "barcode11_2037403-1": "1[S]/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode11_2037403-1/",
    "barcode12_2038061-1": "1[S]/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode12_2038061-1/",
    "barcode7_2037399-4": "1[S]/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode7_2037399-4/",
    "barcode8_2038546-2": "1[S]/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode8_2038546-2/",
    "barcode9_2038054-2": "1[S]/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode9_2038054-2/"
  },
  "SequenceList": [],
  "SequenceListChecked": [],
  "SequenceDatabaseName": "hpsuis",
  "ParameterFilesToUpload": {
    "[S]/mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Blast/mbandaka.fna": null
  },
  "ParameterFoldersToUpload": {
    "/mnt/e/data/reference/bakta_db/db": null
  },
  "SequenceDBPathLinux": "/mnt/e/data/database/hpsuis",
  "SequenceDBPath": "/mnt/e/data/database/hpsuis/hpsuis.fasta",
  "SamplesFromLocalDevice": {},
  "SamplesToTransform": {},
  "IsLinux": false,
  "CanRunInLinux": true,
  "DockerBaseImage": "megashipper/coveragecalculatorenv",
  "Parameters": "CovCalc_Report@[OmitStep=False]\r\nCovCalc_Report@[PublishOutput=False]\r\nCovCalc_Report@[IgnoreError=False]\r\nCovCalc_Report@[IncludeOutput=True]\r\nCovCalc_Report@[IsDocker=True]\r\nCovCalc@[OmitStep=False]\r\nCovCalc@[PublishOutput=False]\r\nCovCalc@[IgnoreError=False]\r\nCovCalc@[IncludeOutput=True]\r\nCovCalc@[IsDocker=True]\r\nCovCalc_Publish@[OmitStep=False]\r\nCovCalc_Publish@[PublishOutput=True]\r\nCovCalc_Publish@[IgnoreError=False]\r\nCovCalc_Publish@[IncludeOutput=False]\r\nCovCalc_Publish@[IsDocker=False]\r\nCovCalc_Annot@[OmitStep=False]\r\nCovCalc_Annot@[PublishOutput=False]\r\nCovCalc_Annot@[IgnoreError=False]\r\nCovCalc_Annot@[IncludeOutput=True]\r\nCovCalc_Annot@[IsDocker=True]\r\n",
  "OutputPath": "[S]E:\\data\\Jimmy\\covcalc_test\\",
  "StartWithScript": "Data",
  "ScriptModulesInFlowScript": {
    "GlobalScriptModules": [
      {
        "ModuleName": "CovCalc",
        "LockUsername": null,
        "Comment": "",
        "WslCommand": {
          "CommandToken": "D1C2",
          "FlowScriptToken": null,
          "Command": "# global vars\r\nformat=@[sequence_format=fasta]\r\nreference=$[I{CovCalc_Annot}.]Reference.fa\r\ncombined_input=$[O.]$[V.[SampleName]].${format}\r\noutdir=$[O.]\r\noutput_bed=$outdir/bed/$[V.[SampleName]].bedgraph\r\n\r\n# combine multi-file inputs into a single file\r\nif [[ format == \u0022fasta\u0022 ]]; then \r\n  ## enable multiple extensions for fasta formats\r\n  cat $(find $[D.[SamplePath]] -name \u0027*.fa\u0027 -or -name \u0027*.fasta\u0027) \u003E $combined_input\r\nelse\r\n  cat $[D.[SamplePath]]*.${format} \u003E $combined_input\r\nfi\r\n\r\n# create output subdirectories\r\nmkdir -p $outdir/bed\r\n\r\n# activate required conda environment\r\nsource /opt/conda/bin/activate cov_calc\r\n\r\n# run alignment with minimap2 and use bedtools to calculate alignment coverage\r\nminimap2 -ax map-ont -t @[threads=16] $reference $combined_input | samtools view -@ @[threads=16] -b | samtools sort | bedtools genomecov -ibam - -bg \u003E $output_bed",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": false,
          "IsSlurm": false,
          "IsDocker": true,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": null,
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": null,
          "Prereqs": [
            "CovCalc_Annot",
            "Data"
          ],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        },
        "PublishOutput": false,
        "ConsolidateInput": false,
        "ConsolidatedCmdToken": "",
        "ExpectSamplesHeader": false,
        "RunAfterALLPrereqs": false,
        "RunAfterALLCmdToken": "",
        "OmitStep": false,
        "LastUpdate": "2023-04-24T16:04:41.0125081-06:00",
        "LastAuthor": "SQA032",
        "ScriptParmsList": [
          {
            "ModuleName": "CovCalc",
            "ParmName": "threads",
            "DefaultValue": "16",
            "UserValue": "32",
            "Description": "Number of CPU threads to allocate.",
            "ComboValues": null,
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 2,
            "Validator": null,
            "Extensions": "",
            "MissingValue": "",
            "Public": false
          },
          {
            "ModuleName": "CovCalc",
            "ParmName": "sequence_format",
            "DefaultValue": "fasta",
            "UserValue": "fastq",
            "Description": "Format of input sequence",
            "ComboValues": "fasta|fastq|fastq.gz",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 4,
            "Validator": null,
            "Extensions": "",
            "MissingValue": "",
            "Public": false
          },
          {
            "ModuleName": "CovCalc",
            "ParmName": "OmitStep",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc",
            "ParmName": "PublishOutput",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc",
            "ParmName": "IgnoreError",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc",
            "ParmName": "IncludeOutput",
            "DefaultValue": null,
            "UserValue": "True",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc",
            "ParmName": "IsDocker",
            "DefaultValue": null,
            "UserValue": "True",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          }
        ],
        "DockerMountMap": [
          "/mnt/c/BioSeqDB/WSLProxyRoot/SQA032/Work/"
        ],
        "DockerImage": null,
        "UserVariableList": {},
        "IsDocker": true,
        "IsSLURM": true,
        "Slurm_Resource_Request": 0,
        "Slurm_Min_Resources": null,
        "Slurm_Moderate_Resources": null,
        "Slurm_Max_Resources": null,
        "WDL_Task": null,
        "WDL_Task_Inputs": null,
        "WDL_Task_Outputs": null,
        "CaseNumberList_JSON": null,
        "CaseNumberList_csv": null
      },
      {
        "ModuleName": "CovCalc_Publish",
        "LockUsername": null,
        "Comment": "",
        "WslCommand": {
          "CommandToken": "",
          "FlowScriptToken": null,
          "Command": "cp $[I.]coverage_report.html $[O.]\r\ncp -r $[I.]bed $[O.]",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": false,
          "IsParallel": false,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": null,
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": null,
          "Prereqs": [
            "CovCalc_Report"
          ],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        },
        "PublishOutput": true,
        "ConsolidateInput": false,
        "ConsolidatedCmdToken": "",
        "ExpectSamplesHeader": false,
        "RunAfterALLPrereqs": true,
        "RunAfterALLCmdToken": "",
        "OmitStep": false,
        "LastUpdate": "2023-04-24T16:04:41.0125081-06:00",
        "LastAuthor": "SQA032",
        "ScriptParmsList": [
          {
            "ModuleName": "CovCalc_Publish",
            "ParmName": "OmitStep",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc_Publish",
            "ParmName": "PublishOutput",
            "DefaultValue": null,
            "UserValue": "True",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc_Publish",
            "ParmName": "IgnoreError",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc_Publish",
            "ParmName": "IncludeOutput",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc_Publish",
            "ParmName": "IsDocker",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          }
        ],
        "DockerMountMap": [],
        "DockerImage": null,
        "UserVariableList": {},
        "IsDocker": false,
        "IsSLURM": true,
        "Slurm_Resource_Request": 0,
        "Slurm_Min_Resources": null,
        "Slurm_Moderate_Resources": null,
        "Slurm_Max_Resources": null,
        "WDL_Task": null,
        "WDL_Task_Inputs": null,
        "WDL_Task_Outputs": null,
        "CaseNumberList_JSON": null,
        "CaseNumberList_csv": null
      },
      {
        "ModuleName": "CovCalc_Annot",
        "LockUsername": null,
        "Comment": "",
        "WslCommand": {
          "CommandToken": "D1C1",
          "FlowScriptToken": null,
          "Command": "# global vars\r\ninput_reference=@[reference=]\r\noutput_reference=$[O.]Reference.fa\r\noutdir=$[O.]\r\n\r\ncp @[reference=] $[O.]Reference.fa\r\n\r\n# index reference sequence\r\nconda run -n cov_calc samtools faidx $[O.]Reference.fa\r\n\r\n# create reference bed file\r\nawk \u0027BEGIN {FS=\u0022\\t\u0022}; {print $1 FS \u00220\u0022 FS $2}\u0027 $[O.]Reference.fa.fai \u003E $[O.]Reference.bed\r\n\r\n# run genome annotation on output reference if invoked\r\nif [[ \u0027@[Annot=--annot]\u0027 == \u0027--annot\u0027 ]]; then\r\n    conda run -n cov_calc bakta \\\r\n    --db @[db=/mnt/e/data/reference/bakta_db/db] \\\r\n    --genus $(echo @[Organism=] | cut -f1 -d\u0027 \u0027) \\\r\n    --species $(echo @[Organism=] | cut -f2 -d\u0027 \u0027) \\\r\n    --gram @[gram=-] \\\r\n    --keep-contig-headers \\\r\n    --threads @[threads=16] \\\r\n    --output $outdir \\\r\n    --prefix Reference \\\r\n    @[reference=]\r\nfi",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": false,
          "IsSlurm": false,
          "IsDocker": true,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": null,
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": null,
          "Prereqs": [
            "Data"
          ],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        },
        "PublishOutput": false,
        "ConsolidateInput": true,
        "ConsolidatedCmdToken": "D1C1",
        "ExpectSamplesHeader": false,
        "RunAfterALLPrereqs": false,
        "RunAfterALLCmdToken": "",
        "OmitStep": false,
        "LastUpdate": "2023-04-24T16:04:41.0125081-06:00",
        "LastAuthor": "SQA032",
        "ScriptParmsList": [
          {
            "ModuleName": "CovCalc_Annot",
            "ParmName": "Annot",
            "DefaultValue": "--annot",
            "UserValue": "",
            "Description": "Run gene annotation on reference sequence.",
            "ComboValues": "--annot",
            "Optional": true,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": "",
            "MissingValue": "",
            "Public": false
          },
          {
            "ModuleName": "CovCalc_Annot",
            "ParmName": "Organism",
            "DefaultValue": "",
            "UserValue": "",
            "Description": "Organism name of reference sequence (include genus and species name).",
            "ComboValues": null,
            "Optional": true,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 0,
            "Validator": null,
            "Extensions": "",
            "MissingValue": "",
            "Public": false
          },
          {
            "ModuleName": "CovCalc_Annot",
            "ParmName": "gram",
            "DefaultValue": "-",
            "UserValue": "-",
            "Description": "Indicate if the organism of reference sequence is gram negative (-), gram positive (\u002B) or unknown (?)",
            "ComboValues": "-|\u002B|?",
            "Optional": true,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 4,
            "Validator": null,
            "Extensions": "",
            "MissingValue": "",
            "Public": false
          },
          {
            "ModuleName": "CovCalc_Annot",
            "ParmName": "threads",
            "DefaultValue": "16",
            "UserValue": "16",
            "Description": "Number of CPU threads to allocate.",
            "ComboValues": null,
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 2,
            "Validator": null,
            "Extensions": "",
            "MissingValue": "",
            "Public": false
          },
          {
            "ModuleName": "CovCalc_Annot",
            "ParmName": "reference",
            "DefaultValue": "",
            "UserValue": "[S]/mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Blast/mbandaka.fna",
            "Description": "Path to reference sequence.",
            "ComboValues": null,
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 5,
            "Validator": null,
            "Extensions": "fasta|",
            "MissingValue": "",
            "Public": false
          },
          {
            "ModuleName": "CovCalc_Annot",
            "ParmName": "db",
            "DefaultValue": "/mnt/e/data/reference/bakta_db/db",
            "UserValue": "/mnt/e/data/reference/bakta_db/db",
            "Description": "",
            "ComboValues": null,
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 6,
            "Validator": null,
            "Extensions": "txt|",
            "MissingValue": "",
            "Public": false
          },
          {
            "ModuleName": "CovCalc_Annot",
            "ParmName": "OmitStep",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc_Annot",
            "ParmName": "PublishOutput",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc_Annot",
            "ParmName": "IgnoreError",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc_Annot",
            "ParmName": "IncludeOutput",
            "DefaultValue": null,
            "UserValue": "True",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc_Annot",
            "ParmName": "IsDocker",
            "DefaultValue": null,
            "UserValue": "True",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          }
        ],
        "DockerMountMap": [
          "/mnt/c/BioSeqDB/WSLProxyRoot/SQA032/Work/"
        ],
        "DockerImage": null,
        "UserVariableList": {},
        "IsDocker": true,
        "IsSLURM": true,
        "Slurm_Resource_Request": 0,
        "Slurm_Min_Resources": null,
        "Slurm_Moderate_Resources": null,
        "Slurm_Max_Resources": null,
        "WDL_Task": "task CovCalc_Annot {\r\n  input {\r\n }\r\n  command \u003C\u003C\u003C\r\n  # global vars\r\ninput_reference=@[reference=]\r\noutput_reference=Reference.fa\r\noutdir=\r\n# create symlink of reference sequence in work dir\r\n#ln -s $input_reference $output_reference\r\ncp @[reference=] Reference.fa\r\n# index reference sequence\r\nconda run -n cov_calc samtools faidx Reference.fa\r\n# create reference bed file\r\nawk \u0027BEGIN {FS=\u0022\\t\u0022}; {print $1 FS \u00220\u0022 FS $2}\u0027 Reference.fa.fai \u003E Reference.bed\r\n# run genome annotation on output reference if invoked\r\nif [[ \u0027@[Annot=--annot]\u0027 == \u0027--annot\u0027 ]]; then\r\n    conda run -n cov_calc bakta \\\r\n    --db @[db=/mnt/e/data/reference/bakta_db/db] \\\r\n    --genus $(echo @[Organism=] | cut -f1 -d\u0027 \u0027) \\\r\n    --species $(echo @[Organism=] | cut -f2 -d\u0027 \u0027) \\\r\n    --gram @[gram=-] \\\r\n    --keep-contig-headers \\\r\n    --threads @[threads=16] \\\r\n    --output $outdir \\\r\n    --prefix Reference \\\r\n    @[reference=]\r\nfi \u003E\u003E\u003E\r\n  output {\r\n    }\r\n}\r\n",
        "WDL_Task_Inputs": [],
        "WDL_Task_Outputs": [],
        "CaseNumberList_JSON": null,
        "CaseNumberList_csv": null
      },
      {
        "ModuleName": "CovCalc_Report",
        "LockUsername": null,
        "Comment": "",
        "WslCommand": {
          "CommandToken": "",
          "FlowScriptToken": null,
          "Command": "# I/O\r\nbedgraph_dir=$[O.]bed\r\nreference_fa=$[I{CovCalc_Annot}.]Reference.fa\r\nreference_bed=$[I{CovCalc_Annot}.]Reference.bed\r\noutput_html=$[O.]coverage_report.html\r\n\r\n# consolidaate all bedgraphs into a single output directory\r\n#FS ForEachPrereq CovCalc\r\ncp -r $[I{CovCalc}.]bed $[O.]\r\n#FS End\r\n\r\n# check if gff was generated\r\nif test -f $[I{CovCalc_Annot}.]Reference.gff3; then\r\ntracks_path=\u0022$[I{CovCalc_Annot}.]Reference.gff3 $(find ${bedgraph_dir} -name \u0027*.bedgraph\u0027)\u0022\r\nelse\r\ntracks_path=$(find ${bedgraph_dir} -name \u0027*.bedgraph\u0027)\r\nfi\r\n\r\n# main\r\nconda run -n cov_calc create_report ${reference_bed} ${reference_fa} \\\r\n            --tracks ${tracks_path} \\\r\n            --output ${output_html}",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": false,
          "IsSlurm": false,
          "IsDocker": true,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": null,
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": null,
          "Prereqs": [
            "CovCalc",
            "CovCalc_Annot"
          ],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        },
        "PublishOutput": false,
        "ConsolidateInput": false,
        "ConsolidatedCmdToken": "",
        "ExpectSamplesHeader": false,
        "RunAfterALLPrereqs": true,
        "RunAfterALLCmdToken": "",
        "OmitStep": false,
        "LastUpdate": "2023-04-24T16:04:41.0125081-06:00",
        "LastAuthor": "SQA032",
        "ScriptParmsList": [
          {
            "ModuleName": "CovCalc_Report",
            "ParmName": "OmitStep",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc_Report",
            "ParmName": "PublishOutput",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc_Report",
            "ParmName": "IgnoreError",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc_Report",
            "ParmName": "IncludeOutput",
            "DefaultValue": null,
            "UserValue": "True",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "CovCalc_Report",
            "ParmName": "IsDocker",
            "DefaultValue": null,
            "UserValue": "True",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          }
        ],
        "DockerMountMap": [
          "/mnt/c/BioSeqDB/WSLProxyRoot/SQA032/Work/"
        ],
        "DockerImage": null,
        "UserVariableList": {},
        "IsDocker": true,
        "IsSLURM": true,
        "Slurm_Resource_Request": 0,
        "Slurm_Min_Resources": null,
        "Slurm_Moderate_Resources": null,
        "Slurm_Max_Resources": null,
        "WDL_Task": null,
        "WDL_Task_Inputs": null,
        "WDL_Task_Outputs": null,
        "CaseNumberList_JSON": null,
        "CaseNumberList_csv": null
      }
    ]
  },
  "LastUpdate": "2023-07-07T15:01:48.6111028-06:00",
  "LastAuthor": "SQA032",
  "FindFolders": true,
  "InterfaceAdaptive": false,
  "CommandList": [
    {
      "CommandToken": "D1C1",
      "FlowScriptToken": "CovCalc_Annot",
      "Command": "touch /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/SampleList.csv \u0026\u0026 rm /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/SampleList.csv\ntouch /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/SequenceList.csv \u0026\u0026 rm /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/SequenceList.csv\necho barcode10_2038528-1,/mnt/e/data/Dreamer/Salmonella_serotyping/2020/Salmonella_serotyping_Flongle_18Dec20DT/Salmonella_Flongle__18Dec20DT/20201218_1555_X2_AEN813_ca832291/fastq_pass/barcode10_2038528-1/ \u003E\u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/SampleList.csv\n# global vars\ninput_reference=/mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Blast/mbandaka.fna\noutput_reference=/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/Reference.fa\noutdir=/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/\n# create symlink of reference sequence in work dir\n#ln -s $input_reference $output_reference\ncp /mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Blast/mbandaka.fna /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/Reference.fa\n# index reference sequence\nconda run -n cov_calc samtools faidx /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/Reference.fa\n# create reference bed file\nawk \u0027BEGIN {FS=\u0022\\t\u0022}; {print $1 FS \u00220\u0022 FS $2}\u0027 /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/Reference.fa.fai \u003E /mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/CoverageCalculator_0531014156/D1C1/Reference.bed\n# run genome annotation on output reference if invoked\nif [[ \u0027\u0027 == \u0027--annot\u0027 ]]; then\n    conda run -n cov_calc bakta \\\n    --db /mnt/e/data/reference/bakta_db/db \\\n    --genus $(echo  | cut -f1 -d\u0027 \u0027) \\\n    --species $(echo  | cut -f2 -d\u0027 \u0027) \\\n    --gram - \\\n    --keep-contig-headers \\\n    --threads 16 \\\n    --output $outdir \\\n    --prefix Reference \\\n    /mnt/e/data/Ruwani_Novel_Salmonella_Project_2022/Blast/mbandaka.fna\nfi\n",
      "IsNoop": false,
      "CondaPrefix": "",
      "Parms": [],
      "IncludeStandardOutput": true,
      "IsParallel": true,
      "IsSlurm": false,
      "IsDocker": true,
      "IsLinux": false,
      "LinuxJobRunning": false,
      "SlurmJobID": null,
      "SlurmParms": null,
      "WindowsWorkPath": null,
      "IgnoreExitCode": false,
      "WSLResponse": {
        "ExitCode": 0,
        "StandardOutput": null,
        "StandardError": null,
        "LastCommand": null,
        "RestartCount": 0
      },
      "ConditionRun": null,
      "ExitCodeConditionGoto": "",
      "Preprocess": null,
      "StandardOutputConditionGoto": "",
      "HDF_Command": {
        "Command": 0,
        "DBFileName": null,
        "DBPath": null,
        "Dataset": {
          "SequenceList": [],
          "Standard_Reference_Sequence": "",
          "Standard_Reference_Name": ""
        },
        "DatasetName": "",
        "FindIn": "",
        "FindOut": "",
        "Sample": {
          "SampleName": "",
          "SampleDetail": null,
          "LIMSCaseNumber": null,
          "LIMSTestID": null,
          "LIMSSampleID": null,
          "Sequence": null,
          "SampleFileName": null
        }
      },
      "Prereqs": [],
      "Thread": 0,
      "StandardOutputBypass": "",
      "WDL": "  call CovCalc_Annot as D1C1 {\r\n    input\r\n   }\r\n"
    }
  ],
  "RemoveReads": false,
  "SLURM_IsAvailable": false
}