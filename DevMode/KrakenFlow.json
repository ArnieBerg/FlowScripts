{
  "FlowScriptName": "KrakenFlow",
  "TestConfig": {},
  "SubmissionTimeStamp": "0707091400",
  "LockUsername": null,
  "Comment": "Depending on the type of input (fasta or fastq), KrakenFlow will analyze from either assemblies or reads.\r\nDo taxonomy analysis on aggregate of all kraken aggregates.",
  "DataSourceType": 1,
  "SerializeDataSteps": false,
  "SampleList": {
    "2039421": "1[S]/mnt/e/data/Arnie/2039421/"
  },
  "SequenceList": [],
  "SequenceListChecked": [],
  "SequenceDatabaseName": "Brucella_Arnie",
  "ParameterFilesToUpload": {},
  "ParameterFoldersToUpload": {},
  "SequenceDBPathLinux": "[S]/mnt/e/data/database/Brucella_Arnie",
  "SequenceDBPath": "[S]E:\\data\\database\\\\Brucella_Arnie\\Brucella_Arnie.fasta",
  "SamplesFromLocalDevice": {
    "consensus": "1[L]/mnt/c/Temp/consensus/"
  },
  "SamplesToTransform": {},
  "IsLinux": true,
  "CanRunInLinux": true,
  "DockerBaseImage": "bioseqenv.0.3",
  "Parameters": "Krona Combined Publish@[mag_Col=3]\r\nKrona Combined Publish@[taxID_Col=5]\r\nKrona Combined Publish@[OmitStep=False]\r\nKrona Combined Publish@[PublishOutput=True]\r\nKrona Combined Publish@[IgnoreError=False]\r\nKrona Combined Publish@[IncludeOutput=True]\r\nKrona Combined Publish@[IsDocker=True]\r\nKraken2@[OmitStep=False]\r\nKraken2@[PublishOutput=True]\r\nKraken2@[IgnoreError=False]\r\nKraken2@[IncludeOutput=True]\r\nKraken2@[IsDocker=True]\r\n",
  "OutputPath": "[S]E:\\data\\Arnie\\KrakenResults\\",
  "StartWithScript": "Data",
  "ScriptModulesInFlowScript": {
    "GlobalScriptModules": [
      {
        "ModuleName": "Compress",
        "LockUsername": null,
        "Comment": null,
        "WslCommand": {
          "CommandToken": "D1C1",
          "FlowScriptToken": null,
          "Command": "count=\u0060ls -1 $[D.[SamplePath]]*.fastq 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq \u003E $[O.]$[V.[SampleName]].fastq\r\ngzip -f $[O.]$[V.[SampleName]].fastq 2\u003E\u00261 \u003E /dev/null;\r\nfi \r\ncount=\u0060ls -1 $[D.[SamplePath]]*.fastq.gz 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat $[D.[SamplePath]]*.fastq.gz \u003E $[O.]$[V.[SampleName]].fastq.gz\r\nfi",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": false,
          "IsParallel": false,
          "IsSlurm": false,
          "IsDocker": false,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": null,
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": null,
          "Prereqs": [
            "Data"
          ],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        },
        "PublishOutput": false,
        "ConsolidateInput": false,
        "ConsolidatedCmdToken": "",
        "ExpectSamplesHeader": false,
        "RunAfterALLPrereqs": false,
        "RunAfterALLCmdToken": "",
        "OmitStep": false,
        "LastUpdate": "2022-04-06T06:45:00.6544378-06:00",
        "LastAuthor": "AGB465",
        "ScriptParmsList": [],
        "DockerMountMap": [],
        "DockerImage": null,
        "UserVariableList": {},
        "IsDocker": false,
        "IsSLURM": true,
        "Slurm_Resource_Request": 0,
        "Slurm_Min_Resources": null,
        "Slurm_Moderate_Resources": null,
        "Slurm_Max_Resources": null,
        "WDL_Task": "task Compress {\r\n  input {\r\n    String SamplePath\r\n    String SampleName\r\n }\r\n  command \u003C\u003C\u003C\r\n  count=\u0060ls -1 ~{SamplePath}*.fastq 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat ~{SamplePath}*.fastq \u003E ~{SampleName}.fastq\r\ngzip -f ~{SampleName}.fastq 2\u003E\u00261 \u003E /dev/null;\r\nfi \r\ncount=\u0060ls -1 ~{SamplePath}*.fastq.gz 2\u003E/dev/null | wc -l\u0060\r\nif [ $count != 0 ]\r\nthen \r\ncat ~{SamplePath}*.fastq.gz \u003E ~{SampleName}.fastq.gz\r\nfi \u003E\u003E\u003E\r\n  output {\r\n    }\r\n}\r\n",
        "WDL_Task_Inputs": [
          "String SamplePath",
          "String SampleName"
        ],
        "WDL_Task_Outputs": [],
        "CaseNumberList_JSON": null,
        "CaseNumberList_csv": null
      },
      {
        "ModuleName": "Kraken2",
        "LockUsername": null,
        "Comment": "",
        "WslCommand": {
          "CommandToken": "D1C2",
          "FlowScriptToken": null,
          "Command": "mkdir $[O.]$[V.[SampleName]]\r\n#FS DockerMap /mnt/e/data/reference/databases/\r\n# The gzip file will be available, we don\u0027t need to check the count in the original data sample folder.\r\n# Compress will have compressed the fastq files.\r\n\r\nconda run -n kraken2 kraken2  --db @[db=/mnt/e/data/reference/databases/minikraken2_v1_8GB/] --threads @[threads=8] --report $[O.]$[V.[SampleName]]/kraken.aggregates.txt --use-names --output $[O.]$[V.[SampleName]]/kraken.txt $[I.]$[V.[SampleName]].fastq.gz",
          "IsNoop": false,
          "CondaPrefix": "phame",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": false,
          "IsSlurm": false,
          "IsDocker": true,
          "IsLinux": true,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": null,
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": null,
          "Prereqs": [
            "Compress"
          ],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        },
        "PublishOutput": true,
        "ConsolidateInput": false,
        "ConsolidatedCmdToken": "",
        "ExpectSamplesHeader": false,
        "RunAfterALLPrereqs": false,
        "RunAfterALLCmdToken": "",
        "OmitStep": false,
        "LastUpdate": "2022-06-26T05:20:15.811676-06:00",
        "LastAuthor": "AGB465",
        "ScriptParmsList": [
          {
            "ModuleName": "Kraken2",
            "ParmName": "db",
            "DefaultValue": "/mnt/e/data/reference/databases/minikraken2_v1_8GB/",
            "UserValue": "/mnt/e/data/reference/databases/kraken2-microbial/",
            "Description": "",
            "ComboValues": "/mnt/e/data/reference/databases/minikraken2_v1_8GB/|/mnt/e/data/reference/databases/kraken2-microbial/",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 4,
            "Validator": null,
            "Extensions": "",
            "MissingValue": "",
            "Public": false
          },
          {
            "ModuleName": "Kraken2",
            "ParmName": "threads",
            "DefaultValue": "8",
            "UserValue": "8",
            "Description": "",
            "ComboValues": null,
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 2,
            "Validator": null,
            "Extensions": "",
            "MissingValue": "",
            "Public": false
          },
          {
            "ModuleName": "Kraken2",
            "ParmName": "OmitStep",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "Kraken2",
            "ParmName": "PublishOutput",
            "DefaultValue": null,
            "UserValue": "True",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "Kraken2",
            "ParmName": "IgnoreError",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "Kraken2",
            "ParmName": "IncludeOutput",
            "DefaultValue": null,
            "UserValue": "True",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "Kraken2",
            "ParmName": "IsDocker",
            "DefaultValue": null,
            "UserValue": "True",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          }
        ],
        "DockerMountMap": [
          "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
        ],
        "DockerImage": null,
        "UserVariableList": {},
        "IsDocker": true,
        "IsSLURM": true,
        "Slurm_Resource_Request": 0,
        "Slurm_Min_Resources": null,
        "Slurm_Moderate_Resources": null,
        "Slurm_Max_Resources": null,
        "WDL_Task": "task Kraken2 {\r\n  input {\r\n    String SampleName\r\n    File Compress\r\n }\r\n  command \u003C\u003C\u003C\r\n  mkdir ~{SampleName}\r\n#FS DockerMap /mnt/e/data/reference/referenceDB/minikraken2_v1_8GB/\r\n# The gzip file will be available, we don\u0027t need to check the count in the original data sample folder.\r\n# Compress will have compressed the fastq files.\r\nconda run -n kraken2 kraken2  --db /mnt/e/data/reference/referenceDB/minikraken2_v1_8GB/ --threads @[threads=8] --report ~{SampleName}/kraken.aggregates.txt --use-names --output ~{SampleName}/kraken.txt ~{Compress}~{SampleName}.fastq.gz \u003E\u003E\u003E\r\n  output {\r\n    }\r\n}\r\n",
        "WDL_Task_Inputs": [
          "String SampleName",
          "File Compress"
        ],
        "WDL_Task_Outputs": [],
        "CaseNumberList_JSON": null,
        "CaseNumberList_csv": null
      },
      {
        "ModuleName": "Krona Combined Publish",
        "LockUsername": null,
        "Comment": "Do taxonomy analysis on aggregate of all kraken aggregates.",
        "WslCommand": {
          "CommandToken": "",
          "FlowScriptToken": null,
          "Command": "\r\n#FS ForEachPrereq\r\ncp $[I{Kraken2}.]$[V.[SampleName]]/kraken.aggregates.txt $[O.]$[V.[SampleName]].kraken.aggregates.txt\r\n#FS End\r\n\r\nconda run -n krona ktImportTaxonomy -tax  /mnt/e/data/reference/databases/taxonomy -t @[taxID_Col=5] -m @[mag_Col=3] -o $[O.]combined.html $[O.]*.kraken.aggregates.txt",
          "IsNoop": false,
          "CondaPrefix": "",
          "Parms": [],
          "IncludeStandardOutput": true,
          "IsParallel": false,
          "IsSlurm": false,
          "IsDocker": true,
          "IsLinux": false,
          "LinuxJobRunning": false,
          "SlurmJobID": null,
          "SlurmParms": null,
          "WindowsWorkPath": null,
          "IgnoreExitCode": false,
          "WSLResponse": null,
          "ConditionRun": null,
          "ExitCodeConditionGoto": "",
          "Preprocess": null,
          "StandardOutputConditionGoto": "",
          "HDF_Command": null,
          "Prereqs": [
            "Kraken2"
          ],
          "Thread": 0,
          "StandardOutputBypass": "",
          "WDL": null
        },
        "PublishOutput": true,
        "ConsolidateInput": false,
        "ConsolidatedCmdToken": null,
        "ExpectSamplesHeader": false,
        "RunAfterALLPrereqs": true,
        "RunAfterALLCmdToken": null,
        "OmitStep": false,
        "LastUpdate": "2023-07-03T10:02:16.133284-06:00",
        "LastAuthor": "AGB465",
        "ScriptParmsList": [
          {
            "ModuleName": "Krona Combined Publish",
            "ParmName": "mag_Col",
            "DefaultValue": "3",
            "UserValue": "3",
            "Description": "",
            "ComboValues": null,
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 2,
            "Validator": null,
            "Extensions": "",
            "MissingValue": "",
            "Public": false
          },
          {
            "ModuleName": "Krona Combined Publish",
            "ParmName": "taxID_Col",
            "DefaultValue": "5",
            "UserValue": "5",
            "Description": "",
            "ComboValues": null,
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 2,
            "Validator": null,
            "Extensions": "",
            "MissingValue": "",
            "Public": false
          },
          {
            "ModuleName": "Krona Combined Publish",
            "ParmName": "OmitStep",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "Krona Combined Publish",
            "ParmName": "PublishOutput",
            "DefaultValue": null,
            "UserValue": "True",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "Krona Combined Publish",
            "ParmName": "IgnoreError",
            "DefaultValue": null,
            "UserValue": "False",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "Krona Combined Publish",
            "ParmName": "IncludeOutput",
            "DefaultValue": null,
            "UserValue": "True",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          },
          {
            "ModuleName": "Krona Combined Publish",
            "ParmName": "IsDocker",
            "DefaultValue": null,
            "UserValue": "True",
            "Description": null,
            "ComboValues": "True|False",
            "Optional": false,
            "ReadOnly": false,
            "Hidden": false,
            "DeleteFlag": false,
            "DataType": 1,
            "Validator": null,
            "Extensions": null,
            "MissingValue": null,
            "Public": true
          }
        ],
        "DockerMountMap": [
          "/mnt/c/BioSeqDB/WSLProxyRoot/AGB465/Work/"
        ],
        "DockerImage": "megashipper/kronaenv",
        "UserVariableList": {},
        "IsDocker": true,
        "IsSLURM": true,
        "Slurm_Resource_Request": 0,
        "Slurm_Min_Resources": null,
        "Slurm_Moderate_Resources": null,
        "Slurm_Max_Resources": null,
        "WDL_Task": null,
        "WDL_Task_Inputs": null,
        "WDL_Task_Outputs": null,
        "CaseNumberList_JSON": null,
        "CaseNumberList_csv": null
      }
    ]
  },
  "LastUpdate": "2023-07-07T11:52:26.8410774-06:00",
  "LastAuthor": "AGB465",
  "FindFolders": true,
  "InterfaceAdaptive": false,
  "CommandList": [
    {
      "CommandToken": "D1C1",
      "FlowScriptToken": "Compress",
      "Command": "count=\u0060ls -1 /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/SamplesFromLocalDevice/consensus/*.fastq 2\u003E/dev/null | wc -l\u0060\nif [ $count != 0 ]\nthen \ncat /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/SamplesFromLocalDevice/consensus/*.fastq \u003E /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C1/consensus.fastq\ngzip -f /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C1/consensus.fastq 2\u003E\u00261 \u003E /dev/null;\nfi \ncount=\u0060ls -1 /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/SamplesFromLocalDevice/consensus/*.fastq.gz 2\u003E/dev/null | wc -l\u0060\nif [ $count != 0 ]\nthen \ncat /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/SamplesFromLocalDevice/consensus/*.fastq.gz \u003E /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C1/consensus.fastq.gz\nfi\n",
      "IsNoop": false,
      "CondaPrefix": "",
      "Parms": [],
      "IncludeStandardOutput": false,
      "IsParallel": true,
      "IsSlurm": false,
      "IsDocker": false,
      "IsLinux": false,
      "LinuxJobRunning": false,
      "SlurmJobID": null,
      "SlurmParms": null,
      "WindowsWorkPath": null,
      "IgnoreExitCode": false,
      "WSLResponse": {
        "ExitCode": 0,
        "StandardOutput": null,
        "StandardError": null,
        "LastCommand": null,
        "RestartCount": 0
      },
      "ConditionRun": null,
      "ExitCodeConditionGoto": "",
      "Preprocess": null,
      "StandardOutputConditionGoto": "",
      "HDF_Command": {
        "Command": 0,
        "DBFileName": null,
        "DBPath": null,
        "Dataset": {
          "SequenceList": [],
          "Standard_Reference_Sequence": "",
          "Standard_Reference_Name": ""
        },
        "DatasetName": "",
        "FindIn": "",
        "FindOut": "",
        "Sample": {
          "SampleName": "",
          "SampleDetail": null,
          "LIMSCaseNumber": null,
          "LIMSTestID": null,
          "LIMSSampleID": null,
          "Sequence": null,
          "SampleFileName": null
        }
      },
      "Prereqs": [],
      "Thread": 0,
      "StandardOutputBypass": "",
      "WDL": "  call Compress as D1C1 {\r\n    input:\r\n      SamplePath = \u0022/mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/SamplesFromLocalDevice/consensus/\u0022,\r\n      SampleName = \u0022consensus\u0022\r\n   }\r\n"
    },
    {
      "CommandToken": "D1C2",
      "FlowScriptToken": "Kraken2",
      "Command": "mkdir /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C2/consensus\n#FS DockerMap /mnt/e/data/reference/referenceDB/minikraken2_v1_8GB/\n# The gzip file will be available, we don\u0027t need to check the count in the original data sample folder.\n# Compress will have compressed the fastq files.\nconda run -n kraken2 kraken2  --db /mnt/e/data/reference/referenceDB/minikraken2_v1_8GB/ --threads 16 --report /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C2/consensus/kraken.aggregates.txt --use-names --output /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C2/consensus/kraken.txt /mnt/c/BioSeqDB/WSLProxyRoot/DHP565/Work/KrakenFlow_0604104139/D1C1/consensus.fastq.gz\n",
      "IsNoop": false,
      "CondaPrefix": "phame",
      "Parms": [],
      "IncludeStandardOutput": true,
      "IsParallel": true,
      "IsSlurm": false,
      "IsDocker": true,
      "IsLinux": false,
      "LinuxJobRunning": false,
      "SlurmJobID": null,
      "SlurmParms": null,
      "WindowsWorkPath": null,
      "IgnoreExitCode": true,
      "WSLResponse": {
        "ExitCode": 0,
        "StandardOutput": null,
        "StandardError": null,
        "LastCommand": null,
        "RestartCount": 0
      },
      "ConditionRun": null,
      "ExitCodeConditionGoto": "",
      "Preprocess": null,
      "StandardOutputConditionGoto": "",
      "HDF_Command": {
        "Command": 0,
        "DBFileName": null,
        "DBPath": null,
        "Dataset": {
          "SequenceList": [],
          "Standard_Reference_Sequence": "",
          "Standard_Reference_Name": ""
        },
        "DatasetName": "",
        "FindIn": "",
        "FindOut": "",
        "Sample": {
          "SampleName": "",
          "SampleDetail": null,
          "LIMSCaseNumber": null,
          "LIMSTestID": null,
          "LIMSSampleID": null,
          "Sequence": null,
          "SampleFileName": null
        }
      },
      "Prereqs": [
        "D1C1"
      ],
      "Thread": 0,
      "StandardOutputBypass": "",
      "WDL": "  call Kraken2 as D1C2 {\r\n    input:\r\n      SampleName = D1C1.SampleName\r\n   }\r\n"
    }
  ],
  "RemoveReads": false,
  "SLURM_IsAvailable": false
}